{
  "version": 3,
  "sources": ["../../@nlpjs/core/src/among.js", "../../@nlpjs/core/src/helper.js", "../../@nlpjs/core/src/default-compiler.js", "../../@nlpjs/core/src/logger.js", "../../@nlpjs/core/src/container.js", "../../@nlpjs/core/src/arr-to-obj.js", "../../@nlpjs/core/src/normalizer.js", "../../@nlpjs/core/src/tokenizer.js", "../../@nlpjs/core/src/base-stemmer.js", "../../@nlpjs/core/src/obj-to-arr.js", "../../@nlpjs/core/src/stemmer.js", "../../@nlpjs/core/src/stopwords.js", "../../@nlpjs/core/src/timer.js", "../../@nlpjs/core/src/clonable.js", "../../@nlpjs/core/src/memory-storage.js", "../../@nlpjs/core/src/mock-fs.js", "../../@nlpjs/core/src/container-bootstrap.js", "../../@nlpjs/core/src/uuid.js", "../../@nlpjs/core/src/dock.js", "../../@nlpjs/core/src/context.js", "../../@nlpjs/core/src/index.js", "../../@nlpjs/similarity/src/leven.js", "../../@nlpjs/similarity/src/similarity.js", "../../@nlpjs/similarity/src/cosine-similarity.js", "../../@nlpjs/similarity/src/spell-check.js", "../../@nlpjs/similarity/src/index.js", "../../@nlpjs/nlu/src/nlu.js", "../../@nlpjs/neural/src/lookup.js", "../../@nlpjs/neural/src/corpus-lookup.js", "../../@nlpjs/neural/src/neural-network.js", "../../@nlpjs/neural/src/index.js", "../../@nlpjs/nlu/src/nlu-neural.js", "../../@nlpjs/nlu/src/domain-manager.js", "../../@nlpjs/language-min/src/languages.json", "../../@nlpjs/language-min/src/data.json", "../../@nlpjs/language-min/src/language.js", "../../@nlpjs/language-min/src/index.js", "../../@nlpjs/nlu/src/nlu-manager.js", "../../@nlpjs/nlu/src/index.js", "../../@nlpjs/ner/src/trim-types.js", "../../@nlpjs/ner/src/reduce-edges.js", "../../@nlpjs/ner/src/extractor-enum.js", "../../@nlpjs/ner/src/extractor-regex.js", "../../@nlpjs/ner/src/extractor-trim.js", "../../@nlpjs/ner/src/extractor-builtin.js", "../../@nlpjs/ner/src/ner.js", "../../@nlpjs/ner/src/index.js", "../../@nlpjs/nlg/src/nlg-manager.js", "../../@nlpjs/nlg/src/action-manager.js", "../../@nlpjs/nlg/src/index.js", "../../@nlpjs/sentiment/src/sentiment-analyzer.js", "../../@nlpjs/sentiment/src/index.js", "../../@nlpjs/slot/src/slot-manager.js", "../../@nlpjs/slot/src/index.js", "../../@nlpjs/nlp/src/context-manager.js", "../../@nlpjs/nlp/src/nlp.js", "../../@nlpjs/nlp/src/index.js"],
  "sourcesContent": ["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Class for an Among of a Stemmer\n */\nclass Among {\n  constructor(s, sub, result, method, instance) {\n    this.s_size = s.length;\n    this.s = s;\n    this.substring_i = sub;\n    this.result = result;\n    this.method = method;\n    this.instance = instance;\n  }\n}\n\nmodule.exports = Among;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f';\nconst reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nconst rsComboMarksExtendedRange = '\\\\u1ab0-\\\\u1aff';\nconst rsComboMarksSupplementRange = '\\\\u1dc0-\\\\u1dff';\nconst rsComboRange =\n  rsComboMarksRange +\n  reComboHalfMarksRange +\n  rsComboSymbolsRange +\n  rsComboMarksExtendedRange +\n  rsComboMarksSupplementRange;\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboRange}]`;\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsZWJ = '\\\\u200d';\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join(\n  '|'\n)})${rsOptVar + reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsNonAstralCombo = `${rsNonAstral}${rsCombo}?`;\nconst rsSymbol = `(?:${[\n  rsNonAstralCombo,\n  rsCombo,\n  rsRegional,\n  rsSurrPair,\n  rsAstral,\n].join('|')})`;\n\n/* eslint-disable no-misleading-character-class */\nconst reHasUnicode = RegExp(\n  `[${rsZWJ + rsAstralRange + rsComboRange + rsVarRange}]`\n);\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol + rsSeq}`, 'g');\n/* eslint-enable no-misleading-character-class */\n\nconst hasUnicode = (str) => reHasUnicode.test(str);\nconst unicodeToArray = (str) => str.match(reUnicode) || [];\nconst asciiToArray = (str) => str.split('');\nconst stringToArray = (str) =>\n  hasUnicode(str) ? unicodeToArray(str) : asciiToArray(str);\n\nfunction compareWildcars(text, rule) {\n  const escapeRegex = (str) => str.replace(/([.*+^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n  const regexRule = `^${rule.split('*').map(escapeRegex).join('.*')}$`.replace(\n    /\\?/g,\n    '.'\n  );\n  return new RegExp(regexRule).test(text);\n}\n\nfunction loadEnvFromJson(preffix, json = {}) {\n  const keys = Object.keys(json);\n  preffix = preffix ? `${preffix}_` : '';\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = `${preffix}${keys[i]}`;\n    process.env[key] = json[keys[i]];\n  }\n}\n\nmodule.exports = {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  loadEnvFromJson,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass DefaultCompiler {\n  constructor(container) {\n    this.container = container.container || container;\n    this.name = 'default';\n  }\n\n  getTokenFromWord(word) {\n    if (word.startsWith('//')) {\n      return {\n        type: 'comment',\n        value: word,\n      };\n    }\n    if (\n      [\n        'set',\n        'delete',\n        'get',\n        'inc',\n        'dec',\n        'eq',\n        'neq',\n        'gt',\n        'ge',\n        'lt',\n        'le',\n        'label',\n        'goto',\n        'jne',\n        'je',\n      ].includes(word)\n    ) {\n      return {\n        type: word,\n        arguments: [],\n      };\n    }\n    if (word.startsWith('$')) {\n      return {\n        type: 'call',\n        value: word.slice(1),\n      };\n    }\n    return {\n      type: 'reference',\n      value: word,\n    };\n  }\n\n  compile(pipeline) {\n    const result = [];\n    for (let i = 0; i < pipeline.length; i += 1) {\n      const line = pipeline[i].trim();\n      const words = line.split(' ');\n      const tokens = [];\n      let currentString = '';\n      let currentQuote;\n      for (let j = 0; j < words.length; j += 1) {\n        const word = words[j];\n        let processed = false;\n        if (!currentQuote) {\n          if (word.startsWith('\"')) {\n            currentString = word;\n            processed = true;\n            currentQuote = '\"';\n            if (word.endsWith('\"')) {\n              currentQuote = undefined;\n              tokens.push(this.getTokenFromWord(currentString));\n            }\n          } else if (word.startsWith(\"'\")) {\n            currentString = word;\n            processed = true;\n            currentQuote = \"'\";\n            if (word.endsWith(\"'\")) {\n              currentQuote = undefined;\n              tokens.push(this.getTokenFromWord(currentString));\n            }\n          }\n        } else {\n          currentString = `${currentString} ${word}`;\n          processed = true;\n          if (word.endsWith(currentQuote)) {\n            currentQuote = undefined;\n            tokens.push(this.getTokenFromWord(currentString));\n          }\n        }\n        if (!processed) {\n          tokens.push(this.getTokenFromWord(word));\n        }\n      }\n      result.push(tokens);\n    }\n    return result;\n  }\n\n  executeCall(firstToken, context, input, srcObject, depth) {\n    const pipeline = this.container.getPipeline(firstToken.value);\n    if (!pipeline) {\n      throw new Error(`Pipeline $${firstToken.value} not found.`);\n    }\n    return this.container.runPipeline(pipeline, input, srcObject, depth + 1);\n  }\n\n  executeReference(step, firstToken, context, input, srcObject) {\n    const currentObject = this.container.resolvePath(\n      firstToken.value,\n      context,\n      input,\n      srcObject\n    );\n    const args = [];\n    for (let i = 1; i < step.length; i += 1) {\n      args.push(\n        this.container.resolvePathWithType(\n          step[i].value,\n          context,\n          input,\n          srcObject\n        )\n      );\n    }\n    if (!currentObject) {\n      throw new Error(`Method not found for step ${JSON.stringify(step)}`);\n    }\n    const method = currentObject.run || currentObject;\n    if (typeof method === 'function') {\n      return typeof currentObject === 'function'\n        ? method(input, ...args)\n        : method.bind(currentObject)(input, ...args);\n    }\n    return method;\n  }\n\n  doGoto(label, srcContext) {\n    const context = srcContext;\n    const index = context.labels[label];\n    context.cursor = index;\n  }\n\n  async executeAction(step, context, input, srcObject, depth) {\n    let firstToken = step[0];\n    if (firstToken && firstToken.value && firstToken.value.startsWith('->')) {\n      if (depth > 0) {\n        return input;\n      }\n      firstToken = { ...firstToken };\n      firstToken.value = firstToken.value.slice(2);\n    }\n    switch (firstToken.type) {\n      case 'set':\n        this.container.setValue(\n          step[1].value,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'delete':\n        this.container.deleteValue(step[1].value, context, input, srcObject);\n        break;\n      case 'get':\n        return this.container.getValue(\n          step[1] ? step[1].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n      case 'inc':\n        this.container.incValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : '1',\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'dec':\n        this.container.decValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : '1',\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'eq':\n        this.container.eqValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'neq':\n        this.container.neqValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'gt':\n        this.container.gtValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'ge':\n        this.container.geValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'lt':\n        this.container.ltValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'le':\n        this.container.leValue(\n          step[1] ? step[1].value : undefined,\n          step[2] ? step[2].value : undefined,\n          context,\n          input,\n          srcObject\n        );\n        break;\n      case 'goto':\n        this.doGoto(step[1].value, context);\n        break;\n      case 'jne':\n        if (!context.floating) {\n          this.doGoto(step[1].value, context);\n        }\n        break;\n      case 'je':\n        if (context.floating) {\n          this.doGoto(step[1].value, context);\n        }\n        break;\n      case 'call':\n        return this.executeCall(firstToken, context, input, srcObject, depth);\n      case 'reference':\n        return this.executeReference(\n          step,\n          firstToken,\n          context,\n          input,\n          srcObject\n        );\n      default:\n        break;\n    }\n    return input;\n  }\n\n  findLabels(compiled, srcLabels) {\n    const labels = srcLabels;\n    for (let i = 0; i < compiled.length; i += 1) {\n      const current = compiled[i];\n      if (current[0].type === 'label') {\n        labels[current[1].value] = i;\n      }\n    }\n  }\n\n  async execute(compiled, srcInput, srcObject, depth) {\n    let input = srcInput;\n    const context = { cursor: 0, labels: {} };\n    this.findLabels(compiled, context.labels);\n    while (context.cursor < compiled.length) {\n      input = await this.executeAction(\n        compiled[context.cursor],\n        context,\n        input,\n        srcObject,\n        depth\n      );\n      context.cursor += 1;\n    }\n    return input;\n  }\n}\n\nmodule.exports = DefaultCompiler;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass Logger {\n  constructor() {\n    this.name = 'logger';\n  }\n\n  debug(...args) {\n    // eslint-disable-next-line no-console\n    console.debug(...args);\n  }\n\n  info(...args) {\n    // eslint-disable-next-line no-console\n    console.info(...args);\n  }\n\n  warn(...args) {\n    // eslint-disable-next-line no-console\n    console.warn(...args);\n  }\n\n  error(...args) {\n    // eslint-disable-next-line no-console\n    console.error(...args);\n  }\n\n  log(...args) {\n    // eslint-disable-next-line no-console\n    console.log(...args);\n  }\n\n  trace(...args) {\n    // eslint-disable-next-line no-console\n    console.trace(...args);\n  }\n\n  fatal(...args) {\n    // eslint-disable-next-line no-console\n    console.error(...args);\n  }\n}\n\nconst logger = new Logger();\n\nmodule.exports = logger;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { compareWildcars } = require('./helper');\nconst DefaultCompiler = require('./default-compiler');\nconst logger = require('./logger');\n\n/**\n * Container class\n */\nclass Container {\n  /**\n   * Constructor of the class.\n   */\n  constructor(hasPreffix = false) {\n    this.classes = {};\n    this.factory = {};\n    this.pipelines = {};\n    this.configurations = {};\n    this.compilers = {};\n    this.cache = {\n      bestKeys: {},\n      pipelines: {},\n    };\n    this.registerCompiler(DefaultCompiler);\n    if (!hasPreffix) {\n      this.use(logger);\n    }\n  }\n\n  registerCompiler(Compiler, name) {\n    const instance = new Compiler(this);\n    this.compilers[name || instance.name] = instance;\n  }\n\n  addClass(clazz, name) {\n    this.classes[name || clazz.name] = clazz;\n  }\n\n  toJSON(instance) {\n    const result = instance.toJSON ? instance.toJSON() : { ...instance };\n    result.className = instance.constructor.name;\n    return result;\n  }\n\n  fromJSON(obj, settings) {\n    const Clazz = this.classes[obj.className];\n    let instance;\n    if (Clazz) {\n      instance = new Clazz(settings);\n      if (instance.fromJSON) {\n        instance.fromJSON(obj);\n      } else {\n        Object.assign(instance, obj);\n      }\n    } else {\n      instance = { ...obj };\n    }\n    delete instance.className;\n    return instance;\n  }\n\n  register(name, Clazz, isSingleton = true) {\n    this.cache.bestKeys = {};\n    const isClass = typeof Clazz === 'function';\n    const item = { name, isSingleton };\n    if (isSingleton) {\n      item.instance = isClass ? new Clazz() : Clazz;\n    } else {\n      item.instance = isClass ? Clazz : Clazz.constructor;\n    }\n    this.factory[name] = item;\n  }\n\n  getBestKey(name) {\n    if (this.cache.bestKeys[name] !== undefined) {\n      return this.cache.bestKeys[name];\n    }\n    const keys = Object.keys(this.factory);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (compareWildcars(name, keys[i])) {\n        this.cache.bestKeys[name] = keys[i];\n        return keys[i];\n      }\n    }\n    this.cache.bestKeys[name] = null;\n    return undefined;\n  }\n\n  get(name, settings) {\n    let item = this.factory[name];\n    if (!item) {\n      if (this.parent) {\n        return this.parent.get(name, settings);\n      }\n      const key = this.getBestKey(name);\n      if (key) {\n        item = this.factory[key];\n      }\n      if (!item) {\n        return undefined;\n      }\n    }\n    if (item.isSingleton) {\n      if (item.instance && item.instance.applySettings) {\n        item.instance.applySettings(item.instance.settings, settings);\n      }\n      return item.instance;\n    }\n    const Clazz = item.instance;\n    return new Clazz(settings, this);\n  }\n\n  buildLiteral(subtype, step, value, context) {\n    return {\n      type: 'literal',\n      subtype,\n      src: step,\n      value,\n      context,\n      container: this,\n    };\n  }\n\n  resolvePathWithType(step, context, input, srcObject) {\n    const tokens = step.split('.');\n    let token = tokens[0].trim();\n    if (!token) {\n      token = step.startsWith('.') ? 'this' : 'context';\n    }\n    const isnum = /^\\d+$/.test(token);\n    if (isnum) {\n      return this.buildLiteral('number', step, parseFloat(token), context);\n    }\n    if (token.startsWith('\"')) {\n      return this.buildLiteral(\n        'string',\n        step,\n        token.replace(/^\"(.+(?=\"$))\"$/, '$1'),\n        context\n      );\n    }\n    if (token.startsWith(\"'\")) {\n      return this.buildLiteral(\n        'string',\n        step,\n        token.replace(/^'(.+(?='$))'$/, '$1'),\n        context\n      );\n    }\n    if (token === 'true') {\n      return this.buildLiteral('boolean', step, true, context);\n    }\n    if (token === 'false') {\n      return this.buildLiteral('boolean', step, false, context);\n    }\n    let currentObject = context;\n    if (token === 'input' || token === 'output') {\n      currentObject = input;\n    } else if (token && token !== 'context' && token !== 'this') {\n      currentObject = this.get(token) || currentObject[token];\n    } else if (token === 'this') {\n      currentObject = srcObject;\n    }\n    for (let i = 1; i < tokens.length; i += 1) {\n      const currentToken = tokens[i];\n      if (!currentObject || !currentObject[currentToken]) {\n        if (i < tokens.length - 1) {\n          throw Error(`Path not found in pipeline \"${step}\"`);\n        }\n      }\n      const prevCurrentObject = currentObject;\n      currentObject = currentObject[currentToken];\n      if (typeof currentObject === 'function') {\n        currentObject = currentObject.bind(prevCurrentObject);\n      }\n    }\n    if (typeof currentObject === 'function') {\n      return {\n        type: 'function',\n        src: step,\n        value: currentObject,\n        context,\n        container: this,\n      };\n    }\n    return {\n      type: 'reference',\n      src: step,\n      value: currentObject,\n      context,\n      container: this,\n    };\n  }\n\n  resolvePath(step, context, input, srcObject) {\n    const result = this.resolvePathWithType(step, context, input, srcObject);\n    return result ? result.value : result;\n  }\n\n  setValue(path, valuePath, context, input, srcObject) {\n    const value = this.resolvePath(valuePath, context, input, srcObject);\n    const tokens = path.split('.');\n    const newPath = tokens.slice(0, -1).join('.');\n    const currentObject = this.resolvePath(newPath, context, input, srcObject);\n    currentObject[tokens[tokens.length - 1]] = value;\n  }\n\n  incValue(path, valuePath, context, input, srcObject) {\n    const value = this.resolvePath(valuePath, context, input, srcObject);\n    const tokens = path.split('.');\n    if (path.startsWith('.')) {\n      tokens.push('this');\n    }\n    const newPath = tokens.slice(0, -1).join('.');\n    const currentObject = this.resolvePath(newPath, context, input, srcObject);\n    currentObject[tokens[tokens.length - 1]] += value;\n  }\n\n  decValue(path, valuePath, context, input, srcObject) {\n    const value = this.resolvePath(valuePath, context, input, srcObject);\n    const tokens = path.split('.');\n    const newPath = tokens.slice(0, -1).join('.');\n    const currentObject = this.resolvePath(newPath, context, input, srcObject);\n    currentObject[tokens[tokens.length - 1]] -= value;\n  }\n\n  eqValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA === valueB;\n  }\n\n  neqValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA !== valueB;\n  }\n\n  gtValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA > valueB;\n  }\n\n  geValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA >= valueB;\n  }\n\n  ltValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA < valueB;\n  }\n\n  leValue(pathA, pathB, srcContext, input, srcObject) {\n    const context = srcContext;\n    const valueA = this.resolvePath(pathA, context, input, srcObject);\n    const valueB = this.resolvePath(pathB, context, input, srcObject);\n    context.floating = valueA <= valueB;\n  }\n\n  deleteValue(path, context, input, srcObject) {\n    const tokens = path.split('.');\n    const newPath = tokens.slice(0, -1).join('.');\n    const currentObject = this.resolvePath(newPath, context, input, srcObject);\n    delete currentObject[tokens[tokens.length - 1]];\n  }\n\n  getValue(srcPath, context, input, srcObject) {\n    const path = srcPath || 'floating';\n    const tokens = path.split('.');\n    const newPath = tokens.slice(0, -1).join('.');\n    const currentObject = this.resolvePath(newPath, context, input, srcObject);\n    return currentObject[tokens[tokens.length - 1]];\n  }\n\n  async runPipeline(srcPipeline, input, srcObject, depth = 0) {\n    if (depth > 10) {\n      throw new Error(\n        'Pipeline depth is too high: perhaps you are using recursive pipelines?'\n      );\n    }\n    const pipeline =\n      typeof srcPipeline === 'string'\n        ? this.getPipeline(srcPipeline)\n        : srcPipeline;\n    if (!pipeline) {\n      throw new Error(`Pipeline not found ${srcPipeline}`);\n    }\n    if (!pipeline.compiler) {\n      const tag = JSON.stringify(pipeline);\n      this.registerPipeline(tag, pipeline, false);\n      const built = this.getPipeline(tag);\n      return built.compiler.execute(built.compiled, input, srcObject, depth);\n    }\n    return pipeline.compiler.execute(\n      pipeline.compiled,\n      input,\n      srcObject,\n      depth\n    );\n  }\n\n  use(item, name, isSingleton, onlyIfNotExists = false) {\n    let instance;\n    if (typeof item === 'function') {\n      if (item.name.endsWith('Compiler')) {\n        this.registerCompiler(item);\n        return item.name;\n      }\n      const Clazz = item;\n      instance = new Clazz({ container: this });\n    } else {\n      instance = item;\n    }\n    if (instance.register) {\n      instance.register(this);\n    }\n    const tag = instance.settings ? instance.settings.tag : undefined;\n    const itemName =\n      name || instance.name || tag || item.name || instance.constructor.name;\n    if (!onlyIfNotExists || !this.get(itemName)) {\n      this.register(itemName, instance, isSingleton);\n    }\n    return itemName;\n  }\n\n  getCompiler(name) {\n    const compiler = this.compilers[name];\n    if (compiler) {\n      return compiler;\n    }\n    if (this.parent) {\n      return this.parent.getCompiler(name);\n    }\n    return this.compilers.default;\n  }\n\n  buildPipeline(srcPipeline, prevPipeline = []) {\n    const pipeline = [];\n    if (srcPipeline && srcPipeline.length > 0) {\n      for (let i = 0; i < srcPipeline.length; i += 1) {\n        const line = srcPipeline[i];\n        if (line.trim() === '$super') {\n          for (let j = 0; j < prevPipeline.length; j += 1) {\n            const s = prevPipeline[j].trim();\n            if (!s.startsWith('->')) {\n              pipeline.push(prevPipeline[j]);\n            }\n          }\n        } else {\n          pipeline.push(line);\n        }\n      }\n    }\n    const compilerName =\n      !pipeline.length || !pipeline[0].startsWith('// compiler=')\n        ? 'default'\n        : pipeline[0].slice(12);\n    const compiler = this.getCompiler(compilerName);\n    const compiled = compiler.compile(pipeline);\n    return {\n      pipeline,\n      compiler,\n      compiled,\n    };\n  }\n\n  registerPipeline(tag, pipeline, overwrite = true) {\n    if (overwrite || !this.pipelines[tag]) {\n      this.cache.pipelines = {};\n      const prev = this.getPipeline(tag);\n      this.pipelines[tag] = this.buildPipeline(\n        pipeline,\n        prev ? prev.pipeline : []\n      );\n    }\n  }\n\n  registerPipelineForChilds(childName, tag, pipeline, overwrite = true) {\n    if (!this.childPipelines) {\n      this.childPipelines = {};\n    }\n    if (!this.childPipelines[childName]) {\n      this.childPipelines[childName] = [];\n    }\n    this.childPipelines[childName].push({ tag, pipeline, overwrite });\n  }\n\n  getPipeline(tag) {\n    if (this.pipelines[tag]) {\n      return this.pipelines[tag];\n    }\n    if (this.cache.pipelines[tag] !== undefined) {\n      return this.cache.pipelines[tag] || undefined;\n    }\n    const keys = Object.keys(this.pipelines);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (compareWildcars(tag, keys[i])) {\n        this.cache.pipelines[tag] = this.pipelines[keys[i]];\n        return this.pipelines[keys[i]];\n      }\n    }\n    this.cache.pipelines[tag] = null;\n    return undefined;\n  }\n\n  registerConfiguration(tag, configuration, overwrite = true) {\n    if (overwrite || !this.configurations[tag]) {\n      this.configurations[tag] = configuration;\n    }\n  }\n\n  getConfiguration(tag) {\n    if (this.configurations[tag]) {\n      return this.configurations[tag];\n    }\n    const keys = Object.keys(this.configurations);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (compareWildcars(tag, keys[i])) {\n        return this.configurations[keys[i]];\n      }\n    }\n    return undefined;\n  }\n\n  loadPipelinesFromString(str = '') {\n    const lines = str.split(/\\n|\\r|\\r\\n/);\n    let currentName = '';\n    let currentPipeline = [];\n    let currentTitle = '';\n    for (let i = 0; i < lines.length; i += 1) {\n      const line = lines[i];\n      if (line !== '') {\n        if (line.startsWith('# ')) {\n          if (currentName) {\n            if (\n              currentTitle &&\n              !['default', 'pipelines'].includes(currentTitle.toLowerCase())\n            ) {\n              this.registerPipelineForChilds(\n                currentTitle,\n                currentName,\n                currentPipeline\n              );\n            } else {\n              this.registerPipeline(currentName, currentPipeline);\n            }\n          }\n          currentTitle = line.slice(1).trim();\n          currentName = '';\n          currentPipeline = [];\n        } else if (line.startsWith('## ')) {\n          if (currentName) {\n            if (\n              currentTitle &&\n              !['default', 'pipelines'].includes(currentTitle.toLowerCase())\n            ) {\n              this.registerPipelineForChilds(\n                currentTitle,\n                currentName,\n                currentPipeline\n              );\n            } else {\n              this.registerPipeline(currentName, currentPipeline);\n            }\n          }\n          currentName = line.slice(2).trim();\n          currentPipeline = [];\n        } else if (currentName) {\n          currentPipeline.push(line);\n        }\n      }\n    }\n    if (currentName) {\n      if (\n        currentTitle &&\n        !['default', 'pipelines'].includes(currentTitle.toLowerCase())\n      ) {\n        this.registerPipelineForChilds(\n          currentTitle,\n          currentName,\n          currentPipeline\n        );\n      } else {\n        this.registerPipeline(currentName, currentPipeline);\n      }\n    }\n  }\n\n  async start(pipelineName = 'main') {\n    const keys = Object.keys(this.factory);\n    for (let i = 0; i < keys.length; i += 1) {\n      const current = this.factory[keys[i]];\n      if (current.isSingleton && current.instance && current.instance.start) {\n        await current.instance.start();\n      }\n    }\n    if (this.getPipeline(pipelineName)) {\n      await this.runPipeline(pipelineName, {}, this);\n    }\n  }\n}\n\nconst defaultContainer = new Container();\n\nmodule.exports = {\n  Container,\n  defaultContainer,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\n/**\n * Plugin to convert an array to a hashmap where every item existing in the\n * array is mapped to a 1.\n */\nclass ArrToObj {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container, if not defined then the\n   *    default container is used.\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'arrToObj';\n  }\n\n  /**\n   * Static method to convert an array to a hashmap object.\n   * @param {object[]} arr Input array.\n   * @returns {object} Output object.\n   */\n  static arrToObj(arr) {\n    const result = {};\n    for (let i = 0; i < arr.length; i += 1) {\n      result[arr[i]] = 1;\n    }\n    return result;\n  }\n\n  run(input) {\n    if (Array.isArray(input)) {\n      return ArrToObj.arrToObj(input);\n    }\n    input.tokens = ArrToObj.arrToObj(input.tokens);\n    return input;\n  }\n}\n\nmodule.exports = ArrToObj;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\n\nclass Normalizer {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'normalize';\n  }\n\n  normalize(text) {\n    return text\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .toLowerCase();\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const normalizer = this.container.get(`normalizer-${locale}`) || this;\n    input.text = normalizer.normalize(input.text, input);\n    return input;\n  }\n}\n\nmodule.exports = Normalizer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\nconst Normalizer = require('./normalizer');\n\nclass Tokenizer {\n  constructor(container = defaultContainer, shouldNormalize = false) {\n    this.container = container.container || container;\n\n    this.name = 'tokenize';\n    this.shouldNormalize = shouldNormalize;\n  }\n\n  getNormalizer() {\n    if (!this.normalizer) {\n      this.normalizer =\n        this.container.get(`normalizer-${this.name.slice(-2)}`) ||\n        new Normalizer();\n    }\n    return this.normalizer;\n  }\n\n  normalize(text, force) {\n    if ((force === undefined && this.shouldNormalize) || force === true) {\n      const normalizer = this.getNormalizer();\n      return normalizer.normalize(text);\n    }\n    return text;\n  }\n\n  innerTokenize(text) {\n    return text.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter((x) => x);\n  }\n\n  tokenize(text, normalize) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache = undefined;\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        normalized: {},\n        nonNormalized: {},\n      };\n    } else {\n      if (normalize) {\n        if (Object.prototype.hasOwnProperty.call(this.cache.normalized, text)) {\n          result = this.cache.normalized[text];\n        }\n      } else if (\n        Object.prototype.hasOwnProperty.call(this.cache.nonNormalized, text)\n      ) {\n        result = this.cache.nonNormalized[text];\n      }\n      if (result) {\n        return result;\n      }\n    }\n    result = this.innerTokenize(this.normalize(text, normalize), normalize);\n    if (normalize) {\n      this.cache.normalized[text] = result;\n    } else {\n      this.cache.nonNormalized[text] = result;\n    }\n    return result;\n  }\n\n  async run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    let tokenizer = this.container.get(`tokenizer-${locale}`);\n    if (!tokenizer) {\n      const tokenizerBert = this.container.get(`tokenizer-bert`);\n      if (tokenizerBert && tokenizerBert.activeFor(locale)) {\n        tokenizer = tokenizerBert;\n      } else {\n        tokenizer = this;\n      }\n    }\n    const tokens = await tokenizer.tokenize(input.text, input);\n    input.tokens = tokens.filter((x) => x);\n    return input;\n  }\n}\n\nmodule.exports = Tokenizer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\nconst Tokenizer = require('./tokenizer');\n\n/* eslint-disable */\nclass BaseStemmer {\n  constructor(container = defaultContainer, dictionary) {\n    this.container = container.container || container;\n    this.cache = {};\n    this.setCurrent(\"\");\n    this.dictionary = dictionary || { before: {}, after: {}};\n  }\n\n  setCurrent(value) {\n    this.current = value;\n    this.cursor = 0;\n    this.limit = this.current.length;\n    this.limit_backward = 0;\n    this.bra = this.cursor;\n    this.ket = this.limit;\n  }\n\n  getCurrent() {\n    return this.current;\n  }\n\n  bc(s, ch) {\n    if ((s[ch >>> 3] & (0x1 << (ch & 0x7))) == 0) {\n      return true;\n    }\n    return false;\n  }\n\n  in_grouping(s, min, max) {\n    if (this.cursor >= this.limit) return false;\n    let ch = this.current.charCodeAt(this.cursor);\n    if (ch > max || ch < min) return false;\n    ch -= min;\n    if (this.bc(s, ch)) return false;\n    this.cursor++;\n    return true;\n  }\n\n  in_grouping_b(s, min, max) {\n    if (this.cursor <= this.limit_backward) return false;\n    let ch = this.current.charCodeAt(this.cursor - 1);\n    if (ch > max || ch < min) return false;\n    ch -= min;\n    if (this.bc(s, ch)) return false;\n    this.cursor--;\n    return true;\n  }\n\n  out_grouping(s, min, max) {\n    if (this.cursor >= this.limit) return false;\n    let ch = this.current.charCodeAt(this.cursor);\n    if (ch > max || ch < min) {\n      this.cursor++;\n      return true;\n    }\n    ch -= min;\n    if (this.bc(s, ch)) {\n      this.cursor++;\n      return true;\n    }\n    return false;\n  }\n\n  out_grouping_b(s, min, max) {\n    if (this.cursor <= this.limit_backward) return false;\n    let ch = this.current.charCodeAt(this.cursor - 1);\n    if (ch > max || ch < min) {\n      this.cursor--;\n      return true;\n    }\n    ch -= min;\n    if (this.bc(s, ch)) {\n      this.cursor--;\n      return true;\n    }\n    return false;\n  }\n\n  eq_s(s_size, s) {\n    if (typeof s_size === 'string') {\n      s = s_size;\n      s_size = s.length;\n    }\n    if ((this.limit - this.cursor < s_size) || (this.current.slice(this.cursor, this.cursor + s_size) != s)) {\n      return false;\n    }\n    this.cursor += s_size;\n    return true;\n  }\n\n  eq_s_b(s_size, s) {\n    if (typeof s_size === 'string') {\n      s = s_size;\n      s_size = s.length;\n    }\n    if ((this.cursor - this.limit_backward < s_size) || (this.current.slice(this.cursor - s_size, this.cursor) != s)) {\n      return false;\n    }\n    this.cursor -= s_size;\n    return true;\n  }\n\n  find_among(v, v_size) {\n    let i = 0;\n    let j = v_size || v.length;\n\n    const c = this.cursor;\n    const l = this.limit;\n\n    let common_i = 0;\n    let common_j = 0;\n\n    let first_key_inspected = false;\n\n    while (true) {\n      const k = i + ((j - i) >>> 1);\n      let diff = 0;\n      let common = common_i < common_j ? common_i : common_j; // smaller\n      var w = v[k];\n      var i2;\n      for (i2 = common; i2 < w.s_size; i2++) {\n        if (c + common == l) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c + common) - w.s.charCodeAt(i2);\n        if (diff != 0) break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0) break; // v->s has been inspected\n        if (j == i) break; // only one item in v\n\n        // - but now we need to go round once more to get\n        // v->s inspected. This looks messy, but is actually\n        // the optimal approach.\n\n        if (first_key_inspected) break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w.s_size) {\n        this.cursor = c + w.s_size;\n        if (w.method == null) {\n          return w.result;\n        }\n        const res = w.method(w.instance);\n        this.cursor = c + w.s_size;\n        if (res) {\n          return w.result;\n        }\n      }\n      i = w.substring_i;\n      if (i < 0) return 0;\n    }\n    return -1; // not reachable\n  }\n\n  // find_among_b is for backwards processing. Same comments apply\n  find_among_b(v, v_size) {\n    let i = 0;\n    let j = v_size || v.length;\n\n    const c = this.cursor;\n    const lb = this.limit_backward;\n\n    let common_i = 0;\n    let common_j = 0;\n\n    let first_key_inspected = false;\n\n    while (true) {\n      const k = i + ((j - i) >> 1);\n      let diff = 0;\n      let common = common_i < common_j ? common_i : common_j;\n      var w = v[k];\n      var i2;\n      for (i2 = w.s_size - 1 - common; i2 >= 0; i2--) {\n        if (c - common == lb) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c - 1 - common) - w.s.charCodeAt(i2);\n        if (diff != 0) break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0) break;\n        if (j == i) break;\n        if (first_key_inspected) break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w.s_size) {\n        this.cursor = c - w.s_size;\n        if (w.method == null) return w.result;\n        const res = w.method(this);\n        this.cursor = c - w.s_size;\n        if (res) return w.result;\n      }\n      i = w.substring_i;\n      if (i < 0) return 0;\n    }\n    return -1; // not reachable\n  }\n\n  /* to replace chars between c_bra and c_ket in this.current by the\n   * chars in s.\n   */\n  replace_s(c_bra, c_ket, s) {\n    const adjustment = s.length - (c_ket - c_bra);\n    this.current = this.current.slice(0, c_bra) + s + this.current.slice(c_ket);\n    this.limit += adjustment;\n    if (this.cursor >= c_ket) this.cursor += adjustment;\n    else if (this.cursor > c_bra) this.cursor = c_bra;\n    return adjustment;\n  }\n\n  slice_check() {\n    if (\n      this.bra < 0 ||\n      this.bra > this.ket ||\n      this.ket > this.limit ||\n      this.limit > this.current.length\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  slice_from(s) {\n    if (this.slice_check()) {\n      this.replace_s(this.bra, this.ket, s);\n      return true;\n    }\n    return false;\n  }\n\n  slice_del() {\n    return this.slice_from(\"\");\n  }\n\n  insert(c_bra, c_ket, s) {\n    const adjustment = this.replace_s(c_bra, c_ket, s);\n    if (c_bra <= this.bra) this.bra += adjustment;\n    if (c_bra <= this.ket) this.ket += adjustment;\n  }\n\n  /* Copy the slice into the supplied StringBuffer */\n  slice_to(s) {\n    let result = \"\";\n    if (this.slice_check()) {\n      result = this.current.slice(this.bra, this.ket);\n    }\n    return result;\n  }\n\n  stemWord(word) {\n    let result = this.cache[`.${word}`];\n    if (result == null) {\n      if (this.dictionary.before.hasOwnProperty(word)) {\n        result = this.dictionary.before[word];\n      } else {\n        this.setCurrent(word);\n        this.innerStem();\n        result = this.getCurrent();\n        if (this.dictionary.after.hasOwnProperty(result)) {\n          result = this.dictionary.after[result];\n        }\n      }\n      this.cache[`.${word}`] = result;\n    }\n    return result;\n  }\n\n  stemWords(words) {\n    const results = [];\n    for (let i = 0; i < words.length; i++) {\n      const stemmed = this.stemWord(words[i]);\n      if (stemmed) {\n        results.push(stemmed.trim());\n      }\n    }\n    return results;\n  }\n\n  stem(tokens) {\n    if (tokens === undefined || tokens === null) {\n      return tokens;\n    }\n    if (!Array.isArray(tokens)) {\n      return this.stemWords([tokens])[0];\n    }\n    return this.stemWords(tokens);\n  }\n\n  getTokenizer() {\n    if (!this.tokenizer) {\n      this.tokenizer =\n        this.container.get(`tokenizer-${this.name.slice(-2)}`) ||\n        new Tokenizer();\n    }\n    return this.tokenizer;\n  }\n\n  getStopwords() {\n    if (!this.stopwords) {\n      this.stopwords = this.container.get(`tokenizer-${this.name.slice(-2)}`);\n    }\n    return this.stopwords;\n  }\n\n  tokenizeAndStem(text, keepStops = true) {\n    const tokenizer = this.getTokenizer();\n    let tokens = tokenizer.tokenize(text, true);\n    if (!keepStops) {\n      const stopwords = this.getStopwords();\n      if (stopwords) {\n        tokens = stopwords.removeStopwords(tokens);\n      }\n    }\n    return this.stemWords(tokens);\n  }\n}\n\nmodule.exports = BaseStemmer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\nclass ObjToArr {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'objToArr';\n  }\n\n  static objToArr(obj) {\n    return Object.keys(obj);\n  }\n\n  run(input) {\n    if (!input.tokens) {\n      return ObjToArr.objToArr(input);\n    }\n    input.tokens = ObjToArr.objToArr(input.tokens);\n    return input;\n  }\n}\n\nmodule.exports = ObjToArr;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\nclass Stemmer {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'stem';\n  }\n\n  stem(tokens) {\n    return tokens;\n  }\n\n  getStemmer(srcInput) {\n    const input = srcInput;\n    const locale =\n      input.locale || (input.settings ? input.settings.locale || 'en' : 'en');\n    let stemmer = this.container.get(`stemmer-${locale}`);\n    if (!stemmer) {\n      const stemmerBert = this.container.get(`stemmer-bert`);\n      if (stemmerBert && stemmerBert.activeFor(locale)) {\n        stemmer = stemmerBert;\n      } else {\n        stemmer = this;\n      }\n    }\n    return stemmer;\n  }\n\n  async addForTraining(srcInput) {\n    const stemmer = this.getStemmer(srcInput);\n    if (stemmer.addUtterance) {\n      await stemmer.addUtterance(srcInput.utterance, srcInput.intent);\n    }\n    return srcInput;\n  }\n\n  async train(srcInput) {\n    const stemmer = this.getStemmer(srcInput);\n    if (stemmer.innerTrain) {\n      await stemmer.innerTrain();\n    }\n    return srcInput;\n  }\n\n  async run(srcInput) {\n    const input = srcInput;\n    const stemmer = this.getStemmer(input);\n    input.tokens = await stemmer.stem(input.tokens, input);\n    return input;\n  }\n}\n\nmodule.exports = Stemmer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\nclass Stopwords {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'removeStopwords';\n    this.dictionary = {};\n  }\n\n  build(list) {\n    for (let i = 0; i < list.length; i += 1) {\n      this.dictionary[list[i]] = true;\n    }\n  }\n\n  isNotStopword(token) {\n    return !this.dictionary[token];\n  }\n\n  isStopword(token) {\n    return !!this.dictionary[token];\n  }\n\n  removeStopwords(tokens) {\n    return tokens.filter((x) => this.isNotStopword(x));\n  }\n\n  run(srcInput) {\n    if (srcInput.settings && srcInput.settings.keepStopwords === false) {\n      const input = srcInput;\n      const locale = input.locale || 'en';\n      const remover = this.container.get(`stopwords-${locale}`) || this;\n      input.tokens = remover\n        .removeStopwords(input.tokens, input)\n        .filter((x) => x);\n      return input;\n    }\n    return srcInput;\n  }\n}\n\nmodule.exports = Stopwords;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\n\n/**\n * Class for a simple timer\n */\nclass Timer {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'timer';\n  }\n\n  /**\n   * Starts the timer\n   * @param {object} input\n   */\n  start(input) {\n    if (input) {\n      input.hrstart = new Date();\n    }\n    return input;\n  }\n\n  /**\n   * Stops the timer\n   * @param {object} srcInput\n   */\n  stop(srcInput) {\n    const input = srcInput;\n    if (input && input.hrstart) {\n      const hrend = new Date();\n      input.elapsed = hrend.getTime() - input.hrstart.getTime();\n      delete input.hrstart;\n    }\n    return input;\n  }\n\n  run(srcInput) {\n    this.start(srcInput);\n  }\n}\n\nmodule.exports = Timer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\nclass Clonable {\n  /**\n   * Constructor of the class\n   * @param {object} settings\n   */\n  constructor(settings = {}, container = defaultContainer) {\n    this.container = settings.container || container;\n    this.applySettings(this, settings);\n  }\n\n  get logger() {\n    return this.container.get('logger');\n  }\n\n  /**\n   * Apply default settings to an object.\n   * @param {object} obj Target object.\n   * @param {object} settings Input settings.\n   */\n  applySettings(srcobj, settings = {}) {\n    const obj = srcobj || {};\n    Object.keys(settings).forEach((key) => {\n      if (obj[key] === undefined) {\n        obj[key] = settings[key];\n      }\n    });\n    return obj;\n  }\n\n  toJSON() {\n    const settings = this.jsonExport || {};\n    const result = {};\n    const keys = Object.keys(this);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      if (\n        key !== 'jsonExport' &&\n        key !== 'jsonImport' &&\n        key !== 'container' &&\n        !key.startsWith('pipeline')\n      ) {\n        const fn = settings[key] === undefined ? true : settings[key];\n        if (typeof fn === 'function') {\n          const value = fn.bind(this)(result, this, key, this[key]);\n          if (value) {\n            result[key] = value;\n          }\n        } else if (typeof fn === 'boolean') {\n          if (fn) {\n            result[key] = this[key];\n            if (key === 'settings') {\n              delete result[key].container;\n            }\n          }\n        } else if (typeof fn === 'string') {\n          result[fn] = this[key];\n        }\n      }\n    }\n    return result;\n  }\n\n  fromJSON(json) {\n    const settings = this.jsonImport || {};\n    const keys = Object.keys(json);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      const fn = settings[key] === undefined ? true : settings[key];\n      if (typeof fn === 'function') {\n        const value = fn.bind(this)(this, json, key, json[key]);\n        if (value) {\n          this[key] = value;\n        }\n      } else if (typeof fn === 'boolean') {\n        if (fn) {\n          this[key] = json[key];\n        }\n      } else if (typeof fn === 'string') {\n        this[fn] = json[key];\n      }\n    }\n  }\n\n  objToValues(obj, srcKeys) {\n    const keys = srcKeys || Object.keys(obj);\n    const result = [];\n    for (let i = 0; i < keys.length; i += 1) {\n      result.push(obj[keys[i]]);\n    }\n    return result;\n  }\n\n  valuesToObj(values, keys) {\n    const result = {};\n    for (let i = 0; i < values.length; i += 1) {\n      result[keys[i]] = values[i];\n    }\n    return result;\n  }\n\n  getPipeline(tag) {\n    return this.container.getPipeline(tag);\n  }\n\n  async runPipeline(input, pipeline) {\n    return this.container.runPipeline(pipeline || this.pipeline, input, this);\n  }\n\n  use(item) {\n    this.container.use(item);\n  }\n}\n\nmodule.exports = Clonable;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\nconst Clonable = require('./clonable');\n\nclass MemoryStorage extends Clonable {\n  constructor(settings = {}, container = undefined) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container || defaultContainer,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings, { etag: 1, memory: {} });\n    if (!this.settings.tag) {\n      this.settings.tag = 'storage';\n    }\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n  }\n\n  read(keys) {\n    return new Promise((resolve) => {\n      const data = {};\n      if (!Array.isArray(keys)) {\n        keys = [keys];\n      }\n      keys.forEach((key) => {\n        const item = this.settings.memory[key];\n        if (item) {\n          data[key] = JSON.parse(item);\n        }\n      });\n      resolve(data);\n    });\n  }\n\n  saveItem(key, item) {\n    const clone = { ...item };\n    clone.eTag = this.settings.etag.toString();\n    this.settings.etag += 1;\n    this.settings.memory[key] = JSON.stringify(clone);\n    return clone;\n  }\n\n  write(changes) {\n    return new Promise((resolve, reject) => {\n      Object.keys(changes).forEach((key) => {\n        const newItem = changes[key];\n        const oldStr = this.settings.memory[key];\n        if (!oldStr || newItem.eTag === '*') {\n          return resolve(this.saveItem(key, newItem));\n        }\n        const oldItem = JSON.parse(oldStr);\n        if (newItem.eTag !== oldItem.eTag) {\n          return reject(\n            new Error(`Error writing \"${key}\" due to eTag conflict.`)\n          );\n        }\n        return resolve(this.saveItem(key, newItem));\n      });\n    });\n  }\n\n  delete(keys) {\n    return new Promise((resolve) => {\n      keys.forEach((key) => delete this.settings.memory[key]);\n      resolve();\n    });\n  }\n}\n\nmodule.exports = MemoryStorage;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nfunction readFile() {\n  return new Promise((resolve) => {\n    resolve(undefined);\n  });\n}\n\nfunction writeFile() {\n  return new Promise((resolve, reject) => {\n    reject(new Error('File cannot be written in web'));\n  });\n}\n\nfunction existsSync() {\n  return false;\n}\n\nfunction lstatSync() {\n  return undefined;\n}\n\nfunction readFileSync() {\n  return undefined;\n}\n\nmodule.exports = {\n  readFile,\n  writeFile,\n  existsSync,\n  lstatSync,\n  readFileSync,\n  name: 'fs',\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst ArrToObj = require('./arr-to-obj');\nconst { Container } = require('./container');\nconst Normalizer = require('./normalizer');\nconst ObjToArr = require('./obj-to-arr');\nconst { loadEnvFromJson } = require('./helper');\nconst Stemmer = require('./stemmer');\nconst Stopwords = require('./stopwords');\nconst Tokenizer = require('./tokenizer');\nconst Timer = require('./timer');\nconst logger = require('./logger');\nconst MemoryStorage = require('./memory-storage');\nconst fs = require('./mock-fs');\n\nfunction loadPipelinesStr(instance, pipelines) {\n  instance.loadPipelinesFromString(pipelines);\n}\n\nfunction traverse(obj, preffix) {\n  if (typeof obj === 'string') {\n    if (obj.startsWith('$')) {\n      return (\n        process.env[`${preffix}${obj.slice(1)}`] || process.env[obj.slice(1)]\n      );\n    }\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map((x) => traverse(x, preffix));\n  }\n  if (typeof obj === 'object') {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      result[keys[i]] = traverse(obj[keys[i]], preffix);\n    }\n    return result;\n  }\n  return obj;\n}\n\nfunction containerBootstrap(\n  inputSettings,\n  mustLoadEnv,\n  container,\n  preffix,\n  pipelines,\n  parent\n) {\n  const srcSettings = inputSettings || {};\n  const instance = container || new Container(preffix);\n  instance.parent = parent;\n  if (!preffix) {\n    instance.register('fs', fs);\n    instance.use(ArrToObj);\n    instance.use(Normalizer);\n    instance.use(ObjToArr);\n    instance.use(Stemmer);\n    instance.use(Stopwords);\n    instance.use(Tokenizer);\n    instance.use(Timer);\n    instance.use(logger);\n    instance.use(MemoryStorage);\n  }\n  const settings = srcSettings;\n  if (srcSettings.env) {\n    loadEnvFromJson(preffix, srcSettings.env);\n  }\n  let configuration;\n  configuration = settings;\n  configuration = traverse(configuration, preffix ? `${preffix}_` : '');\n  if (configuration.settings) {\n    const keys = Object.keys(configuration.settings);\n    for (let i = 0; i < keys.length; i += 1) {\n      instance.registerConfiguration(\n        keys[i],\n        configuration.settings[keys[i]],\n        true\n      );\n    }\n  }\n  if (configuration.use) {\n    for (let i = 0; i < configuration.use.length; i += 1) {\n      const item = configuration.use[i];\n      if (Array.isArray(item)) {\n        instance.register(item[0], item[1]);\n      } else {\n        instance.use(item);\n      }\n    }\n  }\n  if (configuration.terraform) {\n    for (let i = 0; i < configuration.terraform.length; i += 1) {\n      const current = configuration.terraform[i];\n      const terra = instance.get(current.className);\n      instance.register(current.name, terra, true);\n    }\n  }\n  if (configuration.childs) {\n    instance.childs = configuration.childs;\n  }\n  if (pipelines) {\n    for (let i = 0; i < pipelines.length; i += 1) {\n      const pipeline = pipelines[i];\n      instance.registerPipeline(\n        pipeline.tag,\n        pipeline.pipeline,\n        pipeline.overwrite\n      );\n    }\n  }\n  if (configuration.pipelines) {\n    loadPipelinesStr(instance, configuration.pipelines);\n  }\n  return instance;\n}\n\nmodule.exports = containerBootstrap;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nfunction uuid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n}\n\nmodule.exports = uuid;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst containerBootstrap = require('./container-bootstrap');\n\nclass Dock {\n  constructor() {\n    this.containers = {};\n  }\n\n  getContainer(name) {\n    return this.containers[name || 'default'];\n  }\n\n  async createContainer(\n    name,\n    settings,\n    srcMustLoadEnv,\n    preffix,\n    parent,\n    pipelines\n  ) {\n    const mustLoadEnv = srcMustLoadEnv === undefined ? true : srcMustLoadEnv;\n    if (typeof name !== 'string') {\n      settings = name;\n      name = '';\n    }\n    if (!settings) {\n      if (name === 'default' || name === '') {\n        settings = 'conf.json';\n      }\n    }\n    if (!this.containers[name]) {\n      const container = containerBootstrap(\n        settings,\n        mustLoadEnv,\n        undefined,\n        preffix,\n        pipelines\n      );\n      container.name = name;\n      this.containers[name] = container;\n      container.dock = this;\n      container.parent = parent;\n      await container.start();\n      if (container.childs) {\n        await this.buildChilds(container);\n      }\n    }\n    return this.containers[name];\n  }\n\n  async buildChilds(container) {\n    if (container && container.childs) {\n      const keys = Object.keys(container.childs);\n      const childs = {};\n      for (let i = 0; i < keys.length; i += 1) {\n        const settings = container.childs[keys[i]];\n        settings.isChild = true;\n        if (!settings.pathPipeline) {\n          settings.pathPipeline = `${keys[i]}_pipeline.md`;\n        }\n        childs[keys[i]] = await this.createContainer(\n          keys[i],\n          settings,\n          false,\n          keys[i],\n          container,\n          container.childPipelines\n            ? container.childPipelines[keys[i]]\n            : undefined\n        );\n      }\n      container.childs = childs;\n    }\n  }\n\n  async terraform(settings, mustLoadEnv = true) {\n    const defaultContainer = await this.createContainer(\n      'default',\n      settings,\n      mustLoadEnv,\n      ''\n    );\n    return defaultContainer;\n  }\n\n  start(settings, mustLoadEnv = true) {\n    return this.terraform(settings, mustLoadEnv);\n  }\n}\n\nconst dock = new Dock();\n\nmodule.exports = dock;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\nconst Clonable = require('./clonable');\n\nclass Context extends Clonable {\n  constructor(settings = {}, container = undefined) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container || defaultContainer,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'context';\n    }\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n  }\n\n  getStorage() {\n    const storage = this.container.get(this.settings.storageName || 'storage');\n    if (!storage) {\n      throw new Error('Storage not found');\n    }\n    return storage;\n  }\n\n  getContext(key) {\n    const storage = this.getStorage();\n    return storage.read(`${this.settings.tag}-${key}`);\n  }\n\n  setContext(key, value) {\n    const storage = this.getStorage();\n    const change = {\n      [key]: value,\n    };\n    return storage.write(change);\n  }\n\n  async getContextValue(key, valueName) {\n    const context = await this.getContext(key);\n    return context ? context[valueName] : undefined;\n  }\n\n  async setContextValue(key, valueName, value) {\n    let context = await this.getContext(key);\n    if (!context) {\n      context = {};\n    }\n    context[valueName] = value;\n    return this.setContext(key, context);\n  }\n}\n\nmodule.exports = Context;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Among = require('./among');\nconst ArrToObj = require('./arr-to-obj');\nconst BaseStemmer = require('./base-stemmer');\nconst containerBootstrap = require('./container-bootstrap');\nconst Clonable = require('./clonable');\nconst { Container, defaultContainer } = require('./container');\nconst Normalizer = require('./normalizer');\nconst ObjToArr = require('./obj-to-arr');\nconst Stemmer = require('./stemmer');\nconst Stopwords = require('./stopwords');\nconst Tokenizer = require('./tokenizer');\nconst Timer = require('./timer');\nconst logger = require('./logger');\nconst {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  loadEnv,\n} = require('./helper');\nconst MemoryStorage = require('./memory-storage');\nconst uuid = require('./uuid');\nconst dock = require('./dock');\nconst Context = require('./context');\n\nasync function dockStart(settings, mustLoadEnv) {\n  await dock.start(settings, mustLoadEnv);\n  return dock;\n}\n\nmodule.exports = {\n  Among,\n  ArrToObj,\n  BaseStemmer,\n  containerBootstrap,\n  Clonable,\n  Container,\n  defaultContainer,\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  loadEnv,\n  Normalizer,\n  ObjToArr,\n  Stemmer,\n  Stopwords,\n  Tokenizer,\n  Timer,\n  logger,\n  MemoryStorage,\n  uuid,\n  dock,\n  Context,\n  dockStart,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst array = [];\nconst charCodeCache = [];\n\n/**\n * Calculates levenshtein distance\n * @param {string} left Left string\n * @param {string} right Right string\n * @returns {number} levenshtein distance of the two strings\n */\nfunction leven(left, right) {\n  if (left.length > right.length) {\n    // eslint-disable-next-line no-param-reassign\n    [left, right] = [right, left];\n  }\n  let leftLength = left.length - 1;\n  let rightLength = right.length - 1;\n  while (\n    leftLength > 0 &&\n    left.charCodeAt(leftLength) === right.charCodeAt(rightLength)\n  ) {\n    leftLength -= 1;\n    rightLength -= 1;\n  }\n  leftLength += 1;\n  rightLength += 1;\n  let start = 0;\n  while (\n    start < leftLength &&\n    left.charCodeAt(start) === right.charCodeAt(start)\n  ) {\n    start += 1;\n  }\n  leftLength -= start;\n  rightLength -= start;\n  if (leftLength === 0) {\n    return rightLength;\n  }\n  for (let i = 0; i < leftLength; i += 1) {\n    charCodeCache[i] = left.charCodeAt(start + i);\n    array[i] = i + 1;\n  }\n  let bCharCode;\n  let result;\n  let temp;\n  let temp2;\n  let j = 0;\n  while (j < rightLength) {\n    bCharCode = right.charCodeAt(start + j);\n    temp = j;\n    j += 1;\n    result = j;\n    for (let i = 0; i < leftLength; i += 1) {\n      /* eslint-disable */\n      temp2 = temp + (bCharCode !== charCodeCache[i])|0;\n      /* eslint-enable */\n      temp = array[i];\n      if (temp > result) {\n        array[i] = temp2 > result ? result + 1 : temp2;\n      } else {\n        array[i] = temp2 > temp ? temp + 1 : temp2;\n      }\n      result = array[i];\n    }\n  }\n  return result;\n}\n\nmodule.exports = leven;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst leven = require('./leven');\n\nfunction similarity(str1, str2, normalize = false) {\n  if (normalize) {\n    /* eslint-disable */\n    str1 = str1\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toLowerCase();\n    str2 = str2\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\")\n      .toLowerCase();\n    /* eslint-enable */\n  }\n  return str1 === str2 ? 0 : leven(str1, str2);\n}\n\nmodule.exports = similarity;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass CosineSimilarity {\n  constructor(container) {\n    this.container = container;\n  }\n\n  getTokens(text, locale = 'en') {\n    if (typeof text === 'string') {\n      const tokenizer =\n        this.container && this.container.get(`tokenizer-${locale}`);\n      return tokenizer ? tokenizer.tokenize(text, true) : text.split(' ');\n    }\n    return text;\n  }\n\n  termFreqMap(str, locale) {\n    const words = this.getTokens(str, locale);\n    const termFreq = {};\n    words.forEach((w) => {\n      termFreq[w] = (termFreq[w] || 0) + 1;\n    });\n    return termFreq;\n  }\n\n  addKeysToDict(map, dict) {\n    Object.keys(map).forEach((key) => {\n      dict[key] = true;\n    });\n  }\n\n  termFreqMapToVector(map, dict) {\n    const termFreqVector = [];\n    Object.keys(dict).forEach((term) => {\n      termFreqVector.push(map[term] || 0);\n    });\n    return termFreqVector;\n  }\n\n  vecDotProduct(vecA, vecB) {\n    let product = 0;\n    for (let i = 0; i < vecA.length; i += 1) {\n      product += vecA[i] * vecB[i];\n    }\n    return product;\n  }\n\n  vecMagnitude(vec) {\n    let sum = 0;\n    for (let i = 0; i < vec.length; i += 1) {\n      sum += vec[i] * vec[i];\n    }\n    return Math.sqrt(sum);\n  }\n\n  /**\n   * Calculates cosine-similarity from two vectors\n   * @param {number[]} left Left vector\n   * @param {number[]} right Right vector\n   * @returns {number} cosine between two vectors\n   * {@link https://en.wikipedia.org/wiki/Cosine_similarity Cosine Similarity}\n   */\n  cosineSimilarity(vecA, vecB) {\n    return (\n      this.vecDotProduct(vecA, vecB) /\n      (this.vecMagnitude(vecA) * this.vecMagnitude(vecB))\n    );\n  }\n\n  getTermFreqVectors(strA, strB, locale) {\n    const termFreqA = this.termFreqMap(strA, locale);\n    const termFreqB = this.termFreqMap(strB, locale);\n\n    if (!Object.keys(termFreqA).length || !Object.keys(termFreqB).length) {\n      return 0;\n    }\n    const dict = {};\n    this.addKeysToDict(termFreqA, dict);\n    this.addKeysToDict(termFreqB, dict);\n\n    return [\n      this.termFreqMapToVector(termFreqA, dict),\n      this.termFreqMapToVector(termFreqB, dict),\n    ];\n  }\n\n  /**\n   * Calculates cosine-similarity from two sentences\n   * @param {string} left Left string\n   * @param {string} right Right string\n   * @returns {number} cosine between two sentences representend in VSM\n   */\n  similarity(strA, strB, locale) {\n    if (strA === strB) {\n      return 1;\n    }\n\n    const [termFreqVecA, termFreqVecB] = this.getTermFreqVectors(\n      strA,\n      strB,\n      locale\n    );\n    return this.cosineSimilarity(termFreqVecA, termFreqVecB);\n  }\n}\n\nmodule.exports = CosineSimilarity;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst similarity = require('./similarity');\n\nclass SpellCheck {\n  constructor(settings) {\n    this.settings = settings || {};\n    this.minLength = this.settings.minLength || 4;\n    if (this.settings.features) {\n      this.setFeatures(this.settings.features);\n    } else {\n      this.features = {};\n      this.featuresByLength = {};\n    }\n  }\n\n  setFeatures(features) {\n    this.features = features;\n    this.featuresByLength = {};\n    this.featuresList = Object.keys(this.features);\n    for (let i = 0; i < this.featuresList.length; i += 1) {\n      const feature = this.featuresList[i];\n      const { length } = feature;\n      if (!this.featuresByLength[length]) {\n        this.featuresByLength[length] = [];\n      }\n      this.featuresByLength[length].push(feature);\n    }\n  }\n\n  checkToken(token, distance) {\n    if (this.features[token]) {\n      return token;\n    }\n    if (token.length < this.minLength) {\n      return token;\n    }\n    let best;\n    let distanceBest = Infinity;\n    for (\n      let i = token.length - distance - 1;\n      i < token.length + distance;\n      i += 1\n    ) {\n      const currentFeatures = this.featuresByLength[i + 1];\n      if (currentFeatures) {\n        for (let j = 0; j < currentFeatures.length; j += 1) {\n          const feature = currentFeatures[j];\n          const similar = similarity(token, feature);\n          if (similar <= distance) {\n            if (similar < distanceBest) {\n              best = feature;\n              distanceBest = similar;\n            } else if (similar === distanceBest && best) {\n              const la = Math.abs(best.length - token.length);\n              const lb = Math.abs(feature.length - token.length);\n              if (\n                la > lb ||\n                (la === lb && this.features[feature] > this.features[best])\n              ) {\n                best = feature;\n                distanceBest = similar;\n              }\n            }\n          }\n        }\n      }\n    }\n    return best || token;\n  }\n\n  check(tokens, distance = 1) {\n    if (!Array.isArray(tokens)) {\n      const keys = Object.keys(tokens);\n      const processed = this.check(keys, distance);\n      const obj = {};\n      for (let i = 0; i < processed.length; i += 1) {\n        obj[processed[i]] = tokens[keys[i]];\n      }\n      return obj;\n    }\n    const result = [];\n    for (let i = 0; i < tokens.length; i += 1) {\n      result.push(this.checkToken(tokens[i], distance));\n    }\n    return result;\n  }\n}\n\nmodule.exports = SpellCheck;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst leven = require('./leven');\nconst similarity = require('./similarity');\nconst CosineSimilarity = require('./cosine-similarity');\nconst SpellCheck = require('./spell-check');\n\nmodule.exports = {\n  leven,\n  CosineSimilarity,\n  similarity,\n  SpellCheck,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, compareWildcars } = require('@nlpjs/core');\nconst { SpellCheck } = require('@nlpjs/similarity');\n\nclass Nlu extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings, { locale: 'en' });\n    if (!this.settings.tag) {\n      this.settings.tag = `nlu-${this.settings.locale}`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.applySettings(this, {\n      pipelinePrepare: this.getPipeline(`${this.settings.tag}-prepare`),\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n    this.spellCheck = new SpellCheck(this.settings);\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      'nlu-??',\n      {\n        keepStopwords: true,\n        nonefeatureValue: 1,\n        nonedeltaMultiplier: 1.2,\n        spellCheck: false,\n        spellCheckDistance: 1,\n        filterZeros: true,\n        log: true,\n      },\n      false\n    );\n    this.container.registerPipeline(\n      'nlu-??-train',\n      ['.prepareCorpus', '.addNoneFeature', '.innerTrain'],\n      false\n    );\n  }\n\n  async defaultPipelinePrepare(input) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache.results = {};\n        this.cache.created = new Date().getTime();\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        results: {},\n        normalize: this.container.get('normalize'),\n        tokenize: this.container.get('tokenize'),\n        removeStopwords: this.container.get('removeStopwords'),\n        stem: this.container.get('stem'),\n        arrToObj: this.container.get('arrToObj'),\n      };\n    } else if (this.cache.results[input.settings.locale]) {\n      result =\n        this.cache.results[input.settings.locale][\n          input.text || input.utterance\n        ];\n      if (result) {\n        return result;\n      }\n    }\n    let output = input;\n    output = this.cache.normalize.run(output);\n    output = await this.cache.tokenize.run(output);\n    output = this.cache.removeStopwords.run(output);\n    output = await this.cache.stem.run(output);\n    output = this.cache.arrToObj.run(output);\n    result = output.tokens;\n    if (!this.cache.results[input.settings.locale]) {\n      this.cache.results[input.settings.locale] = {};\n    }\n    this.cache.results[input.settings.locale][input.text || input.utterance] =\n      result;\n    return result;\n  }\n\n  async defaultPipelineProcess(input) {\n    let output = await this.prepare(input);\n    output = await this.doSpellCheck(output);\n    output = await this.textToFeatures(output);\n    output = await this.innerProcess(output);\n    output = await this.filterNonActivated(output);\n    output = await this.normalizeClassifications(output);\n    return output;\n  }\n\n  async prepare(text, srcSettings) {\n    const settings = srcSettings || this.settings;\n    if (typeof text === 'string') {\n      const input = {\n        locale: this.settings.locale,\n        text,\n        settings,\n      };\n      if (this.pipelinePrepare) {\n        return this.runPipeline(input, this.pipelinePrepare);\n      }\n      return this.defaultPipelinePrepare(input);\n    }\n    if (typeof text === 'object') {\n      if (Array.isArray(text)) {\n        const result = [];\n        for (let i = 0; i < text.length; i += 1) {\n          result.push(await this.prepare(text[i], settings));\n        }\n        return result;\n      }\n      let item = settings.fieldNameSrc\n        ? text[settings.fieldNameSrc]\n        : text.texts || text.utterances;\n      if (!item && typeof item !== 'string') {\n        if (typeof text.text === 'string') {\n          item = text.text;\n        } else if (typeof text.utterance === 'string') {\n          item = text.utterance;\n        }\n      }\n      if (item || typeof item === 'string') {\n        const result = await this.prepare(item, settings);\n        const targetField = settings.fieldNameTgt || 'tokens';\n        return { [targetField]: result, ...text };\n      }\n    }\n    throw new Error(\n      `Error at nlu.prepare: expected a text but received ${text}`\n    );\n  }\n\n  async doSpellCheck(input, srcSettings) {\n    const settings = this.applySettings(srcSettings || {}, this.settings);\n    let shouldSpellCheck =\n      input.settings.spellCheck === undefined\n        ? undefined\n        : input.settings.spellCheck;\n    let spellCheckDistance =\n      input.settings.spellCheckDistance === undefined\n        ? undefined\n        : input.settings.spellCheckDistance;\n    if (shouldSpellCheck === undefined) {\n      shouldSpellCheck =\n        settings.spellCheck === undefined ? undefined : settings.spellCheck;\n    }\n    if (spellCheckDistance === undefined) {\n      spellCheckDistance =\n        settings.spellCheckDistance === undefined\n          ? 1\n          : settings.spellCheckDistance;\n    }\n    if (shouldSpellCheck) {\n      const tokens = this.spellCheck.check(input.tokens, spellCheckDistance);\n      input.tokens = tokens;\n    }\n    return input;\n  }\n\n  async prepareCorpus(srcInput) {\n    this.features = {};\n    this.intents = {};\n    this.intentFeatures = {};\n    const input = srcInput;\n    const { corpus } = input;\n    const result = [];\n    for (let i = 0; i < corpus.length; i += 1) {\n      const { intent } = corpus[i];\n      const item = {\n        input: await this.prepare(corpus[i].utterance, input.settings),\n        output: { [intent]: 1 },\n      };\n      const keys = Object.keys(item.input);\n      if (!Object.prototype.hasOwnProperty.call(this.intentFeatures, intent)) {\n        this.intentFeatures[intent] = {};\n      }\n      for (let j = 0; j < keys.length; j += 1) {\n        this.features[keys[j]] = 1;\n        this.intentFeatures[intent][keys[j]] = 1;\n      }\n      this.intents[intent] = 1;\n      result.push(item);\n    }\n    const keys = Object.keys(this.intentFeatures);\n    this.featuresToIntent = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const intent = keys[i];\n      const features = Object.keys(this.intentFeatures[intent]);\n      for (let j = 0; j < features.length; j += 1) {\n        const feature = features[j];\n        if (\n          !Object.prototype.hasOwnProperty.call(this.featuresToIntent, feature)\n        ) {\n          this.featuresToIntent[feature] = [];\n        }\n        this.featuresToIntent[feature].push(intent);\n      }\n    }\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n    input.corpus = result;\n    return input;\n  }\n\n  addNoneFeature(input) {\n    const { corpus } = input;\n    if (input.settings && input.settings.useNoneFeature) {\n      corpus.push({ input: { nonefeature: 1 }, output: { None: 1 } });\n    }\n    return input;\n  }\n\n  convertToArray(srcInput) {\n    const input = srcInput;\n    const { classifications } = input;\n    if (classifications) {\n      if (!this.intentsArr) {\n        if (this.intents) {\n          this.intentsArr = Object.keys(this.intents);\n          if (!this.intents.None) {\n            this.intentsArr.push('None');\n          }\n        } else {\n          this.intentsArr = Object.keys(classifications);\n        }\n      }\n      const keys = this.intentsArr;\n      const result = [];\n      for (let i = 0; i < keys.length; i += 1) {\n        const intent = keys[i];\n        const score = classifications[intent];\n        if (score !== undefined && (score > 0 || !input.settings.filterZeros)) {\n          result.push({ intent, score });\n        }\n      }\n      if (!result.length) {\n        result.push({ intent: 'None', score: 1 });\n      }\n      input.classifications = result.sort((a, b) => b.score - a.score);\n    }\n    return input;\n  }\n\n  someSimilar(tokensA, tokensB) {\n    for (let i = 0; i < tokensB.length; i += 1) {\n      if (tokensA[tokensB[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  matchAllowList(intent, allowList) {\n    for (let i = 0; i < allowList.length; i += 1) {\n      if (compareWildcars(intent, allowList[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  intentIsActivated(intent, tokens, allowList) {\n    if (allowList) {\n      if (Array.isArray(allowList)) {\n        return this.matchAllowList(intent, allowList);\n      }\n      if (!allowList[intent]) {\n        return false;\n      }\n    }\n    const features = this.intentFeatures[intent];\n    if (!features) {\n      return false;\n    }\n    const keys = Object.keys(tokens);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (features[keys[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  filterNonActivated(srcInput) {\n    if (this.intentFeatures && srcInput.classifications) {\n      const intents = srcInput.classifications.map((x) => x.intent);\n      let someModified = false;\n      for (let i = 0; i < intents.length; i += 1) {\n        const intent = intents[i];\n        if (intent !== 'None') {\n          if (\n            !this.intentIsActivated(\n              intent,\n              srcInput.tokens,\n              srcInput.settings.allowList\n            )\n          ) {\n            srcInput.classifications[i].score = 0;\n            someModified = true;\n          }\n        }\n      }\n      if (someModified) {\n        srcInput.classifications.sort((a, b) => b.score - a.score);\n      }\n    }\n    return srcInput;\n  }\n\n  normalizeClassifications(srcInput) {\n    const input = srcInput;\n    const { classifications } = input;\n    if (classifications) {\n      let total = 0;\n      for (let i = 0; i < classifications.length; i += 1) {\n        classifications[i].score **= 2;\n        total += classifications[i].score;\n      }\n      if (total > 0) {\n        for (let i = 0; i < classifications.length; i += 1) {\n          classifications[i].score /= total;\n        }\n      }\n    } else {\n      input.classifications = input.nluAnswer;\n    }\n    return input;\n  }\n\n  textToFeatures(srcInput) {\n    const input = srcInput;\n    const { tokens } = input;\n    const keys = Object.keys(tokens);\n    let unknownTokens = 0;\n    const features = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const token = keys[i];\n      if (token === 'nonefeature') {\n        tokens[token] = this.nonefeatureValue;\n      } else if (!this.features || !this.features[token]) {\n        unknownTokens += 1;\n      } else {\n        features[token] = tokens[token];\n      }\n    }\n    let nonedelta =\n      input.settings.nonedeltaValue === undefined\n        ? this.numIntents / this.numFeatures\n        : this.settings.nonedeltaValue;\n    let nonevalue = 0;\n    for (let i = 0; i < unknownTokens; i += 1) {\n      nonevalue += nonedelta;\n      nonedelta *= this.settings.nonedeltaMultiplier;\n    }\n    if (input.settings && input.settings.useNoneFeature && nonevalue) {\n      features.nonefeature = nonevalue;\n    }\n    input.tokens = features;\n    return input;\n  }\n\n  async innerTrain() {\n    throw new Error('This method should be implemented by child classes');\n  }\n\n  async train(corpus, settings) {\n    const input = {\n      corpus,\n      settings: this.applySettings(settings, this.settings),\n    };\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n\n  async getExplanation(input, explanation) {\n    if (!explanation) {\n      return undefined;\n    }\n    const normalized = await this.container.get('normalize').run(input);\n    const tokenized = await this.container.get('tokenize').run(normalized);\n    const { tokens } = tokenized;\n    const stemmed = await this.container.get('stem').run(tokenized);\n    const stems = stemmed.tokens;\n    const result = [];\n    result.push({\n      token: '',\n      stem: '##bias',\n      weight: explanation.bias,\n    });\n    for (let i = 0; i < tokens.length; i += 1) {\n      const stem = stems[i];\n      result.push({\n        token: tokens[i],\n        stem,\n        weight: explanation.weights[stem],\n      });\n    }\n    return result;\n  }\n\n  async process(utterance, settings) {\n    const input = {\n      text: utterance,\n      settings: this.applySettings(settings || {}, this.settings),\n    };\n    let output;\n    if (this.pipelineProcess) {\n      output = await this.runPipeline(input, this.pipelineProcess);\n    } else {\n      output = await this.defaultPipelineProcess(input);\n    }\n    if (Array.isArray(output.classifications)) {\n      const explanation = input.settings.returnExplanation\n        ? await this.getExplanation(input, output.explanation)\n        : undefined;\n      return {\n        classifications: output.classifications,\n        entities: undefined,\n        explanation,\n      };\n    }\n    if (output.intents) {\n      output.classifications = output.intents;\n      delete output.intents;\n    }\n    return output;\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      features: this.features,\n      intents: this.intents,\n      intentFeatures: this.intentFeatures,\n      featuresToIntent: this.featuresToIntent,\n    };\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.features = json.features || {};\n    this.intents = json.intents || {};\n    this.intentsArr = Object.keys(json.intents);\n    this.featuresToIntent = json.featuresToIntent || {};\n    this.intentFeatures = json.intentFeatures || {};\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n  }\n}\n\nmodule.exports = Nlu;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass Lookup {\n  constructor(data, propName = 'input') {\n    this.dict = {};\n    this.items = [];\n    if (data) {\n      this.buildFromData(data, propName);\n    }\n  }\n\n  add(key) {\n    if (this.dict[key] === undefined) {\n      this.dict[key] = this.items.length;\n      this.items.push(key);\n    }\n  }\n\n  buildFromData(data, propName) {\n    for (let i = 0; i < data.length; i += 1) {\n      const item = data[i][propName];\n      const keys = Object.keys(item);\n      for (let j = 0; j < keys.length; j += 1) {\n        this.add(keys[j]);\n      }\n    }\n  }\n\n  prepare(item) {\n    const keys = Object.keys(item);\n    const resultKeys = [];\n    const resultData = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      if (this.dict[key] !== undefined) {\n        resultKeys.push(this.dict[key]);\n        resultData[this.dict[key]] = item[key];\n      }\n    }\n    return {\n      keys: resultKeys,\n      data: resultData,\n    };\n  }\n}\n\nmodule.exports = Lookup;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Lookup = require('./lookup');\n\nclass CorpusLookup {\n  constructor(features, intents) {\n    if (features) {\n      this.inputLookup = new Lookup();\n      this.outputLookup = new Lookup();\n      for (let i = 0; i < features.length; i += 1) {\n        this.inputLookup.add(features[i]);\n      }\n      for (let i = 0; i < intents.length; i += 1) {\n        this.outputLookup.add(intents[i]);\n      }\n      this.numInputs = this.inputLookup.items.length;\n      this.numOutputs = this.outputLookup.items.length;\n    }\n  }\n\n  build(corpus) {\n    this.inputLookup = new Lookup(corpus, 'input');\n    this.outputLookup = new Lookup(corpus, 'output');\n    this.numInputs = this.inputLookup.items.length;\n    this.numOutputs = this.outputLookup.items.length;\n    const result = [];\n    for (let i = 0; i < corpus.length; i += 1) {\n      const { input, output } = corpus[i];\n      result.push({\n        input: this.inputLookup.prepare(input),\n        output: this.outputLookup.prepare(output),\n      });\n    }\n    return result;\n  }\n\n  transformInput(input) {\n    return this.inputLookup.prepare(input);\n  }\n}\n\nmodule.exports = CorpusLookup;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst CorpusLookup = require('./corpus-lookup');\n\nconst defaultSettings = {\n  iterations: 20000,\n  errorThresh: 0.00005,\n  deltaErrorThresh: 0.000001,\n  learningRate: 0.6,\n  momentum: 0.5,\n  alpha: 0.07,\n  log: false,\n};\n\nclass NeuralNetwork {\n  constructor(settings = {}) {\n    this.settings = settings;\n    this.applySettings(this.settings, defaultSettings);\n    if (this.settings.log === true) {\n      this.logFn = (status, time) =>\n        console.log(\n          `Epoch ${status.iterations} loss ${status.error} time ${time}ms`\n        );\n    } else if (typeof this.settings.log === 'function') {\n      this.logFn = this.settings.log;\n    }\n  }\n\n  applySettings(obj = {}, settings = {}) {\n    Object.keys(settings).forEach((key) => {\n      if (obj[key] === undefined) {\n        obj[key] = settings[key];\n      }\n    });\n    return obj;\n  }\n\n  initialize(numInputs, outputNames) {\n    this.perceptronsByName = {};\n    this.perceptrons = [];\n    this.outputs = {};\n    this.numPerceptrons = outputNames.length;\n    for (let i = 0; i < outputNames.length; i += 1) {\n      const name = outputNames[i];\n      this.outputs[name] = 0;\n      const perceptron = {\n        name,\n        id: i,\n        weights: new Float32Array(numInputs),\n        changes: new Float32Array(numInputs),\n        bias: 0,\n      };\n      this.perceptrons.push(perceptron);\n      this.perceptronsByName[name] = perceptron;\n    }\n  }\n\n  runInputPerceptron(perceptron, input) {\n    const sum = input.keys.reduce(\n      (prev, key) => prev + input.data[key] * perceptron.weights[key],\n      perceptron.bias\n    );\n    return sum <= 0 ? 0 : this.settings.alpha * sum;\n  }\n\n  runInput(input) {\n    for (let i = 0; i < this.numPerceptrons; i += 1) {\n      this.outputs[this.perceptrons[i].name] = this.runInputPerceptron(\n        this.perceptrons[i],\n        input\n      );\n    }\n    return this.outputs;\n  }\n\n  get isRunnable() {\n    return !!this.numPerceptrons;\n  }\n\n  run(input) {\n    return this.numPerceptrons\n      ? this.runInput(this.lookup.transformInput(input))\n      : undefined;\n  }\n\n  prepareCorpus(corpus) {\n    this.lookup = new CorpusLookup();\n    return this.lookup.build(corpus);\n  }\n\n  verifyIsInitialized() {\n    if (!this.perceptrons) {\n      this.initialize(this.lookup.numInputs, this.lookup.outputLookup.items);\n    }\n  }\n\n  trainPerceptron(perceptron, data) {\n    const { alpha, momentum } = this.settings;\n    const { changes, weights } = perceptron;\n    let error = 0;\n    for (let i = 0; i < data.length; i += 1) {\n      const { input, output } = data[i];\n      const actualOutput = this.runInputPerceptron(perceptron, input);\n      const expectedOutput = output.data[perceptron.id] || 0;\n      const currentError = expectedOutput - actualOutput;\n      if (currentError) {\n        error += currentError ** 2;\n        const delta =\n          (actualOutput > 0 ? 1 : alpha) *\n          currentError *\n          this.decayLearningRate;\n        for (let j = 0; j < input.keys.length; j += 1) {\n          const key = input.keys[j];\n          const change = delta * input.data[key] + momentum * changes[key];\n          changes[key] = change;\n          weights[key] += change;\n        }\n        perceptron.bias += delta;\n      }\n    }\n    return error;\n  }\n\n  train(corpus) {\n    if (!corpus || !corpus.length) {\n      return {};\n    }\n    const useNoneFeature =\n      corpus[corpus.length - 1].input.nonefeature !== undefined;\n    if (useNoneFeature) {\n      const intents = {};\n      for (let i = 0; i < corpus.length - 1; i += 1) {\n        const tokens = Object.keys(corpus[i].output);\n        for (let j = 0; j < tokens.length; j += 1) {\n          if (!intents[tokens[j]]) {\n            intents[tokens[j]] = 1;\n          }\n        }\n      }\n      const current = corpus[corpus.length - 1];\n      const keys = Object.keys(intents);\n      for (let i = 0; i < keys.length; i += 1) {\n        current.output[keys[i]] = 0.0000001;\n      }\n    }\n    const data = this.prepareCorpus(corpus);\n    if (!this.status) {\n      this.status = { error: Infinity, deltaError: Infinity, iterations: 0 };\n    }\n    this.verifyIsInitialized();\n    const minError = this.settings.errorThresh;\n    const minDelta = this.settings.deltaErrorThresh;\n    while (\n      this.status.iterations < this.settings.iterations &&\n      this.status.error > minError &&\n      this.status.deltaError > minDelta\n    ) {\n      const hrstart = new Date();\n      this.status.iterations += 1;\n      this.decayLearningRate =\n        this.settings.learningRate / (1 + 0.001 * this.status.iterations);\n      const lastError = this.status.error;\n      this.status.error = 0;\n      for (let i = 0; i < this.numPerceptrons; i += 1) {\n        this.status.error += this.trainPerceptron(this.perceptrons[i], data);\n      }\n      this.status.error /= this.numPerceptrons * data.length;\n      this.status.deltaError = Math.abs(this.status.error - lastError);\n      const hrend = new Date();\n      if (this.logFn) {\n        this.logFn(this.status, hrend.getTime() - hrstart.getTime());\n      }\n    }\n    return this.status;\n  }\n\n  explain(input, intent) {\n    const transformedInput = this.lookup.transformInput(input);\n    const result = {};\n    const intentIndex = this.lookup.outputLookup.dict[intent];\n    if (intentIndex === undefined) {\n      return {};\n    }\n    for (let i = 0; i < transformedInput.keys.length; i += 1) {\n      const key = transformedInput.keys[i];\n      result[this.lookup.inputLookup.items[key]] =\n        this.perceptrons[intentIndex].weights[key];\n    }\n    return {\n      weights: result,\n      bias: this.perceptrons[intentIndex].bias,\n    };\n  }\n\n  toJSON() {\n    const settings = {};\n    const keys = Object.keys(this.settings);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      if (this.settings[key] !== defaultSettings[key]) {\n        settings[key] = this.settings[key];\n      }\n    }\n    if (!this.lookup) {\n      return {\n        settings,\n      };\n    }\n    const features = this.lookup.inputLookup.items;\n    const intents = this.lookup.outputLookup.items;\n    const perceptrons = [];\n    for (let i = 0; i < this.perceptrons.length; i += 1) {\n      const perceptron = this.perceptrons[i];\n      const weights = [...perceptron.weights, perceptron.bias];\n      perceptrons.push(weights);\n    }\n    return {\n      settings,\n      features,\n      intents,\n      perceptrons,\n    };\n  }\n\n  fromJSON(json) {\n    this.settings = this.applySettings({\n      ...defaultSettings,\n      ...json.settings,\n    });\n    if (json.features) {\n      this.lookup = new CorpusLookup(json.features, json.intents);\n      this.initialize(json.features.length, json.intents);\n      for (let i = 0; i < this.perceptrons.length; i += 1) {\n        const perceptron = this.perceptrons[i];\n        const data = json.perceptrons[i];\n        perceptron.bias = data[data.length - 1];\n        for (let j = 0; j < json.features.length; j += 1) {\n          perceptron.weights[j] = data[j];\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = NeuralNetwork;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst NeuralNetwork = require('./neural-network');\n\nmodule.exports = {\n  NeuralNetwork,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { NeuralNetwork } = require('@nlpjs/neural');\nconst Nlu = require('./nlu');\n\nclass NeuralNlu extends Nlu {\n  async innerTrain(srcInput) {\n    const input = srcInput;\n    this.neuralNetwork = new NeuralNetwork(input.settings, this.container);\n    input.status = await this.neuralNetwork.train(input.corpus);\n    return input;\n  }\n\n  innerProcess(srcInput) {\n    const input = srcInput;\n    input.classifications = this.neuralNetwork\n      ? this.neuralNetwork.run(input.tokens) || { None: 1 }\n      : { None: 1 };\n    this.convertToArray(input);\n    const { intent } = input.classifications[0];\n    if (\n      input.settings &&\n      input.settings.returnExplanation &&\n      intent &&\n      this.neuralNetwork &&\n      intent !== 'None'\n    ) {\n      input.explanation = this.neuralNetwork.explain(input.tokens, intent);\n    }\n    return input;\n  }\n\n  registerDefault() {\n    super.registerDefault();\n    this.container.register('NeuralNlu', NeuralNlu, false);\n  }\n\n  toJSON() {\n    const result = super.toJSON();\n    result.neuralNetwork = this.neuralNetwork\n      ? this.neuralNetwork.toJSON()\n      : undefined;\n    return result;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n    if (json.neuralNetwork) {\n      this.neuralNetwork = new NeuralNetwork();\n      this.neuralNetwork.fromJSON(json.neuralNetwork);\n    }\n  }\n}\n\nmodule.exports = NeuralNlu;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, compareWildcars } = require('@nlpjs/core');\n\nconst defaultDomainName = 'master_domain';\n\nclass DomainManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings, { locale: 'en' });\n    if (!this.settings.tag) {\n      this.settings.tag = `domain-manager-${this.settings.locale}`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.domains = {};\n    this.addDomain(defaultDomainName);\n    this.stemDict = {};\n    this.intentDict = {};\n    this.sentences = [];\n    this.applySettings(this, {\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      'domain-manager-??',\n      {\n        nluByDomain: {\n          default: {\n            className: 'NeuralNlu',\n            settings: {},\n          },\n        },\n        trainByDomain: false,\n        useStemDict: true,\n      },\n      false\n    );\n    this.container.registerPipeline(\n      'domain-manager-??-train',\n      [\n        '.trainStemmer',\n        '.generateCorpus',\n        '.fillStemDict',\n        '.innerTrain',\n        'output.status',\n      ],\n      false\n    );\n  }\n\n  getDomainInstance(domainName) {\n    if (!this.settings.nluByDomain) {\n      this.settings.nluByDomain = {};\n    }\n    const domainSettings = this.settings.nluByDomain[domainName] ||\n      this.settings.nluByDomain.default || {\n        className: 'NeuralNlu',\n        settings: {},\n      };\n    return this.container.get(\n      domainSettings.className || 'NeuralNlu',\n      this.applySettings(\n        { locale: this.settings.locale },\n        domainSettings.settings || {}\n      )\n    );\n  }\n\n  addDomain(name) {\n    if (!this.domains[name]) {\n      this.domains[name] = this.getDomainInstance(name);\n    }\n    return this.domains[name];\n  }\n\n  removeDomain(name) {\n    delete this.domains[name];\n  }\n\n  async generateStemKey(srcTokens) {\n    let tokens;\n    if (typeof srcTokens !== 'string') {\n      tokens = srcTokens;\n    } else {\n      const input = await this.prepare({ utterance: srcTokens });\n      tokens = await input.stems;\n    }\n    if (!Array.isArray(tokens)) {\n      tokens = Object.keys(tokens);\n    }\n    return tokens.slice().sort().join();\n  }\n\n  add(domain, utterance, intent) {\n    if (!intent) {\n      this.sentences.push({\n        domain: defaultDomainName,\n        utterance: domain,\n        intent: utterance,\n      });\n    } else {\n      this.sentences.push({ domain, utterance, intent });\n    }\n  }\n\n  getSentences() {\n    return this.sentences;\n  }\n\n  remove(srcDomain, srcUtterance, srcIntent) {\n    const domain = srcIntent ? srcDomain : defaultDomainName;\n    const utterance = srcIntent ? srcUtterance : srcDomain;\n    const intent = srcIntent || srcUtterance;\n    for (let i = 0; i < this.sentences.length; i += 1) {\n      const sentence = this.sentences[i];\n      if (\n        sentence.domain === domain &&\n        sentence.utterance === utterance &&\n        sentence.intent === intent\n      ) {\n        this.sentences.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async trainStemmer(srcInput) {\n    const input = srcInput;\n    if (!this.cache) {\n      this.cache = {\n        stem: this.container.get('stem'),\n      };\n    }\n    for (let i = 0; i < this.sentences.length; i += 1) {\n      const current = this.sentences[i];\n      const subInput = { ...current, ...input };\n      await this.cache.stem.addForTraining(subInput);\n    }\n    await this.cache.stem.train(input);\n    return input;\n  }\n\n  innerGenerateCorpus(domainName) {\n    this.intentDict = {};\n    const result = {};\n    result[defaultDomainName] = [];\n    for (let i = 0; i < this.sentences.length; i += 1) {\n      const sentence = this.sentences[i];\n      this.intentDict[sentence.intent] = sentence.domain;\n      const domain = domainName || sentence.domain;\n      if (!result[domain]) {\n        result[domain] = [];\n      }\n      const domainObj = result[domain];\n      domainObj.push({\n        utterance: sentence.utterance,\n        intent: sentence.intent,\n      });\n      if (!domainName) {\n        result[defaultDomainName].push({\n          utterance: sentence.utterance,\n          intent: sentence.domain,\n        });\n      }\n    }\n    return result;\n  }\n\n  async generateCorpus(srcInput) {\n    const input = srcInput;\n    input.corpus = this.innerGenerateCorpus(\n      this.settings.trainByDomain ? undefined : defaultDomainName\n    );\n    return input;\n  }\n\n  async prepare(srcInput) {\n    const input = srcInput;\n    const isString = typeof input === 'string';\n    const utterance = isString ? input : input.utterance;\n    const nlu = this.addDomain(defaultDomainName);\n    const tokens = nlu.prepare(utterance);\n    if (isString) {\n      return tokens;\n    }\n    input.stems = tokens;\n    return input;\n  }\n\n  async fillStemDict(srcInput) {\n    this.stemDict = {};\n    for (let i = 0; i < this.sentences.length; i += 1) {\n      const { utterance, intent, domain } = this.sentences[i];\n      const key = await this.generateStemKey(utterance);\n      if (!key || key === '') {\n        this.container\n          .get('logger')\n          .warn(`This utterance: \"${utterance}\" contains only stop words`);\n      }\n      this.stemDict[key] = {\n        intent,\n        domain,\n      };\n    }\n    return srcInput;\n  }\n\n  async innerTrain(srcInput) {\n    const input = srcInput;\n    const { corpus } = input;\n    const keys = Object.keys(corpus);\n    const status = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const nlu = this.addDomain(keys[i]);\n      const options = { useNoneFeature: this.settings.useNoneFeature };\n      if (srcInput.settings && srcInput.settings.log !== undefined) {\n        options.log = srcInput.settings.log;\n      }\n      const result = await nlu.train(corpus[keys[i]], options);\n      status[keys[i]] = result.status;\n    }\n    input.status = status;\n    return input;\n  }\n\n  async train(settings) {\n    const input = {\n      domainManager: this,\n      settings: settings || this.settings,\n    };\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n\n  matchAllowList(intent, allowList) {\n    for (let i = 0; i < allowList.length; i += 1) {\n      if (compareWildcars(intent, allowList[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async classifyByStemDict(utterance, domainName, allowList) {\n    const key = await this.generateStemKey(utterance);\n    const resolved = this.stemDict[key];\n    if (resolved && (!domainName || resolved.domain === domainName)) {\n      if (allowList && !this.matchAllowList(resolved.intent, allowList)) {\n        return undefined;\n      }\n      const classifications = [];\n      classifications.push({\n        intent: resolved.intent,\n        score: 1,\n      });\n      const intents = Object.keys(this.intentDict);\n      for (let i = 0; i < intents.length; i += 1) {\n        if (intents[i] !== resolved.intent) {\n          classifications.push({ intent: intents[i], score: 0 });\n        }\n      }\n      return { domain: resolved.domain, classifications };\n    }\n    return undefined;\n  }\n\n  async innerClassify(srcInput, domainName) {\n    const input = srcInput;\n    const settings = this.applySettings({ ...input.settings }, this.settings);\n    if (settings.useStemDict) {\n      const result = await this.classifyByStemDict(\n        input.utterance,\n        domainName,\n        srcInput.settings ? srcInput.settings.allowList : undefined\n      );\n      if (result) {\n        input.classification = result;\n        input.explanation = [\n          {\n            token: '',\n            stem: '##exact',\n            weight: 1,\n          },\n        ];\n        return input;\n      }\n    }\n    if (domainName) {\n      const nlu = this.domains[domainName];\n      if (!nlu) {\n        input.classification = {\n          domain: 'default',\n          classifications: [{ intent: 'None', score: 1 }],\n        };\n        return input;\n      }\n      const nluAnswer = await nlu.process(\n        input.utterance,\n        input.settings || this.settings\n      );\n      let classifications;\n      if (Array.isArray(nluAnswer)) {\n        classifications = nluAnswer;\n      } else {\n        classifications = nluAnswer.classifications;\n        input.nluAnswer = nluAnswer;\n      }\n      let finalDomain;\n      if (domainName === defaultDomainName) {\n        if (classifications && classifications.length) {\n          finalDomain = this.intentDict[classifications[0].intent];\n        } else {\n          finalDomain = defaultDomainName;\n        }\n      } else {\n        finalDomain = domainName;\n      }\n      input.classification = {\n        domain: finalDomain,\n        classifications,\n      };\n      return input;\n    }\n    let domain = defaultDomainName;\n    if (\n      (input.settings.trainByDomain === undefined &&\n        this.settings.trainByDomain) ||\n      input.settings.trainByDomain\n    ) {\n      const nlu = this.domains[defaultDomainName];\n      let classifications = await nlu.process(input.utterance);\n      if (classifications.classifications) {\n        classifications = classifications.classifications;\n      }\n      if (Object.keys(this.domains).length === 1) {\n        input.classification = {\n          domain: 'default',\n          classifications,\n        };\n        return input;\n      }\n      domain = classifications[0].intent;\n      if (domain === 'None') {\n        input.classification = {\n          domain: 'default',\n          classifications: [{ intent: 'None', score: 1 }],\n        };\n        return input;\n      }\n    }\n    return this.innerClassify(input, domain);\n  }\n\n  async defaultPipelineProcess(input) {\n    const output = await this.innerClassify(input);\n    return output.classification;\n  }\n\n  async process(utterance, settings) {\n    const input =\n      typeof utterance === 'string'\n        ? {\n            utterance,\n            settings: settings || this.settings,\n          }\n        : utterance;\n    if (this.pipelineProcess) {\n      return this.runPipeline(input, this.pipelineProcess);\n    }\n    return this.defaultPipelineProcess(input);\n  }\n\n  toJSON() {\n    const result = {\n      settings: this.settings,\n      stemDict: this.stemDict,\n      intentDict: this.intentDict,\n      sentences: this.sentences,\n      domains: {},\n    };\n    delete result.settings.container;\n    const keys = Object.keys(this.domains);\n    for (let i = 0; i < keys.length; i += 1) {\n      result.domains[keys[i]] = this.domains[keys[i]].toJSON();\n    }\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.stemDict = json.stemDict;\n    this.intentDict = json.intentDict;\n    this.sentences = json.sentences;\n    const keys = Object.keys(json.domains);\n    for (let i = 0; i < keys.length; i += 1) {\n      const domain = this.addDomain(keys[i]);\n      domain.fromJSON(json.domains[keys[i]]);\n    }\n  }\n}\n\nmodule.exports = DomainManager;\n", "[[\"ar\",\"arb\",\"Arabic\"],[\"bn\",\"ben\",\"Bengali\"],[\"ca\",\"cat\",\"Catalan\"],[\"cs\",\"ces\",\"Czech\"],[\"da\",\"dan\",\"Danish\"],[\"de\",\"deu\",\"German\"],[\"el\",\"ell\",\"Greek\"],[\"en\",\"eng\",\"English\"],[\"eu\",\"eus\",\"Basque\"],[\"fa\",\"fas\",\"Persian\"],[\"fi\",\"fin\",\"Finnish\"],[\"fr\",\"fra\",\"French\"],[\"ga\",\"gle\",\"Irish\"],[\"gl\",\"glg\",\"Galician\"],[\"hi\",\"hin\",\"Hindi\"],[\"hu\",\"hun\",\"Hungarian\"],[\"hy\",\"hye\",\"Armenian\"],[\"id\",\"ind\",\"Indonesian\"],[\"it\",\"ita\",\"Italian\"],[\"ja\",\"jpn\",\"Japanese\"],[\"ko\",\"kor\",\"Korean\"],[\"lt\",\"lit\",\"Lithuanian\"],[\"ne\",\"nep\",\"Nepali\"],[\"nl\",\"nld\",\"Dutch\"],[\"no\",\"nor\",\"Norwegian\"],[\"pl\", \"pol\", \"Polish\"],[\"pt\",\"por\",\"Portuguese\"],[\"ro\",\"ron\",\"Romanian\"],[\"ru\",\"rus\",\"Russian\"],[\"sr\",\"srp\",\"Serbian\"],[\"sl\",\"slv\",\"Slovenian\"],[\"es\",\"spa\",\"Spanish\"],[\"sv\",\"swe\",\"Swedish\"],[\"ta\",\"tam\",\"Tamil\"],[\"tl\",\"tgl\",\"Tagalog\"],[\"th\",\"tha\",\"Thai\"],[\"tr\",\"tur\",\"Turkish\"],[\"uk\",\"ukr\",\"Ukrainian\"],[\"zh\",\"cmn\",\"Chinese\"]]", "{\n  \"Latin\": {\n    \"spa\": \"\",\n    \"eng\": \"\",\n    \"por\": \"\",\n    \"ind\": \"\",\n    \"fra\": \"\",\n    \"deu\": \"\",\n    \"ita\": \"\",\n    \"tur\": \"\",\n    \"nld\": \"\",\n    \"tgl\": \"\",\n    \"hun\": \"\",\n    \"ces\": \"\",\n    \"swe\": \"\",\n    \"fin\": \"\",\n    \"dan\": \"\",\n    \"cat\": \"\",\n    \"glg\": \"\",\n    \"slv\": \"\"\n  },\n  \"Cyrillic\": {\n    \"rus\": \"\",\n    \"ukr\": \"\"\n  },\n  \"Arabic\": {\n    \"arb\": \"\",\n    \"fas\": \"\"\n  },\n  \"Devanagari\": {\n    \"hin\": \"\"\n  },\n  \"Ethiopic\": {\n  },\n  \"Hebrew\": {\n  }\n}", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst languageData = require('./languages.json');\nconst data = require('./data.json');\n\nconst scripts = {\n  cmn: /[\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]/g,\n  Latin:\n    /[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A]/g,\n  Cyrillic:\n    /[\\u0400-\\u0484\\u0487-\\u052F\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69D\\uA69F]/g,\n  Arabic:\n    /[\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u065F\\u066A-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B2\\u08E4-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC]|\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]/g,\n  ben: /[\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB]/g,\n  Devanagari: /[\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FB]/g,\n  jpn: /[\\u3041-\\u3096\\u309D-\\u309F]|\\uD82C\\uDC01|\\uD83C\\uDE00|[\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D]|\\uD82C\\uDC00/g,\n  kor: /[\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/g,\n  tel: /[\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F]/g,\n  tam: /[\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA]/g,\n  guj: /[\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1]/g,\n  kan: /[\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2]/g,\n  mal: /[\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D75\\u0D79-\\u0D7F]/g,\n  Myanmar: /[\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F]/g,\n  ori: /[\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77]/g,\n  pan: /[\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75]/g,\n  Ethiopic:\n    /[\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]/g,\n  tha: /[\\u0E01-\\u0E3A\\u0E40-\\u0E5B]/g,\n  sin: /[\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4]|\\uD804[\\uDDE1-\\uDDF4]/g,\n  ell: /[\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65]|\\uD800[\\uDD40-\\uDD8C\\uDDA0]|\\uD834[\\uDE00-\\uDE45]/g,\n  khm: /[\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF]/g,\n  hye: /[\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17]/g,\n  sat: /[\\u1C50-\\u1C7F]/g,\n  bod: /[\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA]/g,\n  Hebrew:\n    /[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]/g,\n  kat: /[\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D]/g,\n  lao: /[\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF]/g,\n  zgh: /[\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F]/g,\n  iii: /[\\uA000-\\uA48C\\uA490-\\uA4C6]/g,\n  aii: /[\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F]/g,\n};\n\nconst scriptKeys = Object.keys(scripts);\n\nconst und = () => [['und', 1]];\n\nclass Language {\n  constructor() {\n    this.languagesAlpha3 = {};\n    this.languagesAlpha2 = {};\n    this.extraSentences = [];\n    this.buildData();\n  }\n\n  static getTrigrams(srcValue) {\n    const result = [];\n    const value = srcValue\n      ? ` ${String(srcValue)\n          .replace(/[\\u0021-\\u0040]+/g, ' ')\n          .replace(/\\s+/g, ' ')\n          .trim()\n          .toLowerCase()} `\n      : '';\n    if (!value || value.length < 3) {\n      return result;\n    }\n    for (let i = 0, l = value.length - 2; i < l; i += 1) {\n      result[i] = value.substr(i, 3);\n    }\n    return result;\n  }\n\n  static asTuples(value) {\n    const dictionary = Language.getTrigrams(value).reduce(\n      (srcprev, current) => {\n        const prev = srcprev;\n        prev[current] = (prev[current] || 0) + 1;\n        return prev;\n      },\n      {}\n    );\n    const tuples = [];\n    Object.keys(dictionary).forEach((key) => {\n      tuples.push([key, dictionary[key]]);\n    });\n    tuples.sort((a, b) => a[1] - b[1]);\n    return tuples;\n  }\n\n  static getDistance(trigrams, model) {\n    let distance = 0;\n    trigrams.forEach((currentTrigram) => {\n      distance +=\n        currentTrigram[0] in model\n          ? Math.abs(currentTrigram[1] - model[currentTrigram[0]] - 1)\n          : 300;\n    });\n    return distance;\n  }\n\n  static getOccurrence(value, expression) {\n    const count = value.match(expression);\n    return (count ? count.length : 0) / value.length || 0;\n  }\n\n  static isLatin(value) {\n    let total = 0;\n    const half = value.length / 2;\n    for (let i = 0; i < value.length; i += 1) {\n      const c = value.charCodeAt(i);\n      if (c >= 32 && c <= 126) {\n        total += 1;\n        if (total > half) {\n          return true;\n        }\n      }\n    }\n    return total > half;\n  }\n\n  static getTopScript(value) {\n    if (Language.isLatin(value)) {\n      return ['Latin', 1];\n    }\n    let topCount = -1;\n    let topScript;\n    for (let i = 0; i < scriptKeys.length; i += 1) {\n      const script = scriptKeys[i];\n      const count = Language.getOccurrence(value, scripts[script]);\n      if (count > topCount) {\n        topCount = count;\n        topScript = script;\n        if (topCount === 1) {\n          return [topScript, topCount];\n        }\n      }\n    }\n    return [topScript, topCount];\n  }\n\n  static filterLanguages(languages, allowList, denyList) {\n    if (allowList.length === 0 && denyList.length === 0) {\n      return languages;\n    }\n    const filteredLanguages = {};\n    Object.keys(languages).forEach((language) => {\n      if (\n        (allowList.length === 0 || allowList.indexOf(language) > -1) &&\n        denyList.indexOf(language) === -1\n      ) {\n        filteredLanguages[language] = languages[language];\n      }\n    });\n    return filteredLanguages;\n  }\n\n  static getDistances(trigrams, srcLanguages, options) {\n    const distances = [];\n    const allowList = options.allowList || [];\n    const denyList = options.denyList || [];\n    const languages = Language.filterLanguages(\n      srcLanguages,\n      allowList,\n      denyList\n    );\n    if (!languages) {\n      return und();\n    }\n    Object.keys(languages).forEach((language) => {\n      distances.push([\n        language,\n        Language.getDistance(trigrams, languages[language]),\n      ]);\n    });\n    return distances.sort((a, b) => a[1] - b[1]);\n  }\n\n  static detectAll(srcValue, settings = {}) {\n    const minLength = settings.minLength || 10;\n    if (!srcValue || srcValue.length < minLength) {\n      return und();\n    }\n    const value = srcValue.substr(0, 2048);\n    const script = Language.getTopScript(value);\n    if (!(script[0] in data) && script[1] > 0.5) {\n      if (settings.allowList) {\n        if (settings.allowList.includes(script[0])) {\n          return [[script[0], 1]];\n        }\n        if (script[0] === 'cmn' && settings.allowList.includes('jpn')) {\n          return [['jpn', 1]];\n        }\n      } else {\n        return [[script[0], 1]];\n      }\n    }\n\n    if (data[script[0]]) {\n      const distances = Language.getDistances(\n        Language.asTuples(value),\n        data[script[0]],\n        settings\n      );\n      if (distances[0][0] === 'und') {\n        return [[script[0], 1]];\n      }\n      const min = distances[0][1];\n      const max = value.length * 300 - min;\n      return distances.map((d) => [d[0], 1 - (d[1] - min) / max || 0]);\n    }\n    return [[script[0], 1]];\n  }\n\n  buildData() {\n    for (let i = 0; i < languageData.length; i += 1) {\n      const language = {\n        alpha2: languageData[i][0],\n        alpha3: languageData[i][1],\n        name: languageData[i][2],\n      };\n      this.languagesAlpha3[language.alpha3] = language;\n      this.languagesAlpha2[language.alpha2] = language;\n    }\n  }\n\n  transformAllowList(allowList) {\n    const result = [];\n    for (let i = 0; i < allowList.length; i += 1) {\n      if (allowList[i].length === 3) {\n        result.push(allowList[i]);\n      } else {\n        const language = this.languagesAlpha2[allowList[i]];\n        if (language) {\n          result.push(language.alpha3);\n        }\n      }\n    }\n    return result;\n  }\n\n  guess(utterance, allowList, limit) {\n    const options = {};\n    if (utterance.length < 10) {\n      options.minLength = utterance.length;\n    }\n    if (allowList && allowList.length && allowList.length > 0) {\n      options.allowList = this.transformAllowList(allowList);\n    }\n    const scores = Language.detectAll(utterance, options);\n    const result = [];\n    for (let i = 0; i < scores.length; i += 1) {\n      const language = this.languagesAlpha3[scores[i][0]];\n      if (language) {\n        result.push({\n          alpha3: language.alpha3,\n          alpha2: language.alpha2,\n          language: language.name,\n          score: scores[i][1],\n        });\n        if (limit && result.length >= limit) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Given an utterance, an allow list of iso codes and the limit of results,\n   * return the language with the best score.\n   * The allowList is optional.\n   * @param {String} utterance Utterance wich we want to guess the language.\n   * @param {String[]} allowList allowList of accepted languages.\n   * @return {Object} Best guess.\n   */\n  guessBest(utterance, allowList) {\n    return this.guess(utterance, allowList, 1)[0];\n  }\n\n  addTrigrams(locale, sentence) {\n    const language = this.languagesAlpha2[locale];\n    const iso3 = language ? language.alpha3 : locale;\n    const script = Language.getTopScript(sentence)[0];\n    const trigrams = Language.getTrigrams(sentence);\n    if (data[script]) {\n      if (!data[script][iso3]) {\n        data[script][iso3] = {};\n      }\n      trigrams.forEach((trigram) => {\n        data[script][iso3][trigram] = 1;\n      });\n    }\n  }\n\n  addExtraSentence(locale, sentence) {\n    this.extraSentences.push([locale, sentence]);\n    this.addTrigrams(locale, sentence);\n  }\n\n  processExtraSentences() {\n    this.extraSentences.forEach((item) => {\n      this.addTrigrams(item[0], item[1]);\n    });\n  }\n\n  static lansplit(s) {\n    if (s.includes('|')) {\n      return s.split('|');\n    }\n    const result = [];\n    for (let i = 0; i < s.length; i += 3) {\n      result.push(s.substr(i, 3));\n    }\n    return result;\n  }\n\n  static addModel(script, name, value) {\n    const languages = data[script];\n    const model = Language.lansplit(value);\n    let weight = model.length;\n    const trigrams = {};\n    while (weight > 0) {\n      weight -= 1;\n      trigrams[model[weight]] = weight;\n    }\n    languages[name] = trigrams;\n  }\n\n  addModel(script, name, value) {\n    Language.addModel(script, name, value);\n  }\n\n  static buildModel() {\n    Object.keys(data).forEach((script) => {\n      const languages = data[script];\n      Object.keys(languages).forEach((name) => {\n        Language.addModel(script, name, languages[name]);\n      });\n    });\n  }\n}\n\nLanguage.buildModel();\n\nmodule.exports = Language;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Language = require('./language');\n\nmodule.exports = {\n  Language,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\nconst { Language } = require('@nlpjs/language-min');\nconst DomainManager = require('./domain-manager');\n\nclass NluManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlu-manager';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    if (!this.container.get('Language')) {\n      this.container.register('Language', Language, false);\n    }\n    this.guesser = this.container.get('Language');\n    this.locales = [];\n    this.languageNames = {};\n    this.domainManagers = {};\n    this.intentDomains = {};\n    if (this.settings.locales) {\n      this.addLanguage(this.settings.locales);\n    }\n    this.applySettings(this, {\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('nlu-manager', {}, false);\n    this.container.registerPipeline(\n      'nlu-manager-train',\n      ['.innerTrain'],\n      false\n    );\n  }\n\n  describeLanguage(locale, name) {\n    this.languageNames[locale] = { locale, name };\n  }\n\n  addLanguage(srcLocales) {\n    if (srcLocales) {\n      const locales = Array.isArray(srcLocales) ? srcLocales : [srcLocales];\n      for (let i = 0; i < locales.length; i += 1) {\n        const locale = locales[i].substr(0, 2).toLowerCase();\n        if (!this.locales.includes(locale)) {\n          this.locales.push(locale);\n        }\n        if (!this.domainManagers[locale]) {\n          this.domainManagers[locale] = new DomainManager(\n            {\n              locale,\n              ...this.settings.domain,\n              useNoneFeature: this.settings.useNoneFeature,\n              trainByDomain: this.settings.trainByDomain,\n            },\n            this.container\n          );\n        }\n      }\n    }\n  }\n\n  removeLanguage(locales) {\n    if (Array.isArray(locales)) {\n      locales.forEach((locale) => this.removeLanguage(locale));\n    } else {\n      delete this.domainManagers[locales];\n      const index = this.locales.indexOf(locales);\n      if (index !== -1) {\n        this.locales.splice(index, 1);\n      }\n    }\n  }\n\n  guessLanguage(srcInput) {\n    const input = srcInput;\n    const isString = typeof input === 'string';\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n      return input;\n    }\n    if (!input) {\n      return isString ? undefined : input;\n    }\n    if (!isString && input.locale) {\n      return input;\n    }\n    const utterance = isString ? input : input.utterance;\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n    }\n    const guess = this.guesser.guess(utterance, this.locales, 1);\n    const locale = guess && guess.length > 0 ? guess[0].alpha2 : undefined;\n    if (isString) {\n      return locale;\n    }\n    input.locale = locale;\n    return input;\n  }\n\n  assignDomain(srcLocale, srcIntent, srcDomain) {\n    const locale = srcDomain ? srcLocale.substr(0, 2).toLowerCase() : undefined;\n    const intent = srcDomain ? srcIntent : srcLocale;\n    const domain = srcDomain || srcIntent;\n    if (locale) {\n      if (!this.intentDomains[locale]) {\n        this.intentDomains[locale] = {};\n      }\n      this.intentDomains[locale][intent] = domain;\n    } else {\n      for (let i = 0; i < this.locales.length; i += 1) {\n        this.assignDomain(this.locales[i], intent, domain);\n      }\n    }\n  }\n\n  getIntentDomain(srcLocale, intent) {\n    const locale = srcLocale.substr(0, 2).toLowerCase();\n    if (!this.intentDomains[locale]) {\n      return 'default';\n    }\n    return this.intentDomains[locale][intent] || 'default';\n  }\n\n  getDomains() {\n    const result = {};\n    const locales = Object.keys(this.intentDomains);\n    for (let i = 0; i < locales.length; i += 1) {\n      const locale = locales[i];\n      result[locale] = {};\n      const intents = Object.keys(this.intentDomains[locale]);\n      for (let j = 0; j < intents.length; j += 1) {\n        const intent = intents[j];\n        const domain = this.intentDomains[locale][intent];\n        if (!result[locale][domain]) {\n          result[locale][domain] = [];\n        }\n        result[locale][domain].push(intent);\n      }\n    }\n    return result;\n  }\n\n  consolidateLocale(srcLocale, utterance) {\n    const locale = srcLocale\n      ? srcLocale.substr(0, 2).toLowerCase()\n      : this.guessLanguage(utterance);\n    if (!locale) {\n      throw new Error('Locale must be defined');\n    }\n    return locale;\n  }\n\n  consolidateManager(locale) {\n    const manager = this.domainManagers[locale];\n    if (!manager) {\n      throw new Error(`Domain Manager not found for locale ${locale}`);\n    }\n    return manager;\n  }\n\n  add(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    this.guesser.addExtraSentence(locale, utterance);\n    manager.add(domain, utterance, intent);\n  }\n\n  remove(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    manager.remove(domain, utterance, intent);\n  }\n\n  async innerTrain(settings) {\n    let locales = settings.locales || this.locales;\n    if (!Array.isArray(locales)) {\n      locales = [locales];\n    }\n    const promises = locales\n      .filter((locale) => this.domainManagers[locale])\n      .map((locale) => this.domainManagers[locale].train(settings.settings));\n    return Promise.all(promises);\n  }\n\n  async train(settings) {\n    const input = {\n      nluManager: this,\n      settings: this.applySettings(settings, this.settings),\n    };\n    delete input.settings.tag;\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n\n  fillLanguage(srcInput) {\n    const input = srcInput;\n    input.languageGuessed = false;\n    if (!input.locale) {\n      input.locale = this.guessLanguage(input.utterance);\n      input.languageGuessed = true;\n    }\n    if (input.locale) {\n      input.localeIso2 = input.locale.substr(0, 2).toLowerCase();\n      input.language = (\n        this.languageNames[input.localeIso2] ||\n        this.guesser.languagesAlpha2[input.localeIso2] ||\n        {}\n      ).name;\n    }\n    return input;\n  }\n\n  classificationsIsNone(classifications) {\n    if (classifications.length === 1) {\n      return false;\n    }\n    if (classifications.length === 0 || classifications[0].score === 0) {\n      return true;\n    }\n    return classifications[0].score === classifications[1].score;\n  }\n\n  checkIfIsNone(srcInput) {\n    const input = srcInput;\n    if (this.classificationsIsNone(input.classifications)) {\n      input.intent = 'None';\n      input.score = 1;\n    }\n    return input;\n  }\n\n  async innerClassify(srcInput) {\n    const input = srcInput;\n    const domain = this.domainManagers[input.localeIso2];\n    if (!domain) {\n      input.classifications = [];\n      input.domain = undefined;\n      input.intent = undefined;\n      input.score = undefined;\n      return input;\n    }\n    const classifications = await domain.process(srcInput);\n    input.classifications = classifications.classifications.sort(\n      (a, b) => b.score - a.score\n    );\n    if (input.classifications.length === 0) {\n      input.classifications.push({ intent: 'None', score: 1 });\n    }\n    input.intent = input.classifications[0].intent;\n    input.score = input.classifications[0].score;\n    if (input.intent === 'None') {\n      classifications.domain = 'default';\n    } else if (classifications.domain === 'default') {\n      input.domain = this.getIntentDomain(input.locale, input.intent);\n    } else {\n      input.domain = classifications.domain;\n    }\n\n    return input;\n  }\n\n  async defaultPipelineProcess(input) {\n    let output = await this.fillLanguage(input);\n    output = await this.innerClassify(output);\n    output = await this.checkIfIsNone(output);\n    delete output.settings;\n    delete output.classification;\n    return output;\n  }\n\n  process(locale, utterance, domain, settings) {\n    const input =\n      typeof locale === 'object'\n        ? locale\n        : {\n            locale: utterance === undefined ? undefined : locale,\n            utterance: utterance === undefined ? locale : utterance,\n            domain,\n            settings: settings || this.settings,\n          };\n    if (this.pipelineProcess) {\n      return this.runPipeline(input, this.pipelineProcess);\n    }\n    return this.defaultPipelineProcess(input);\n  }\n\n  toJSON() {\n    const result = {\n      settings: this.settings,\n      locales: this.locales,\n      languageNames: this.languageNames,\n      domainManagers: {},\n      intentDomains: this.intentDomains,\n      extraSentences: this.guesser.extraSentences.slice(0),\n    };\n    delete result.settings.container;\n    const keys = Object.keys(this.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      result.domainManagers[key] = this.domainManagers[key].toJSON();\n    }\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    for (let i = 0; i < json.locales.length; i += 1) {\n      this.addLanguage(json.locales[i]);\n    }\n    this.languageNames = json.languageNames;\n    this.intentDomains = json.intentDomains;\n\n    const keys = Object.keys(json.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      this.domainManagers[key].fromJSON(json.domainManagers[key]);\n    }\n    for (let i = 0; i < json.extraSentences.length; i += 1) {\n      const sentence = json.extraSentences[i];\n      this.guesser.addExtraSentence(sentence[0], sentence[1]);\n    }\n  }\n}\n\nmodule.exports = NluManager;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Nlu = require('./nlu');\nconst NluNeural = require('./nlu-neural');\nconst DomainManager = require('./domain-manager');\nconst NluManager = require('./nlu-manager');\n\nmodule.exports = {\n  Nlu,\n  NluNeural,\n  DomainManager,\n  NluManager,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst TrimType = {\n  Between: 'between',\n  After: 'after',\n  AfterLast: 'afterLast',\n  AfterFirst: 'afterFirst',\n  Before: 'before',\n  BeforeFirst: 'beforeFirst',\n  BeforeLast: 'beforeLast',\n};\n\nconst TrimTypesList = Object.values(TrimType);\n\nmodule.exports = {\n  TrimType,\n  TrimTypesList,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { TrimTypesList } = require('./trim-types');\n\nfunction runDiscard(srcEdge, srcOther, useMaxLength, intentEntities = []) {\n  let edge;\n  let other;\n  if (\n    srcEdge.accuracy > srcOther.accuracy ||\n    (srcEdge.accuracy === srcOther.accuracy && srcEdge.length > srcOther.length)\n  ) {\n    edge = srcEdge;\n    other = srcOther;\n  } else {\n    edge = srcOther;\n    other = srcEdge;\n  }\n  if (other.start <= edge.end && other.end >= edge.start) {\n    if (other.accuracy < edge.accuracy) {\n      other.discarded = true;\n    } else if (\n      (useMaxLength ||\n        other.entity === edge.entity ||\n        other.entity === 'number') &&\n      other.len <= edge.len\n    ) {\n      // Entities have same priority\n      if (\n        other.start === edge.start &&\n        other.end === edge.end &&\n        other.type === edge.type &&\n        other.entity === edge.entity &&\n        other.option === edge.option\n      ) {\n        // same type and none of them is an enum or both are an enum\n        other.discarded = true;\n      } else if (\n        other.start === edge.start &&\n        other.end === edge.end &&\n        other.entity === edge.entity &&\n        other.type !== edge.type\n      ) {\n        if (edge.type === 'trim' && other.type !== 'trim') {\n          edge.discarded = true;\n        } else if (edge.type !== 'trim' && other.type === 'trim') {\n          other.discarded = true;\n        } else {\n          other.discarded = true;\n        }\n      }\n    } else if (\n      (useMaxLength ||\n        other.entity === edge.entity ||\n        edge.entity === 'number') &&\n      other.len > edge.len\n    ) {\n      edge.discarded = true;\n    } else if (edge.type === 'enum' && other.type === 'enum') {\n      const edgeIncludedInIntentEntities = intentEntities.includes(edge.entity);\n      const otherIncludedInIntentEntities = intentEntities.includes(\n        other.entity\n      );\n      if (edgeIncludedInIntentEntities && !otherIncludedInIntentEntities) {\n        other.discarded = true;\n      } else if (\n        !edgeIncludedInIntentEntities &&\n        otherIncludedInIntentEntities\n      ) {\n        edge.discarded = true;\n      } else if (\n        edge.len <= other.len &&\n        other.utteranceText.includes(edge.utteranceText)\n      ) {\n        edge.discarded = true;\n      } else if (\n        edge.len > other.len &&\n        edge.utteranceText.includes(other.utteranceText)\n      ) {\n        other.discarded = true;\n      }\n    }\n  }\n}\n\n/**\n * Given an array of edges, detect the trim edges and find overlaps with\n * non-trim edges. When an overlap is detected, reduce the trim edged to\n * fit with the other edge. Only cases where it overlaps on beginning or\n * end are handled\n * @param {Object[]} edges Edges to be splitted\n * @returns {Object[]} Splitted edges.\n */\nfunction splitEdges(edges) {\n  for (let i = 0, l = edges.length; i < l; i += 1) {\n    const edge = edges[i];\n    if (edge.type === 'trim' && TrimTypesList.includes(edge.subtype)) {\n      for (let j = 0; j < edges.length; j += 1) {\n        const other = edges[j];\n        if (\n          i !== j &&\n          other.start >= edge.start &&\n          other.end <= edge.end &&\n          other.type !== 'trim'\n        ) {\n          const edgeLen = edge.end - edge.start;\n          const otherLen = other.end - other.start;\n          if (edge.end === other.end) {\n            // is at the end\n            const text = edge.sourceText.substring(0, edgeLen - otherLen - 1);\n            edge.sourceText = text;\n            edge.utteranceText = text;\n            edge.end = other.start - 1;\n            edge.len = text.length;\n          } else if (edge.start === other.start) {\n            // is at the start\n            const text = edge.sourceText.substring(otherLen + 1);\n            edge.sourceText = text;\n            edge.utteranceText = text;\n            edge.start = other.end + 1;\n            edge.len = text.length;\n          }\n        }\n      }\n    }\n  }\n  return edges;\n}\n\nfunction reduceEdges(edges, useMaxLength = true, intentEntities = []) {\n  edges = splitEdges(edges);\n  const edgeslen = edges.length;\n  for (let i = 0; i < edgeslen; i += 1) {\n    const edge = edges[i];\n    if (edge.len === 0) {\n      edge.discarded = true;\n    }\n    if (!edge.discarded) {\n      for (let j = i + 1; j < edgeslen; j += 1) {\n        const other = edges[j];\n        if (!other.discarded) {\n          runDiscard(edge, other, useMaxLength, intentEntities);\n        }\n        if (edge.discarded) {\n          break;\n        }\n      }\n    }\n    if (!edge.discarded) {\n      const knownEntityPos = intentEntities.indexOf(edge.entity);\n      if (knownEntityPos !== -1) {\n        intentEntities.splice(knownEntityPos, 1);\n      }\n    }\n  }\n  return edges.filter((x) => !x.discarded);\n}\n\nmodule.exports = reduceEdges;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('@nlpjs/core');\nconst { Language } = require('@nlpjs/language-min');\nconst { similarity } = require('@nlpjs/similarity');\nconst reduceEdges = require('./reduce-edges');\n\nclass ExtractorEnum {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'extract-enum';\n  }\n\n  getScripts(str) {\n    const result = [];\n    const chars = str.split('');\n    for (let i = 0; i < chars.length; i += 1) {\n      result.push(Language.getTopScript(chars[i]));\n    }\n    return result;\n  }\n\n  isAlphanumeric(c) {\n    return /[\\u00C0-\\u1FFF\\u2C00-\\uD7FF\\w]/.test(c) && c !== '_';\n  }\n\n  getWordPositions(str) {\n    const scripts = this.getScripts(str);\n    let atWhiteSpace = true;\n    let lastIndex = 0;\n    let currentIndex = 0;\n    const strlen = str.length;\n    const result = [];\n    while (currentIndex < strlen) {\n      if (this.isAlphanumeric(str.charAt(currentIndex))) {\n        if (atWhiteSpace) {\n          if (scripts[currentIndex][0] === 'cmn') {\n            result.push({\n              start: currentIndex,\n              end: currentIndex,\n              len: 1,\n            });\n            lastIndex = currentIndex;\n          } else {\n            lastIndex = currentIndex;\n            atWhiteSpace = false;\n          }\n        }\n      } else if (!atWhiteSpace) {\n        result.push({\n          start: lastIndex,\n          end: currentIndex - 1,\n          len: currentIndex - lastIndex,\n        });\n        atWhiteSpace = true;\n      }\n      currentIndex += 1;\n    }\n    if (!atWhiteSpace) {\n      result.push({\n        start: lastIndex,\n        end: currentIndex - 1,\n        len: currentIndex - lastIndex,\n      });\n    }\n    return result;\n  }\n\n  getBestSubstring(str1, str2, words1) {\n    const str1len = str1.length;\n    const str2len = str2.length;\n    if (str1len <= str2len) {\n      const result = {\n        start: 0,\n        end: str1len - 1,\n        len: str1len,\n        levenshtein: similarity(str1, str2, true),\n      };\n      result.accuracy = (str2len - result.levenshtein) / str2len;\n      return result;\n    }\n    const wordPositions = words1 || this.getWordPositions(str1);\n    const wordPositionsLen = wordPositions.length;\n    const best = {\n      start: 0,\n      end: 0,\n      len: 0,\n      levenshtein: undefined,\n      accuracy: 0,\n    };\n    for (let i = 0; i < wordPositionsLen; i += 1) {\n      for (let j = i; j < wordPositionsLen; j += 1) {\n        const str3 = str1.substring(\n          wordPositions[i].start,\n          wordPositions[j].end + 1\n        );\n        const levenshtein = similarity(str3, str2, true);\n        if (best.levenshtein === undefined || levenshtein < best.levenshtein) {\n          best.levenshtein = levenshtein;\n          best.start = wordPositions[i].start;\n          best.end = wordPositions[j].end;\n          best.len = best.end - best.start + 1;\n        }\n      }\n    }\n    best.accuracy = (str2len - best.levenshtein) / str2len;\n    return best;\n  }\n\n  getBestSubstringList(str1, str2, words1, threshold = 1) {\n    const str1len = str1.length;\n    const str2len = str2.length;\n    const result = [];\n    if (str1len <= str2len) {\n      const levenshtein = similarity(str1, str2, true);\n      const accuracy = (str2len - levenshtein) / str2len;\n      if (accuracy >= threshold) {\n        result.push({\n          start: 0,\n          end: str1len - 1,\n          len: str1len,\n          levenshtein,\n          accuracy,\n        });\n      }\n      return result;\n    }\n    const maxLevenshtein = str2len * (1 - threshold);\n    const wordPositions = words1 || this.getWordPositions(str1);\n    const wordPositionsLen = wordPositions.length;\n    for (let i = 0; i < wordPositionsLen; i += 1) {\n      for (let j = i; j < wordPositionsLen; j += 1) {\n        const str3 = str1.substring(\n          wordPositions[i].start,\n          wordPositions[j].end + 1\n        );\n        const levenshtein = similarity(str3, str2, true);\n        const accuracy = (str2len - levenshtein) / str2len;\n        if (accuracy >= threshold) {\n          result.push({\n            start: wordPositions[i].start,\n            end: wordPositions[j].end,\n            len: wordPositions[j].end - wordPositions[i].start + 1,\n            levenshtein,\n            accuracy,\n          });\n        }\n        if (\n          str3.length - wordPositions[0].len >=\n          str2.length + maxLevenshtein\n        ) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  getRules(input) {\n    const allRules = input.nerRules;\n    if (!allRules) {\n      return [];\n    }\n    return allRules;\n  }\n\n  normalize(str) {\n    return str\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .toLowerCase();\n  }\n\n  buildRuleDict(rule) {\n    const dict = {};\n    const inverse = {};\n    for (let i = 0; i < rule.rules.length; i += 1) {\n      const current = rule.rules[i];\n      for (let j = 0; j < current.texts.length; j += 1) {\n        const source = current.texts[j];\n        const key = this.normalize(current.texts[j]);\n        if (!dict[key]) {\n          dict[key] = [];\n        }\n        dict[key].push(current);\n        inverse[key] = source;\n      }\n    }\n    rule.dict = dict;\n    rule.inverseDict = inverse;\n  }\n\n  getBestExact(srcText, words, rule) {\n    const text = this.normalize(srcText);\n    const wordPositions = words || this.getWordPositions(text);\n    const wordPositionsLen = wordPositions.length;\n    const result = [];\n    for (let i = 0; i < wordPositionsLen; i += 1) {\n      for (let j = i; j < wordPositionsLen; j += 1) {\n        const str = text.substring(\n          wordPositions[i].start,\n          wordPositions[j].end + 1\n        );\n        if (rule.dict[str]) {\n          const subrule = rule.dict[str];\n          for (let k = 0; k < subrule.length; k += 1) {\n            result.push({\n              accuracy: 1,\n              start: wordPositions[i].start,\n              end: wordPositions[j].end,\n              len: wordPositions[j].end - wordPositions[i].start + 1,\n              levenshtein: 0,\n              entity: rule.name,\n              type: rule.type,\n              option: subrule[k].option,\n              sourceText: rule.inverseDict[str],\n              utteranceText: srcText.substring(\n                wordPositions[i].start,\n                wordPositions[j].end + 1\n              ),\n            });\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  extractFromRule(text, rule, words, threshold) {\n    if (rule.type === 'enum') {\n      const edges = [];\n      if (threshold >= 1) {\n        if (!rule.dict) {\n          this.buildRuleDict(rule);\n        }\n        const newEdges = this.getBestExact(text, words, rule);\n        for (let i = 0; i < newEdges.length; i += 1) {\n          edges.push(newEdges[i]);\n        }\n      } else {\n        for (let i = 0; i < rule.rules.length; i += 1) {\n          const current = rule.rules[i];\n          if (current && current.option && Array.isArray(current.texts)) {\n            for (let j = 0; j < current.texts.length; j += 1) {\n              const newEdges = this.getBestSubstringList(\n                text,\n                current.texts[j],\n                words,\n                current.threshold || threshold\n              );\n              for (let k = 0; k < newEdges.length; k += 1) {\n                edges.push({\n                  ...newEdges[k],\n                  entity: rule.name,\n                  type: rule.type,\n                  option: rule.rules[i].option,\n                  sourceText: current.texts[j],\n                  utteranceText: text.substring(\n                    newEdges[k].start,\n                    newEdges[k].end + 1\n                  ),\n                });\n              }\n            }\n          }\n        }\n      }\n      return edges;\n    }\n    return [];\n  }\n\n  async extract(srcInput) {\n    const input = srcInput;\n    const originalInputText = input.text || input.utterance;\n    let tokenizedText = originalInputText;\n    const originalPositionMap = [];\n    const tokenizer = this.container.get('tokenize');\n    if (tokenizer) {\n      const tokenizeResult = await tokenizer.run({\n        locale: input.locale,\n        text: tokenizedText,\n      });\n      tokenizedText = tokenizeResult.tokens.join(' ');\n      if (tokenizedText !== originalInputText) {\n        let originalTextIndex = 0;\n        let tokenizedTextIndex = 0;\n        for (let i = 0; i < tokenizeResult.tokens.length; i += 1) {\n          const originaltextPos = originalInputText.indexOf(\n            tokenizeResult.tokens[i],\n            originalTextIndex\n          );\n          for (let idx = 0; idx < tokenizeResult.tokens[i].length; idx += 1) {\n            originalPositionMap[tokenizedTextIndex + idx] =\n              originaltextPos + idx;\n          }\n          originalTextIndex += tokenizeResult.tokens[i].length;\n          tokenizedTextIndex += tokenizeResult.tokens[i].length + 1;\n        }\n      }\n    }\n    const wordPositions = this.getWordPositions(tokenizedText);\n    const rules = this.getRules(input);\n    const edges = input.edges || [];\n    for (let i = 0; i < rules.length; i += 1) {\n      const newEdges = this.extractFromRule(\n        tokenizedText,\n        rules[i],\n        wordPositions,\n        input.threshold || 0.8\n      );\n      for (let j = 0; j < newEdges.length; j += 1) {\n        edges.push(newEdges[j]);\n      }\n    }\n    if (originalPositionMap.length > 0) {\n      for (let i = 0; i < edges.length; i += 1) {\n        const edge = edges[i];\n        edge.start = originalPositionMap[edge.start];\n        edge.end = originalPositionMap[edge.end];\n      }\n    }\n    edges.sort((a, b) => a.start - b.start);\n    input.edges = reduceEdges(edges, false, input.intentEntities);\n    return input;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-enum-${locale}`) || this;\n    return extractor.extract(input);\n  }\n}\n\nmodule.exports = ExtractorEnum;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('@nlpjs/core');\nconst reduceEdges = require('./reduce-edges');\n\nclass ExtractorRegex {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'extract-regex';\n  }\n\n  getRules(input) {\n    const allRules = input.nerRules;\n    if (!allRules) {\n      return [];\n    }\n    return allRules;\n  }\n\n  getMatchs(utterance, regex) {\n    const result = [];\n    let matchFound;\n    do {\n      const match = regex instanceof RegExp ? regex.exec(utterance) : null;\n      if (match) {\n        if (match.length === 1) {\n          result.push({\n            start: match.index,\n            end: regex.lastIndex - 1,\n            accuracy: 1,\n            sourceText: match[0],\n          });\n        } else {\n          const index = utterance.indexOf(match[1]);\n          result.push({\n            start: index,\n            end: index + match[1].length - 1,\n            accuracy: 1,\n            sourceText: match[1],\n          });\n        }\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    return result;\n  }\n\n  extractFromRule(text, rule) {\n    const edges = [];\n    for (let i = 0; i < rule.rules.length; i += 1) {\n      const newEdges = this.getMatchs(text, rule.rules[i]);\n      for (let j = 0; j < newEdges.length; j += 1) {\n        const edge = newEdges[j];\n        edge.entity = rule.name;\n        edge.type = rule.type;\n        edge.utteranceText = text.substring(edge.start, edge.end + 1);\n        edge.len = edge.utteranceText.length;\n        edges.push(edge);\n      }\n    }\n    return edges;\n  }\n\n  extract(srcInput) {\n    const input = srcInput;\n    const rules = this.getRules(input);\n    const edges = input.edges || [];\n    for (let i = 0; i < rules.length; i += 1) {\n      const newEdges = this.extractFromRule(\n        input.text || input.utterance,\n        rules[i]\n      );\n      for (let j = 0; j < newEdges.length; j += 1) {\n        edges.push(newEdges[j]);\n      }\n    }\n    edges.sort((a, b) => a.start - b.start);\n    input.edges = reduceEdges(edges, false);\n    return input;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-regex-${locale}`) || this;\n    return extractor.extract(input);\n  }\n}\n\nmodule.exports = ExtractorRegex;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('@nlpjs/core');\nconst reduceEdges = require('./reduce-edges');\nconst { TrimType } = require('./trim-types');\n\nclass ExtractorTrim {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'extract-trim';\n  }\n\n  mustSkip(word, condition) {\n    if (\n      condition.options &&\n      condition.options.skip &&\n      condition.options.skip.length > 0\n    ) {\n      for (let i = 0; i < condition.options.skip.length; i += 1) {\n        const skipWord = condition.options.skip[i];\n        if (condition.options.caseSensitive) {\n          if (skipWord === word) {\n            return true;\n          }\n        } else if (skipWord.toLowerCase() === word.toLowerCase()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  matchBetween(utterance, condition, name) {\n    const result = [];\n    let matchFound;\n    do {\n      const match = condition.regex.exec(` ${utterance} `);\n      if (match) {\n        let matchIndex;\n        let startIndex;\n        let endIndex;\n        if (condition && condition.options && condition.options.closest) {\n          matchIndex = 1;\n          if (!match[matchIndex]) {\n            matchFound = false;\n            break;\n          }\n          const leftWordIndex = match[0].indexOf(match[matchIndex]);\n          startIndex = match.index - 1 + leftWordIndex;\n          endIndex = startIndex + match[matchIndex].length - 1;\n        } else {\n          matchIndex = 0;\n          startIndex = match.index - 1;\n          endIndex = condition.regex.lastIndex - 2;\n        }\n        result.push({\n          type: 'trim',\n          subtype: TrimType.Between,\n          start: startIndex,\n          end: endIndex,\n          len: match[matchIndex].length,\n          accuracy: 1,\n          sourceText: match[matchIndex],\n          utteranceText: match[matchIndex],\n          entity: name,\n        });\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    const filteredResult = [];\n    for (let i = 0; i < result.length; i += 1) {\n      if (!this.mustSkip(result[i].utteranceText, condition)) {\n        filteredResult.push(result[i]);\n      }\n    }\n    return filteredResult;\n  }\n\n  findWord(utterance, word, caseSensitive = false, noSpaces = false) {\n    const result = [];\n    let matchFound;\n    const regex = new RegExp(\n      noSpaces ? word : ` ${word} | ${word}|${word} `,\n      caseSensitive ? 'g' : 'ig'\n    );\n    do {\n      const match = regex.exec(utterance);\n      if (match) {\n        result.push({\n          start: match.index,\n          end: regex.lastIndex,\n        });\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    return result;\n  }\n\n  getBeforeResults(utterance, wordPositions, name) {\n    const result = [];\n    let startPos = 0;\n    let endPos = 0;\n    for (let i = 0; i < wordPositions.length; i += 1) {\n      endPos = wordPositions[i].start;\n      const text = utterance.substring(startPos, endPos);\n      result.push({\n        type: 'trim',\n        subtype: TrimType.Before,\n        start: startPos,\n        end: endPos - 1,\n        len: text.length,\n        accuracy: 0.99,\n        sourceText: text,\n        utteranceText: text,\n        entity: name,\n      });\n      startPos = wordPositions[i].end;\n    }\n    return result;\n  }\n\n  getBeforeFirstResults(utterance, wordPositions, name) {\n    const result = [];\n    const startPos = 0;\n    const endPos = wordPositions[0].start;\n    const text = utterance.substring(startPos, endPos);\n    result.push({\n      type: 'trim',\n      subtype: TrimType.BeforeFirst,\n      start: startPos,\n      end: endPos - 1,\n      len: text.length,\n      accuracy: 0.99,\n      sourceText: text,\n      utteranceText: text,\n      entity: name,\n    });\n    return result;\n  }\n\n  getBeforeLastResults(utterance, wordPositions, name) {\n    const result = [];\n    const startPos = 0;\n    const endPos = wordPositions[wordPositions.length - 1].start;\n    const text = utterance.substring(startPos, endPos);\n    result.push({\n      type: 'trim',\n      subtype: TrimType.BeforeLast,\n      start: startPos,\n      end: endPos - 1,\n      len: text.length,\n      accuracy: 0.99,\n      sourceText: text,\n      utteranceText: text,\n      entity: name,\n    });\n    return result;\n  }\n\n  getAfterResults(utterance, wordPositions, name) {\n    const result = [];\n    let startPos = 0;\n    let endPos = utterance.length;\n    for (let i = wordPositions.length - 1; i >= 0; i -= 1) {\n      startPos = wordPositions[i].end;\n      const text = utterance.substring(startPos, endPos);\n      result.unshift({\n        type: 'trim',\n        subtype: TrimType.After,\n        start: startPos,\n        end: endPos - 1,\n        len: text.length,\n        accuracy: 0.99,\n        sourceText: text,\n        utteranceText: text,\n        entity: name,\n      });\n      endPos = wordPositions[i].start;\n    }\n    return result;\n  }\n\n  getAfterFirstResults(utterance, wordPositions, name) {\n    const result = [];\n    const startPos = wordPositions[0].end;\n    const endPos = utterance.length;\n    const text = utterance.substring(startPos, endPos);\n    result.push({\n      type: 'trim',\n      subtype: TrimType.AfterFirst,\n      start: startPos,\n      end: endPos - 1,\n      len: text.length,\n      accuracy: 0.99,\n      sourceText: text,\n      utteranceText: text,\n      entity: name,\n    });\n    return result;\n  }\n\n  getAfterLastResults(utterance, wordPositions, name) {\n    const result = [];\n    const startPos = wordPositions[wordPositions.length - 1].end;\n    const endPos = utterance.length;\n    const text = utterance.substring(startPos, endPos);\n    result.push({\n      type: 'trim',\n      subtype: TrimType.AfterLast,\n      start: startPos,\n      end: endPos - 1,\n      len: text.length,\n      accuracy: 0.99,\n      sourceText: text,\n      utteranceText: text,\n      entity: name,\n    });\n    return result;\n  }\n\n  getResults(utterance, wordPositions, type, name) {\n    switch (type) {\n      case TrimType.Before:\n        return this.getBeforeResults(utterance, wordPositions, name);\n      case TrimType.BeforeFirst:\n        return this.getBeforeFirstResults(utterance, wordPositions, name);\n      case TrimType.BeforeLast:\n        return this.getBeforeLastResults(utterance, wordPositions, name);\n      case TrimType.After:\n        return this.getAfterResults(utterance, wordPositions, name);\n      case TrimType.AfterFirst:\n        return this.getAfterFirstResults(utterance, wordPositions, name);\n      case TrimType.AfterLast:\n        return this.getAfterLastResults(utterance, wordPositions, name);\n      default:\n        return [];\n    }\n  }\n\n  match(utterance, condition, type, name) {\n    const result = [];\n    if (condition && Array.isArray(condition.words)) {\n      for (let i = 0; i < condition.words.length; i += 1) {\n        const word = condition.options.noSpaces\n          ? condition.words[i]\n          : ` ${condition.words[i]}`;\n        const wordPositions = this.findWord(utterance, word);\n        if (!condition.options.noSpaces) {\n          const wordPositions2 = this.findWord(utterance, condition.words[i]);\n          if (wordPositions2.length > 0 && wordPositions2[0].start === 0) {\n            wordPositions.unshift(wordPositions2[0]);\n          }\n        }\n        if (wordPositions.length > 0) {\n          result.push(...this.getResults(utterance, wordPositions, type, name));\n        }\n      }\n    }\n    const filteredResult = [];\n    for (let i = 0; i < result.length; i += 1) {\n      // Remove common whitespace characters\n      result[i].sourceText = result[i].sourceText.replace(\n        /^[\\s,.!?;:([\\]'\"¡¿)/]+|[\\s,.!?;:([\\]'\"¡¿)/]+$/,\n        ''\n      );\n      if (!this.mustSkip(result[i].utteranceText, condition)) {\n        filteredResult.push(result[i]);\n      }\n    }\n    return filteredResult;\n  }\n\n  getRules(input) {\n    const allRules = input.nerRules;\n    if (!allRules) {\n      return [];\n    }\n    return allRules;\n  }\n\n  extractFromRule(utterance, rule) {\n    const edges = [];\n    for (let i = 0; i < rule.rules.length; i += 1) {\n      const current = rule.rules[i];\n      if (current.type === TrimType.Between) {\n        edges.push(...this.matchBetween(utterance, current, rule.name));\n      } else {\n        edges.push(...this.match(utterance, current, current.type, rule.name));\n      }\n    }\n    return edges;\n  }\n\n  extract(srcInput) {\n    const input = srcInput;\n    const rules = this.getRules(input);\n    const edges = input.edges || [];\n    for (let i = 0; i < rules.length; i += 1) {\n      const newEdges = this.extractFromRule(\n        input.text || input.utterance,\n        rules[i]\n      );\n      for (let j = 0; j < newEdges.length; j += 1) {\n        edges.push(newEdges[j]);\n      }\n    }\n    edges.sort((a, b) => a.start - b.start);\n    input.edges = reduceEdges(edges, false);\n    return input;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-trim-${locale}`) || this;\n    return extractor.extract(input);\n  }\n}\n\nmodule.exports = ExtractorTrim;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('@nlpjs/core');\nconst reduceEdges = require('./reduce-edges');\n\nclass ExtractorBuiltin {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'extract-builtin';\n  }\n\n  extract(srcInput) {\n    return srcInput;\n  }\n\n  async run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-builtin-${locale}`) || this;\n    const newInput = await extractor.extract({\n      text: input.text || input.utterance,\n      locale: input.locale,\n    });\n    input.edges = input.edges || [];\n    if (newInput.edges) {\n      for (let i = 0; i < newInput.edges.length; i += 1) {\n        if (\n          !input.nerLimitToEntities ||\n          input.intentEntities.includes(newInput.edges[i].entity)\n        ) {\n          input.edges.push(newInput.edges[i]);\n        }\n      }\n    }\n    input.edges = reduceEdges(input.edges, false);\n    input.sourceEntities = input.sourceEntities || [];\n    if (newInput.sourceEntities) {\n      for (let i = 0; i < newInput.sourceEntities.length; i += 1) {\n        input.sourceEntities.push(newInput.sourceEntities[i]);\n      }\n    }\n    return input;\n  }\n}\n\nmodule.exports = ExtractorBuiltin;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\nconst ExtractorEnum = require('./extractor-enum');\nconst ExtractorRegex = require('./extractor-regex');\nconst ExtractorTrim = require('./extractor-trim');\nconst ExtractorBuiltin = require('./extractor-builtin');\n\nconst { TrimType } = require('./trim-types');\n\nfunction isObject(obj) {\n  return obj !== undefined && obj !== null && obj.constructor === Object;\n}\n\nclass Ner extends Clonable {\n  constructor(settings = {}, container = undefined) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `ner`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.rules = {};\n    this.applySettings(this, {\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {}\n\n  getRulesByName(locale = '*', name = '', force = false) {\n    if (!this.rules[locale]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale] = {};\n    }\n    if (!this.rules[locale][name]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale][name] = {\n        name,\n        type: 'enum',\n        rules: [],\n      };\n    }\n    return this.rules[locale][name];\n  }\n\n  addRule(locale = '*', name, type, rule) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRule(locale[i], name, type, rule);\n      }\n    } else {\n      if (!this.rules[locale]) {\n        this.rules[locale] = {};\n      }\n      if (!this.rules[locale][name]) {\n        this.rules[locale][name] = {\n          name,\n          type,\n          rules: [],\n        };\n      }\n      this.rules[locale][name].rules.push(rule);\n    }\n  }\n\n  asString(item) {\n    if (item) {\n      if (isObject(item)) {\n        return JSON.stringify(item);\n      }\n      if (item.toString) {\n        return item.toString();\n      }\n    }\n    return '';\n  }\n\n  findRule(rules, rule) {\n    const str = this.asString(rule);\n    for (let i = 0; i < rules.length; i += 1) {\n      if (this.asString(rules[i]) === str) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  removeRule(locale = '*', name, rule) {\n    if (this.rules[locale]) {\n      if (this.rules[locale][name]) {\n        if (!rule) {\n          delete this.rules[locale][name];\n        } else {\n          const index = this.findRule(this.rules[locale][name].rules, rule);\n          if (index > -1) {\n            this.rules[locale][name].rules.splice(index, 1);\n          }\n        }\n      }\n    }\n  }\n\n  getRules(locale = '*') {\n    const result = [];\n    if (this.rules[locale]) {\n      const keys = Object.keys(this.rules[locale]);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules[locale][keys[i]]);\n      }\n    }\n    if (locale !== '*' && this.rules['*']) {\n      const keys = Object.keys(this.rules['*']);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules['*'][keys[i]]);\n      }\n    }\n    return result;\n  }\n\n  decideRules(srcInput, intentEntities) {\n    const input = srcInput;\n    let nerRules = this.getRules(input.locale || 'en');\n    if (intentEntities && this.settings.considerOnlyIntentEntities) {\n      nerRules = nerRules.filter((rule) => intentEntities.includes(rule.name));\n    } else if (intentEntities) {\n      // entities in the current intent get a higher priority when\n      // sorting out overlapping matches\n      const intentRelevantRule = [];\n      const nonIntentRelevantRule = [];\n      nerRules.forEach((rule) => {\n        if (intentEntities.includes(rule.name)) {\n          intentRelevantRule.push(rule);\n        } else {\n          nonIntentRelevantRule.push(rule);\n        }\n      });\n      nerRules = intentRelevantRule.concat(nonIntentRelevantRule);\n    }\n    input.nerRules = nerRules;\n    input.nerLimitToEntities = this.settings.considerOnlyIntentEntities;\n    input.intentEntities = intentEntities;\n    return input;\n  }\n\n  getRuleOption(rules, option) {\n    for (let i = 0; i < rules.length; i += 1) {\n      if (rules[i].option === option) {\n        return rules[i];\n      }\n    }\n    return undefined;\n  }\n\n  addRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, true);\n      let ruleOption = this.getRuleOption(rules.rules, option);\n      if (!ruleOption) {\n        ruleOption = {\n          option,\n          texts,\n        };\n        rules.rules.push(ruleOption);\n      } else {\n        const dict = {};\n        for (let i = 0; i < ruleOption.texts.length; i += 1) {\n          dict[ruleOption.texts[i]] = 1;\n        }\n        for (let i = 0; i < texts.length; i += 1) {\n          dict[texts[i]] = 1;\n        }\n        ruleOption.texts = Object.keys(dict);\n      }\n    }\n  }\n\n  removeRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.removeRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, false);\n      if (rules) {\n        const ruleOption = this.getRuleOption(rules.rules, option);\n        if (ruleOption) {\n          const dict = {};\n          for (let i = 0; i < ruleOption.texts.length; i += 1) {\n            dict[ruleOption.texts[i]] = 1;\n          }\n          for (let i = 0; i < texts.length; i += 1) {\n            delete dict[texts[i]];\n          }\n          ruleOption.texts = Object.keys(dict);\n        }\n      }\n    }\n  }\n\n  static str2regex(str) {\n    const index = str.lastIndexOf('/');\n    return new RegExp(str.slice(1, index), str.slice(index + 1));\n  }\n\n  static regex2str(regex) {\n    return regex.toString();\n  }\n\n  addRegexRule(locale, name, srcRegex) {\n    const regex =\n      typeof srcRegex === 'string' ? Ner.str2regex(srcRegex) : srcRegex;\n    const globalFlag = 'g';\n    const fixedRegex = regex.flags.includes(globalFlag)\n      ? regex\n      : new RegExp(regex.source, `${regex.flags}${globalFlag}`);\n    this.addRule(locale, name, 'regex', fixedRegex);\n  }\n\n  addBetweenLastCondition(\n    locale,\n    name,\n    srcLeftWords,\n    srcRightWords,\n    srcOptions = {}\n  ) {\n    const options = {\n      ...srcOptions,\n      closest: true,\n    };\n    this.addBetweenCondition(\n      locale,\n      name,\n      srcLeftWords,\n      srcRightWords,\n      options\n    );\n  }\n\n  addBetweenCondition(locale, name, srcLeftWords, srcRightWords, srcOptions) {\n    const options = srcOptions || {};\n    const leftWords = Array.isArray(srcLeftWords)\n      ? srcLeftWords\n      : [srcLeftWords];\n    const rightWords = Array.isArray(srcRightWords)\n      ? srcRightWords\n      : [srcRightWords];\n    const conditions = [];\n    for (let i = 0; i < leftWords.length; i += 1) {\n      for (let j = 0; j < rightWords.length; j += 1) {\n        const leftWord =\n          options.noSpaces === true ? leftWords[i] : ` ${leftWords[i]} `;\n        const rightWord =\n          options.noSpaces === true ? rightWords[j] : ` ${rightWords[j]} `;\n        let regex;\n        if (options.closest === true) {\n          regex = `${leftWord}(?!.*${leftWord}.*)(.*)${rightWord}`;\n        } else {\n          regex = `(?<=${leftWord})(.*)(?=${rightWord})`;\n        }\n        conditions.push(regex);\n      }\n    }\n    let regex = `/${conditions.join('|')}/g`;\n    if (options.caseSensitive !== true) {\n      regex += 'i';\n    }\n    const rule = {\n      type: 'between',\n      leftWords,\n      rightWords,\n      regex: Ner.str2regex(regex),\n      options,\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n\n  addPositionCondition(locale, name, position, srcWords, srcOptions) {\n    const options = srcOptions || {};\n    const words = Array.isArray(srcWords) ? srcWords : [srcWords];\n    const rule = {\n      type: position,\n      words,\n      options,\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n\n  addAfterCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.After, words, opts);\n  }\n\n  addAfterFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterFirst, words, opts);\n  }\n\n  addAfterLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterLast, words, opts);\n  }\n\n  addBeforeCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.Before, words, opts);\n  }\n\n  addBeforeFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeFirst, words, opts);\n  }\n\n  addBeforeLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeLast, words, opts);\n  }\n\n  reduceEdges(input) {\n    input.entities = input.edges;\n    delete input.edges;\n    delete input.nerRules;\n    delete input.nerLimitToEntities;\n    delete input.intentEntities;\n    return input;\n  }\n\n  async defaultPipelineProcess(input, intentEntities) {\n    if (!this.cache) {\n      this.cache = {\n        extractEnum: this.container.get('extract-enum'),\n        extractRegex: this.container.get('extract-regex'),\n        extractTrim: this.container.get('extract-trim'),\n        extractBuiltin: this.container.get('extract-builtin'),\n      };\n      if (!this.cache.extractEnum) {\n        this.container.use(ExtractorEnum);\n        this.cache.extractEnum = this.container.get('extract-enum');\n      }\n      if (!this.cache.extractRegex) {\n        this.container.use(ExtractorRegex);\n        this.cache.extractRegex = this.container.get('extract-regex');\n      }\n      if (!this.cache.extractTrim) {\n        this.container.use(ExtractorTrim);\n        this.cache.extractTrim = this.container.get('extract-trim');\n      }\n      if (!this.cache.extractBuiltin) {\n        this.container.use(ExtractorBuiltin);\n        this.cache.extractBuiltin = this.container.get('extract-builtin');\n      }\n    }\n    let output = await this.decideRules(input, intentEntities);\n    if (this.cache.extractEnum) {\n      output = await this.cache.extractEnum.run(output);\n    }\n    if (this.cache.extractRegex) {\n      output = await this.cache.extractRegex.run(output);\n    }\n    if (this.cache.extractTrim) {\n      output = await this.cache.extractTrim.run(output);\n    }\n    if (this.cache.extractBuiltin) {\n      output = await this.cache.extractBuiltin.run(output);\n    }\n    output = await this.reduceEdges(output);\n    return output;\n  }\n\n  async process(srcInput, consideredEntities) {\n    const input = {\n      threshold: this.settings.threshold || 0.8,\n      ...srcInput,\n    };\n    let result;\n    if (input.locale) {\n      const pipeline = this.container.getPipeline(\n        `${this.settings.tag}-${input.locale}-process`\n      );\n      if (pipeline) {\n        result = await this.runPipeline(input, pipeline);\n      }\n    } else if (this.pipelineProcess) {\n      result = await this.runPipeline(input, this.pipelineProcess);\n    }\n    if (!result) {\n      result = await this.defaultPipelineProcess(input, consideredEntities);\n    } else if (consideredEntities) {\n      // when custom pipeline is used then we can not be sure it is handled correctly\n      result.entities = result.entities.filter((entity) =>\n        consideredEntities.includes(entity.entity)\n      );\n    }\n    delete result.threshold;\n    return result;\n  }\n\n  nameToEntity(name) {\n    const preffix =\n      this.settings.entityPreffix === undefined\n        ? '@'\n        : this.settings.entityPreffix;\n    const suffix =\n      this.settings.entitySuffix === undefined\n        ? ''\n        : this.settings.entitySuffix;\n    return `${preffix}${name}${suffix}`;\n  }\n\n  entityToName(entity) {\n    if (!entity) {\n      return entity;\n    }\n    let name = entity;\n    const preffix =\n      this.settings.entityPreffix === undefined\n        ? '@'\n        : this.settings.entityPreffix;\n    const suffix =\n      this.settings.entitySuffix === undefined\n        ? ''\n        : this.settings.entitySuffix;\n    if (preffix) {\n      if (!name.startsWith(preffix)) {\n        return entity;\n      }\n      name = name.slice(preffix.length);\n    }\n    if (suffix) {\n      if (!name.endsWith(suffix)) {\n        return entity;\n      }\n      name = name.slice(0, -suffix.length);\n    }\n    return name;\n  }\n\n  isEntity(entity) {\n    const name = this.entityToName(entity);\n    return name !== entity;\n  }\n\n  getEntitiesFromUtterance(locale, utterance) {\n    if (!utterance) {\n      utterance = locale;\n      locale = 'es';\n    }\n    const tokens = utterance.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter((x) => x);\n    const result = [];\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (this.isEntity(token)) {\n        result.push(this.entityToName(token));\n      }\n    }\n    return result;\n  }\n\n  async generateEntityUtterance(locale, utterance) {\n    let input = {\n      locale,\n      utterance,\n    };\n    input = await this.process(input);\n    const { entities } = input;\n    if (!entities || !entities.length) {\n      return utterance;\n    }\n    entities.sort((a, b) => a.start - b.start);\n    let index = 0;\n    let result = '';\n    for (let i = 0; i < entities.length; i += 1) {\n      const entity = entities[i];\n      const left = utterance.slice(index, entity.start);\n      index = entity.end + 1;\n      result += left;\n      result += this.nameToEntity(entity.entity);\n    }\n    const right = utterance.slice(entities[entities.length - 1].end + 1);\n    result += right;\n    return result;\n  }\n\n  toJSON() {\n    // easy RegExp serialization: https://stackoverflow.com/questions/12075927/serialization-of-regexp\n    // eslint-disable-next-line no-extend-native\n    RegExp.prototype.toJSON = RegExp.prototype.toString;\n\n    const result = {\n      settings: { ...this.settings },\n      rules: { ...this.rules },\n    };\n\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n\n    const rulesKeys = Object.keys(json.rules);\n\n    rulesKeys.forEach((rKey) => {\n      const entityKeys = Object.keys(json.rules[rKey]);\n\n      entityKeys.forEach((eKey) => {\n        json.rules[rKey][eKey].rules =\n          json.rules[rKey][eKey].type === 'regex'\n            ? json.rules[rKey][eKey].rules.map((rule) => Ner.str2regex(rule))\n            : json.rules[rKey][eKey].rules.map((rule) =>\n                typeof rule.regex === 'string'\n                  ? {\n                      ...rule,\n                      regex: Ner.str2regex(rule.regex),\n                    }\n                  : rule\n              );\n      });\n    });\n\n    this.rules = json.rules;\n  }\n}\n\nmodule.exports = Ner;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Ner = require('./ner');\nconst ExtractorEnum = require('./extractor-enum');\nconst ExtractorRegex = require('./extractor-regex');\nconst ExtractorTrim = require('./extractor-trim');\nconst ExtractorBuiltin = require('./extractor-builtin');\n\nmodule.exports = {\n  Ner,\n  ExtractorEnum,\n  ExtractorRegex,\n  ExtractorTrim,\n  ExtractorBuiltin,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\n\nclass NlgManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlg-manager';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.responses = {};\n    this.applySettings(this, {\n      pipelineFind: this.getPipeline(`${this.settings.tag}-find`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('nlg-manager', {}, false);\n  }\n\n  findAllAnswers(srcInput) {\n    const input = srcInput;\n    if (this.responses[input.locale]) {\n      input.answers = this.responses[input.locale][input.intent] || [];\n    } else {\n      input.answers = [];\n    }\n    return input;\n  }\n\n  filterAnswers(srcInput) {\n    const input = srcInput;\n    const { answers } = input;\n    if (answers && answers.length) {\n      const evaluator = this.container.get('Evaluator');\n      if (evaluator) {\n        const context = input.context || {};\n        const filtered = [];\n        for (let i = 0; i < answers.length; i += 1) {\n          const answer = answers[i];\n          if (answer.opts) {\n            const condition =\n              typeof answer.opts === 'string'\n                ? answer.opts\n                : answer.opts.condition;\n            if (condition) {\n              if (evaluator.evaluate(condition, context) === true) {\n                filtered.push(answer);\n              }\n            } else {\n              filtered.push(answer);\n            }\n          } else {\n            filtered.push(answer);\n          }\n        }\n        input.answers = filtered;\n      }\n    }\n    return input;\n  }\n\n  chooseRandom(srcInput) {\n    const input = srcInput;\n    const { answers } = input;\n    if (answers && answers.length) {\n      input.answer = answers[Math.floor(Math.random() * answers.length)].answer;\n    }\n    return input;\n  }\n\n  renderText(srcText, context) {\n    if (!srcText) {\n      return srcText;\n    }\n    let text = srcText.answer || srcText;\n    let matchFound;\n    do {\n      const match = /\\((?:[^()]+)\\|(?:[^()]+)\\)/g.exec(text);\n      if (match) {\n        for (let i = 0; i < match.length; i += 1) {\n          const source = match[i];\n          const options = source.substring(1, source.length - 1).split('|');\n          text = text.replace(\n            source,\n            options[Math.floor(Math.random() * options.length)]\n          );\n        }\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    if (srcText.answer) {\n      srcText.answer = text;\n    } else {\n      srcText = text;\n    }\n    const template = this.container.get('Template');\n    if (template && context) {\n      return template.compile(srcText, context);\n    }\n    return srcText;\n  }\n\n  renderRandom(srcInput) {\n    const input = srcInput;\n    const { answers, context } = input;\n    for (let i = 0; i < answers.length; i += 1) {\n      answers[i] = this.renderText(answers[i], context);\n    }\n    return input;\n  }\n\n  indexOfAnswer(locale, intent, answer, opts) {\n    if (!this.responses[locale]) {\n      return -1;\n    }\n    if (!this.responses[locale][intent]) {\n      return -1;\n    }\n    const potential = this.responses[locale][intent];\n    for (let i = 0; i < potential.length; i += 1) {\n      const response = potential[i];\n      if (\n        response.answer === answer &&\n        JSON.stringify(response.opts) === JSON.stringify(opts)\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  add(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      return this.responses[locale][intent][index];\n    }\n    if (!this.responses[locale]) {\n      this.responses[locale] = {};\n    }\n    if (!this.responses[locale][intent]) {\n      this.responses[locale][intent] = [];\n    }\n    const obj = { answer, opts };\n    this.responses[locale][intent].push(obj);\n    return obj;\n  }\n\n  remove(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      this.responses[locale][intent].splice(index, 1);\n    }\n  }\n\n  defaultPipelineFind(input) {\n    let output = this.findAllAnswers(input);\n    output = this.filterAnswers(output);\n    output = this.renderRandom(output);\n    output = this.chooseRandom(output);\n    return output;\n  }\n\n  find(locale, intent, context, settings) {\n    const input = {\n      locale,\n      intent,\n      context,\n      settings: settings || this.settings,\n    };\n    if (this.pipelineFind) {\n      return this.runPipeline(input, this.pipelineFind);\n    }\n    return this.defaultPipelineFind(input);\n  }\n\n  run(srcInput, settings) {\n    return this.find(\n      srcInput.locale,\n      srcInput.intent,\n      srcInput.context,\n      settings\n    );\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      responses: this.responses,\n    };\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.responses = json.responses;\n  }\n}\n\nmodule.exports = NlgManager;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\n\n/**\n * Action Manager.\n * It stores the actions that should be executed for a given intent.\n */\nclass ActionManager extends Clonable {\n  /**\n   * Constructor of the class\n   */\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'action-manager';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.actions = {};\n    this.actionsMap = {};\n    this.applySettings(this, {\n      pipelineFind: this.getPipeline(`${this.settings.tag}-find`),\n    });\n  }\n\n  registerDefault() {}\n\n  /**\n   * Find the index of an action\n   * @param {String} intent Name of the intent.\n   * @param {String} action Name of the action.\n   * @param {any[]} parameters list of parameters of the action.\n   */\n  posAction(intent, action, parameters) {\n    if (!this.actions[intent]) {\n      return -1;\n    }\n    const actions = this.actions[intent];\n    for (let i = 0; i < actions.length; i += 1) {\n      if (\n        actions[i].action === action &&\n        JSON.stringify(actions[i].parameters) === JSON.stringify(parameters)\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Return an array of actions for the intent.\n   * @param {String} intent Name of the intent.\n   * @returns {Object[]} Actions for this intent.\n   */\n  findActions(intent) {\n    const dehydratedActions = this.actions[intent] || [];\n\n    return dehydratedActions.map((actionBundle) => ({\n      ...actionBundle,\n      fn: this.actionsMap[actionBundle.action],\n    }));\n  }\n\n  /**\n   * Returns a processed answer after execute a list of given actions.\n   * @param {String} intent Name of the intent.\n   * @param {String|Object} input original answer data structure\n   */\n  async processActions(intent, input) {\n    const actionList = this.findActions(intent);\n    if (input && typeof input === 'object') {\n      input.actions = actionList.map((x) => ({\n        action: x.action,\n        parameters: x.parameters,\n      }));\n    }\n    let processedAnswer = input;\n\n    for (const { fn, parameters } of actionList) {\n      if (fn) {\n        const newProcessedAnswer = await fn(\n          processedAnswer,\n          ...(parameters || [])\n        );\n        if (newProcessedAnswer) {\n          if (typeof processedAnswer === 'object') {\n            if (typeof newProcessedAnswer === 'object') {\n              processedAnswer = newProcessedAnswer;\n            } else {\n              processedAnswer.answer = newProcessedAnswer;\n            }\n          } else {\n            processedAnswer = newProcessedAnswer;\n          }\n        }\n      }\n    }\n\n    return processedAnswer;\n  }\n\n  /**\n   * Add an action to a given intent.\n   * @param {String} intent Name of the intent.\n   * @param {String} action Action to be executed\n   * @param {any[]} parameters Parameters of the action\n   * @param {function} [fn] Function of the action\n   */\n  addAction(intent, action, parameters, fn) {\n    if (this.posAction(intent, action, parameters) === -1) {\n      if (!this.actions[intent]) {\n        this.actions[intent] = [];\n      }\n      this.actions[intent].push({ action, parameters });\n      if (fn) {\n        this.actionsMap[action] = fn;\n      }\n    }\n  }\n\n  /**\n   * Remove an action.\n   * @param {String} intent Name of the intent\n   * @param {String} action Name of the action\n   * @param {Object[]} parameters Parameters of the action.\n   */\n  removeAction(intent, action, parameters) {\n    const index = this.posAction(intent, action, parameters);\n    if (index > -1) {\n      this.actions[intent].splice(index, 1);\n    }\n  }\n\n  /**\n   * Remove all the actions of a given intent.\n   * @param {String} intent Name of the intent.\n   */\n  removeActions(intent) {\n    delete this.actions[intent];\n  }\n\n  /**\n   * Registers/Sets a function for a given action\n   * @param {String} action Name of the action.\n   * @param {function} [fn] Function of the action\n   */\n  registerActionInMap(action, fn) {\n    this.actionsMap[action] = fn;\n  }\n\n  /**\n   * Remove an action function from the actions map.\n   * @param {String} action Name of the action.\n   */\n  removeActionFromMap(action) {\n    delete this.actionsMap[action];\n  }\n\n  run(srcInput, settings) {\n    const input = srcInput;\n    input.settings = input.settings || settings || this.settings;\n    return this.processActions(srcInput.intent, input);\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      actions: this.actions,\n    };\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.actions = json.actions;\n  }\n}\n\nmodule.exports = ActionManager;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst NlgManager = require('./nlg-manager');\nconst ActionManager = require('./action-manager');\n\nmodule.exports = {\n  NlgManager,\n  ActionManager,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\n\nclass SentimentAnalyzer extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'sentiment-analyzer';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.applySettings(this, {\n      pipelinePrepare: this.getPipeline(`${this.settings.tag}-prepare`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('sentiment-analyzer', {}, false);\n  }\n\n  prepare(locale, text, settings, stemmed) {\n    const pipeline = this.getPipeline(`${this.settings.tag}-prepare`);\n    if (pipeline) {\n      const input = {\n        text,\n        locale,\n        settings: settings || this.settings,\n      };\n      return this.runPipeline(input, pipeline);\n    }\n    if (stemmed) {\n      const stemmer =\n        this.container.get(`stemmer-${locale}`) ||\n        this.container.get(`stemmer-en`);\n      if (stemmer) {\n        return stemmer.tokenizeAndStem(text);\n      }\n    }\n    const tokenizer =\n      this.container.get(`tokenizer-${locale}`) ||\n      this.container.get(`tokenizer-en`);\n    if (tokenizer) {\n      return tokenizer.tokenize(text, true);\n    }\n    const normalized = text\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .toLowerCase();\n    return normalized.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter((x) => x);\n  }\n\n  async getDictionary(srcInput) {\n    const input = srcInput;\n    const dictionaries = this.container.get(`sentiment-${input.locale}`);\n    let type;\n    if (dictionaries) {\n      if (dictionaries.senticon) {\n        type = 'senticon';\n      } else if (dictionaries.pattern) {\n        type = 'pattern';\n      } else if (dictionaries.afinn) {\n        type = 'afinn';\n      }\n    }\n    if (!type) {\n      input.sentimentDictionary = {\n        type,\n        dictionary: undefined,\n        negations: [],\n        stemmed: false,\n      };\n      return input;\n    }\n    input.sentimentDictionary = {\n      type,\n      dictionary: dictionaries[type],\n      negations: dictionaries.negations.words,\n      stemmed:\n        dictionaries.stemmed === undefined ? false : dictionaries.stemmed,\n    };\n    return input;\n  }\n\n  async getTokens(srcInput) {\n    const input = srcInput;\n    if (!input.tokens && input.sentimentDictionary.type) {\n      input.tokens = await this.prepare(\n        input.locale,\n        input.utterance || input.text,\n        input.settings,\n        input.sentimentDictionary.stemmed\n      );\n    }\n    return input;\n  }\n\n  calculate(srcInput) {\n    const input = srcInput;\n    if (input.sentimentDictionary.type) {\n      const tokens = Array.isArray(input.tokens)\n        ? input.tokens\n        : Object.keys(input.tokens);\n      if (!input.sentimentDictionary.dictionary) {\n        input.sentiment = {\n          score: 0,\n          numWords: tokens.length,\n          numHits: 0,\n          average: 0,\n          type: input.sentimentDictionary.type,\n          locale: input.locale,\n        };\n      } else {\n        const { dictionary } = input.sentimentDictionary;\n        const { negations } = input.sentimentDictionary;\n        let score = 0;\n        let negator = 1;\n        let numHits = 0;\n        for (let i = 0; i < tokens.length; i += 1) {\n          const token = tokens[i].toLowerCase();\n          if (negations.indexOf(token) !== -1) {\n            negator = -1;\n            numHits += 1;\n          } else if (dictionary[token] !== undefined) {\n            score += negator * dictionary[token];\n            numHits += 1;\n          }\n        }\n        input.sentiment = {\n          score,\n          numWords: tokens.length,\n          numHits,\n          average: score / tokens.length,\n          type: input.sentimentDictionary.type,\n          locale: input.locale,\n        };\n      }\n    } else {\n      input.sentiment = {\n        score: 0,\n        numWords: 0,\n        numHits: 0,\n        average: 0,\n        type: input.sentimentDictionary.type,\n        locale: input.locale,\n      };\n    }\n    if (input.sentiment.score > 0) {\n      input.sentiment.vote = 'positive';\n    } else if (input.sentiment.score < 0) {\n      input.sentiment.vote = 'negative';\n    } else {\n      input.sentiment.vote = 'neutral';\n    }\n    return input;\n  }\n\n  async defaultPipelineProcess(input) {\n    let output = await this.getDictionary(input);\n    output = await this.getTokens(output);\n    output = await this.calculate(output);\n    delete output.sentimentDictionary;\n    return output;\n  }\n\n  process(srcInput, settings) {\n    const input = srcInput;\n    input.settings = input.settings || settings || this.settings;\n    if (this.pipelineProcess) {\n      return this.runPipeline(input, this.pipelineProcess);\n    }\n    return this.defaultPipelineProcess(input);\n  }\n}\n\nmodule.exports = SentimentAnalyzer;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst SentimentAnalyzer = require('./sentiment-analyzer');\n\nmodule.exports = {\n  SentimentAnalyzer,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Class for a Slot Manager that takes care of the slot information.\n */\nclass SlotManager {\n  /**\n   * Constructor of the class.\n   */\n  constructor() {\n    this.intents = {};\n    this.isEmpty = true;\n  }\n\n  /**\n   * Returns an slot given the intent and entity.\n   * @param {String} intent Name of the intent.\n   * @param {String} entity Name of the entity.\n   * @returns {Object} Slot or undefined if not found.\n   */\n  getSlot(intent, entity) {\n    if (!this.intents[intent]) {\n      return undefined;\n    }\n    return this.intents[intent][entity];\n  }\n\n  /**\n   * Indicates if a given slot exists, given the intent and entity.\n   * @param {String} intent Name of the intent.\n   * @param {String} entity Name of the entity.\n   * @returns {boolean} True if the slot exists, false otherwise.\n   */\n  existsSlot(intent, entity) {\n    return this.getSlot(intent, entity) !== undefined;\n  }\n\n  /**\n   * Adds a new slot for a given intent and entity.\n   * @param {String} intent Name of the intent.\n   * @param {String} entity Name of the entity.\n   * @param {boolean} [mandatory=false] Flag indicating if is mandatory or optional.\n   * @param {Object} [questions] Question to ask when is mandatory, by locale.\n   * @returns {Object} New slot instance.\n   */\n  addSlot(intent, entity, mandatory = false, questions) {\n    this.isEmpty = false;\n    if (!this.intents[intent]) {\n      this.intents[intent] = {};\n    }\n    this.intents[intent][entity] = {\n      intent,\n      entity,\n      mandatory,\n      locales: questions || {},\n    };\n    return this.intents[intent][entity];\n  }\n\n  /**\n   * Adds/modifies the parameter of a slot for a given intent and entity.\n   * Slot questions for same locales as already existing will be overwritten.\n   * If the slot for the intent and entity does not exist it fill be created.\n   * @param {String} intent Name of the intent.\n   * @param {String} entity Name of the entity.\n   * @param {boolean} mandatory Flag indicating if is mandatory or optional.\n   * @param {Object} [questions] Question to ask when is mandatory, by locale.\n   * @returns {Object} New/Modified slot instance or undefined if not existing\n   */\n  updateSlot(intent, entity, mandatory, questions) {\n    if (!this.intents[intent] || !this.intents[intent][entity]) {\n      return this.addSlot(intent, entity, mandatory, questions);\n    }\n    const slot = this.intents[intent][entity];\n    if (mandatory !== undefined) {\n      // Update mandatory flag only if provided\n      slot.mandatory = mandatory;\n    }\n    slot.locales = Object.assign(slot.locales, questions);\n    return this.intents[intent][entity];\n  }\n\n  /**\n   * Remove an slot given the intent and the entity.\n   * @param {String} intent Name of the intent.\n   * @param {String} entity Name of the entity.\n   */\n  removeSlot(intent, entity) {\n    if (this.intents[intent]) {\n      delete this.intents[intent][entity];\n    }\n  }\n\n  /**\n   * Add several entities if they don't exists.\n   * @param {String} intent Name of the intent.\n   * @param {String[]} entities List of entities.\n   * @returns {Object[]} Array of resulting entities.\n   */\n  addBatch(intent, entities) {\n    const result = [];\n    if (entities && entities.length > 0) {\n      entities.forEach((entity) => {\n        let slot = this.getSlot(intent, entity);\n        if (!slot) {\n          slot = this.addSlot(intent, entity);\n        }\n        result.push(slot);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Given an intent, return the array of entity names of this intent.\n   * @param {String} intent Name of the intent.\n   * @returns {String[]} Array of entity names of the intent.\n   */\n  getIntentEntityNames(intent) {\n    if (!this.intents[intent]) {\n      return undefined;\n    }\n    return Object.keys(this.intents[intent]);\n  }\n\n  /**\n   * Given an intent return the information if the intent has entities defined\n   *\n   * @param {String} intent Name of the intent.\n   * @returns {boolean} true if intent has defined entities, else false\n   */\n  hasIntentEntities(intent) {\n    return this.getIntentEntityNames(intent).length > 0;\n  }\n\n  /**\n   * Clear the slot manager.\n   */\n  clear() {\n    this.intents = {};\n  }\n\n  /**\n   * Loads the slot manager content.\n   * @param {Object} src Source content.\n   */\n  load(src) {\n    this.intents = src || {};\n    this.isEmpty = Object.keys(this.intents).length === 0;\n  }\n\n  /**\n   * Returns the slot manager content.\n   * @returns {Object} Slot manager content.\n   */\n  save() {\n    return this.intents;\n  }\n\n  /**\n   * Given an intent return the mandatory slots.\n   * @param {String} intent Name of the intent\n   * @returns {Object} Object with the mandatory slots.\n   */\n  getMandatorySlots(intent) {\n    const result = {};\n    const intentSlots = this.intents[intent];\n    if (intentSlots) {\n      const keys = Object.keys(intentSlots);\n      for (let i = 0, l = keys.length; i < l; i += 1) {\n        const slot = intentSlots[keys[i]];\n        if (slot.mandatory) {\n          result[slot.entity] = slot;\n        }\n      }\n    }\n    return result;\n  }\n\n  cleanContextEntities(intent, srcContext) {\n    const context = srcContext;\n    if (context.slotFill) {\n      return;\n    }\n    const mandatorySlots = this.getMandatorySlots(intent);\n    const keys = Object.keys(mandatorySlots);\n    if (keys.length === 0) {\n      return;\n    }\n    keys.forEach((key) => {\n      delete context[key];\n    });\n  }\n\n  generateEntityAliases(entities) {\n    const aliases = [];\n    const dict = {};\n    for (let i = 0; i < entities.length; i += 1) {\n      const entity = entities[i];\n      if (!dict[entity.entity]) {\n        dict[entity.entity] = [];\n      }\n      aliases[i] = `${entity.entity}_${dict[entity.entity].length}`;\n      dict[entity.entity].push(true);\n    }\n    return aliases;\n  }\n\n  process(srcResult, srcContext) {\n    const result = srcResult;\n    const context = srcContext;\n    this.cleanContextEntities(result.intent, context);\n    if (context.slotFill) {\n      // if we have slotFill values we set the context to be the same as before\n      result.intent = context.slotFill.intent;\n      result.answer = context.slotFill.answer;\n      result.srcAnswer = context.slotFill.srcAnswer;\n    }\n    if (!result.intent || result.intent === 'None') {\n      // No intent found, we repeat the answer from last time\n      return false;\n    }\n    if (context.slotFill && context.slotFill.intent === result.intent) {\n      result.entities = [...context.slotFill.entities, ...result.entities];\n    }\n    const mandatorySlots = this.getMandatorySlots(result.intent);\n    let keys = Object.keys(mandatorySlots);\n    if (keys.length === 0) {\n      // No mandatory entities defined, we repeat the answer from last time\n      return false;\n    }\n    const aliases = this.generateEntityAliases(result.entities);\n    for (let i = 0, l = result.entities.length; i < l; i += 1) {\n      const entity = result.entities[i];\n      // Remove existing mandatory entities to see what's left\n      delete mandatorySlots[entity.entity];\n      delete mandatorySlots[aliases[i]];\n    }\n    if (context.slotFill && mandatorySlots[context.slotFill.currentSlot]) {\n      // Last time requested slot was not filled by current answer automatically,\n      // so add whole utterance as answer for the requested slow\n      // Do this because automatically parsed entities by builtins like \"duration\" are\n      // added automatically, and we don't want to have duplicated entries in the list\n      result.entities.push({\n        entity: context.slotFill.currentSlot,\n        utteranceText: result.utterance,\n        sourceText: result.utterance,\n        accuracy: 0.95,\n        start: 0,\n        end: result.utterance.length - 1,\n        len: result.utterance.length,\n        isSlotFillingFallback: true,\n      });\n      delete mandatorySlots[context.slotFill.currentSlot];\n    }\n    keys = Object.keys(mandatorySlots);\n    if (context.slotFill && context.slotFill.currentSlot) {\n      context.slotFill.latestSlot = context.slotFill.currentSlot;\n    }\n    if (!keys || keys.length === 0) {\n      // All mandatory slots are filled, so we are done. No further questions needed\n      delete result.srcAnswer;\n      return true;\n    }\n    if (context.slotFill && context.slotFill.intent === result.intent) {\n      result.localeIso2 = context.slotFill.localeIso2;\n    }\n    result.slotFill = {\n      localeIso2: result.localeIso2,\n      intent: result.intent,\n      entities: result.entities,\n      answer: result.answer,\n      srcAnswer: result.srcAnswer,\n    };\n    if (context.slotFill && context.slotFill.latestSlot) {\n      result.slotFill.latestSlot = context.slotFill.latestSlot;\n    }\n    const currentSlot = mandatorySlots[keys[0]];\n    result.slotFill.currentSlot = currentSlot.entity;\n    result.srcAnswer = currentSlot.locales[result.localeIso2];\n    context.slotFill = result.slotFill;\n    return true;\n  }\n}\n\nmodule.exports = SlotManager;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst SlotManager = require('./slot-manager');\n\nmodule.exports = {\n  SlotManager,\n};\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\n\nconst dataName = '_data';\n\nclass ContextManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      { settings: {}, container: settings.container || container },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `context-manager`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.contextDictionary = {};\n    this.defaultData = {};\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('context-manager', {\n      tableName: 'context',\n    });\n  }\n\n  async getInputContextId(input) {\n    let result;\n    if (this.onGetInputContextId) {\n      result = await this.onGetInputContextId(input);\n    }\n    if (!result && input && input.activity) {\n      if (input.activity.address && input.activity.address.conversation) {\n        result = input.activity.address.conversation.id;\n      } else if (input.activity.conversation) {\n        result = input.activity.conversation.id;\n      }\n    }\n    return result;\n  }\n\n  async getContext(input) {\n    const id = await this.getInputContextId(input);\n    let result;\n    if (id) {\n      if (this.settings.tableName) {\n        const database = this.container\n          ? this.container.get('database')\n          : undefined;\n        if (database) {\n          result = (await database.findOne(this.settings.tableName, {\n            conversationId: id,\n          })) || { conversationId: id };\n        }\n      }\n      if (!result) {\n        result = this.contextDictionary[id] || { conversationId: id };\n      }\n    } else {\n      result = {};\n    }\n    result[dataName] = this.defaultData;\n    return result;\n  }\n\n  async setContext(input, context) {\n    const logger = this.container.get('logger');\n    const id = await this.getInputContextId(input);\n    if (id) {\n      if (!context.id) {\n        const savedContext = await this.getContext(input);\n        if (savedContext) {\n          context.id = savedContext.id;\n        }\n      }\n      const keys = Object.keys(context);\n      const clone = { conversationId: id };\n      for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (!key.startsWith('_')) {\n          clone[key] = context[key];\n        }\n      }\n      if (this.settings.tableName) {\n        const database = this.container\n          ? this.container.get('database')\n          : undefined;\n        if (database) {\n          await database.save(this.settings.tableName, clone);\n        } else {\n          this.contextDictionary[id] = clone;\n        }\n      } else {\n        this.contextDictionary[id] = clone;\n      }\n      if (this.onCtxUpdate) {\n        logger.debug(`emmitting event onCtxUpdate...`);\n        await this.onCtxUpdate(clone);\n      }\n    }\n  }\n\n  async resetConversations() {\n    for (const cid of Object.keys(this.contextDictionary)) {\n      await this.resetConversation(cid);\n    }\n  }\n\n  async resetConversation(cid) {\n    const logger = this.container.get('logger');\n    logger.debug(`resetting context in conversation: ${cid}`);\n    const conversationCtx = this.contextDictionary[cid];\n    Object.keys(conversationCtx).forEach((convCtxKey) => {\n      delete conversationCtx[convCtxKey];\n    });\n    this.contextDictionary[cid].dialogStack = [];\n    this.contextDictionary[cid].variableName = undefined;\n  }\n}\n\nmodule.exports = ContextManager;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, containerBootstrap } = require('@nlpjs/core');\nconst { NluManager, NluNeural } = require('@nlpjs/nlu');\nconst {\n  Ner,\n  ExtractorEnum,\n  ExtractorRegex,\n  ExtractorTrim,\n  ExtractorBuiltin,\n} = require('@nlpjs/ner');\nconst { ActionManager, NlgManager } = require('@nlpjs/nlg');\nconst { SentimentAnalyzer } = require('@nlpjs/sentiment');\nconst { SlotManager } = require('@nlpjs/slot');\nconst ContextManager = require('./context-manager');\n\nclass Nlp extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container || containerBootstrap(),\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `nlp`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.nluManager = this.container.get('nlu-manager', this.settings.nlu);\n    this.ner = this.container.get('ner', this.settings.ner);\n    this.nlgManager = this.container.get('nlg-manager', this.settings.nlg);\n    this.actionManager = this.container.get(\n      'action-manager',\n      this.settings.action\n    );\n    this.sentiment = this.container.get(\n      'sentiment-analyzer',\n      this.settings.sentiment\n    );\n    this.slotManager = this.container.get('SlotManager', this.settings.slot);\n    this.contextManager = this.container.get(\n      'context-manager',\n      this.settings.context\n    );\n    this.forceNER = this.settings.forceNER;\n    if (this.forceNER === undefined) {\n      this.forceNER = false;\n    }\n    this.initialize();\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      'nlp',\n      {\n        threshold: 0.5,\n        autoLoad: true,\n        autoSave: true,\n        modelFileName: 'model.nlp',\n        executeActionsBeforeAnswers: false,\n      },\n      false\n    );\n    this.use(NluManager);\n    this.use(Ner);\n    this.use(ExtractorEnum);\n    this.use(ExtractorRegex);\n    this.use(ExtractorTrim);\n    this.use(ExtractorBuiltin);\n    this.use(NlgManager);\n    this.use(ActionManager);\n    this.use(NluNeural);\n    this.use(SentimentAnalyzer);\n    this.use(ContextManager);\n    this.container.register('SlotManager', SlotManager, false);\n  }\n\n  initialize() {\n    if (this.settings.nlu) {\n      const locales = Object.keys(this.settings.nlu);\n      for (let i = 0; i < locales.length; i += 1) {\n        const locale = locales[i];\n        const domains = Object.keys(this.settings.nlu[locale]);\n        for (let j = 0; j < domains.length; j += 1) {\n          const domain = domains[j];\n          const settings = this.settings.nlu[locale][domain];\n          const { className } = settings;\n          delete settings.className;\n          this.useNlu(className, locale, domain, settings);\n        }\n      }\n    }\n    if (this.settings.languages) {\n      this.addLanguage(this.settings.languages);\n    }\n    if (this.settings.locales) {\n      this.addLanguage(this.settings.locales);\n    }\n    if (this.settings.calculateSentiment === undefined) {\n      this.settings.calculateSentiment = true;\n    }\n    if (this.settings.executeActionsBeforeAnswers === undefined) {\n      this.settings.executeActionsBeforeAnswers = false;\n    }\n  }\n\n  async start() {\n    if (this.settings.corpora) {\n      await this.addCorpora(this.settings.corpora);\n    }\n  }\n\n  async loadOrTrain() {\n    let loaded = false;\n    if (this.settings.autoLoad) {\n      loaded = await this.load(this.settings.modelFileName);\n    }\n    if (!loaded) {\n      await this.train();\n    }\n  }\n\n  useNlu(clazz, locale, domain, settings) {\n    if (!locale) {\n      locale = '??';\n    }\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.useNlu(clazz, locale[i], domain, settings);\n      }\n    } else {\n      const className =\n        typeof clazz === 'string' ? clazz : this.container.use(clazz);\n      let config = this.container.getConfiguration(`domain-manager-${locale}`);\n      if (!config) {\n        config = {};\n        this.container.registerConfiguration(\n          `domain-manager-${locale}`,\n          config\n        );\n      }\n      if (!config.nluByDomain) {\n        config.nluByDomain = {};\n      }\n      const domainName = !domain || domain === '*' ? 'default' : domain;\n      if (!config.nluByDomain[domainName]) {\n        config.nluByDomain[domainName] = {};\n      }\n      config.nluByDomain[domainName].className = className;\n      config.nluByDomain[domainName].settings = settings;\n    }\n  }\n\n  guessLanguage(input) {\n    return this.nluManager.guessLanguage(input);\n  }\n\n  addLanguage(locales) {\n    return this.nluManager.addLanguage(locales);\n  }\n\n  removeLanguage(locales) {\n    return this.nluManager.removeLanguage(locales);\n  }\n\n  addAdditionalEnumEntityUtterances() {\n    if (!this.settings.languages) {\n      return;\n    }\n    this.settings.languages.forEach((locale) => {\n      const replaceTexts = {};\n      const rules = this.ner.getRules(locale);\n      rules.forEach((rule) => {\n        if (rule.type === 'enum') {\n          const entityName = this.ner.nameToEntity(rule.name);\n          replaceTexts[entityName] = replaceTexts[entityName] || [];\n          rule.rules.forEach((value) => {\n            replaceTexts[entityName] = replaceTexts[entityName].concat(\n              value.texts\n            );\n          });\n        }\n      });\n      const manager = this.nluManager.consolidateManager(locale);\n      const sentences = manager.getSentences();\n      sentences.forEach((sentence) => {\n        const entities = this.ner\n          .getEntitiesFromUtterance(locale, sentence.utterance)\n          .map((entityName) => this.ner.nameToEntity(entityName));\n        this.replaceEnumEntitiesInSentence(\n          manager,\n          locale,\n          sentence.domain,\n          sentence.utterance,\n          sentence.intent,\n          entities,\n          replaceTexts\n        );\n      });\n    });\n  }\n\n  replaceEnumEntitiesInSentence(\n    manager,\n    locale,\n    domain,\n    utterance,\n    intent,\n    entityList,\n    replaceTexts\n  ) {\n    if (!entityList.length) {\n      this.nluManager.guesser.addExtraSentence(locale, utterance);\n      manager.add(domain, utterance, intent);\n      return;\n    }\n    const entityName = entityList[0];\n    if (replaceTexts[entityName] && replaceTexts[entityName].length) {\n      replaceTexts[entityName].forEach((replaceText) => {\n        const entityUtterance = utterance.replace(entityName, replaceText);\n        this.replaceEnumEntitiesInSentence(\n          manager,\n          locale,\n          domain,\n          entityUtterance,\n          intent,\n          entityList.slice(1),\n          replaceTexts\n        );\n      });\n    } else {\n      this.replaceEnumEntitiesInSentence(\n        manager,\n        locale,\n        domain,\n        utterance,\n        intent,\n        entityList.slice(1),\n        replaceTexts\n      );\n    }\n  }\n\n  addDocument(locale, utterance, intent) {\n    const entities = this.ner.getEntitiesFromUtterance(utterance);\n    this.slotManager.addBatch(intent, entities);\n    return this.nluManager.add(locale, utterance, intent);\n  }\n\n  removeDocument(locale, utterance, intent) {\n    return this.nluManager.remove(locale, utterance, intent);\n  }\n\n  getRulesByName(locale, name) {\n    return this.ner.getRulesByName(locale, name);\n  }\n\n  addNerRule(locale, name, type, rule) {\n    return this.ner.addRule(locale, name, type, rule);\n  }\n\n  removeNerRule(locale, name, rule) {\n    return this.ner.removeRule(locale, name, rule);\n  }\n\n  addNerRuleOptionTexts(locale, name, option, texts) {\n    return this.ner.addRuleOptionTexts(locale, name, option, texts);\n  }\n\n  removeNerRuleOptionTexts(locale, name, option, texts) {\n    return this.ner.removeRuleOptionTexts(locale, name, option, texts);\n  }\n\n  addNerRegexRule(locale, name, regex) {\n    return this.ner.addRegexRule(locale, name, regex);\n  }\n\n  addNerBetweenCondition(locale, name, left, right, opts) {\n    return this.ner.addBetweenCondition(locale, name, left, right, opts);\n  }\n\n  addNerBetweenLastCondition(locale, name, left, right, opts) {\n    return this.ner.addBetweenLastCondition(locale, name, left, right, opts);\n  }\n\n  addNerPositionCondition(locale, name, position, words, opts) {\n    return this.ner.addPositionCondition(locale, name, position, words, opts);\n  }\n\n  addNerAfterCondition(locale, name, words, opts) {\n    return this.ner.addAfterCondition(locale, name, words, opts);\n  }\n\n  addNerAfterFirstCondition(locale, name, words, opts) {\n    return this.ner.addAfterFirstCondition(locale, name, words, opts);\n  }\n\n  addNerAfterLastCondition(locale, name, words, opts) {\n    return this.ner.addAfterLastCondition(locale, name, words, opts);\n  }\n\n  addNerBeforeCondition(locale, name, words, opts) {\n    return this.ner.addBeforeCondition(locale, name, words, opts);\n  }\n\n  addNerBeforeFirstCondition(locale, name, words, opts) {\n    return this.ner.addBeforeFirstCondition(locale, name, words, opts);\n  }\n\n  addNerBeforeLastCondition(locale, name, words, opts) {\n    return this.ner.addBeforeLastCondition(locale, name, words, opts);\n  }\n\n  assignDomain(locale, intent, domain) {\n    return this.nluManager.assignDomain(locale, intent, domain);\n  }\n\n  getIntentDomain(locale, intent) {\n    return this.nluManager.getIntentDomain(locale, intent);\n  }\n\n  getDomains() {\n    return this.nluManager.getDomains();\n  }\n\n  addAction(intent, action, parameters, fn) {\n    return this.actionManager.addAction(intent, action, parameters, fn);\n  }\n\n  registerActionFunction(action, fn) {\n    return this.actionManager.registerActionInMap(action, fn);\n  }\n\n  getActions(intent) {\n    return this.actionManager.findActions(intent);\n  }\n\n  removeAction(intent, action, parameters) {\n    return this.actionManager.removeAction(intent, action, parameters);\n  }\n\n  removeActions(intent) {\n    return this.actionManager.removeActions(intent);\n  }\n\n  removeActionFunction(action) {\n    return this.actionManager.removeActionFromMap(action);\n  }\n\n  addAnswer(locale, intent, answer, opts) {\n    return this.nlgManager.add(locale, intent, answer, opts);\n  }\n\n  removeAnswer(locale, intent, answer, opts) {\n    return this.nlgManager.remove(locale, intent, answer, opts);\n  }\n\n  findAllAnswers(locale, intent) {\n    const response = this.nlgManager.findAllAnswers({ locale, intent });\n    return response.answers;\n  }\n\n  async addCorpora(names) {\n    if (names) {\n      if (Array.isArray(names)) {\n        for (let i = 0; i < names.length; i += 1) {\n          await this.addCorpus(names[i]);\n        }\n      } else {\n        await this.addCorpus(names);\n      }\n    }\n  }\n\n  async addImported(input) {\n    let content;\n    if (input.content) {\n      content = input.content;\n    } else if (input.filename) {\n      const fs = this.container.get('fs');\n      content = await fs.readFile(input.filename);\n      if (!content) {\n        throw new Error(`Corpus not found \"${input.filename}\"`);\n      }\n    } else {\n      throw new Error('Corpus information without content or file name');\n    }\n    let importer = this.container.get(input.importer);\n    if (!importer) {\n      importer = this.container.get(`${input.importer}-importer`);\n    }\n    if (!importer) {\n      throw new Error(`Corpus importer not found: ${input.importer}`);\n    }\n    const corpora = importer.transform(content, input);\n    for (let i = 0; i < corpora.length; i += 1) {\n      this.addCorpus(corpora[i]);\n    }\n  }\n\n  addEntities(entities, locale) {\n    const keys = Object.keys(entities);\n    for (let i = 0; i < keys.length; i += 1) {\n      const entityName = keys[i];\n      let entity = entities[entityName];\n      if (typeof entity === 'string') {\n        entity = { regex: [entity] };\n      }\n      let finalLocale = entity.locale;\n      if (!finalLocale) {\n        finalLocale = locale || 'en';\n      }\n      if (typeof finalLocale === 'string') {\n        finalLocale = finalLocale.slice(0, 2);\n      }\n      if (entity.options) {\n        const optionNames = Object.keys(entity.options);\n        for (let j = 0; j < optionNames.length; j += 1) {\n          this.addNerRuleOptionTexts(\n            finalLocale,\n            entityName,\n            optionNames[j],\n            entity.options[optionNames[j]]\n          );\n        }\n      }\n      if (entity.regex) {\n        if (Array.isArray(entity.regex)) {\n          for (let j = 0; j < entity.regex.length; j += 1) {\n            this.addNerRegexRule(finalLocale, entityName, entity.regex[j]);\n          }\n        } else if (typeof entity.regex === 'string' && entity.regex.trim()) {\n          this.addNerRegexRule(finalLocale, entityName, entity.regex);\n        }\n      }\n      if (entity.trim) {\n        for (let j = 0; j < entity.trim.length; j += 1) {\n          switch (entity.trim[j].position) {\n            case 'after':\n            case 'afterLast':\n            case 'afterFirst':\n            case 'before':\n            case 'beforeFirst':\n            case 'beforeLast':\n              this.addNerPositionCondition(\n                finalLocale,\n                entityName,\n                entity.trim[j].position,\n                entity.trim[j].words,\n                entity.trim[j].opts\n              );\n              break;\n            case 'between':\n              this.addNerBetweenCondition(\n                finalLocale,\n                entityName,\n                entity.trim[j].leftWords,\n                entity.trim[j].rightWords,\n                entity.trim[j].opts\n              );\n              break;\n            case 'betweenLast':\n              this.addNerBetweenLastCondition(\n                finalLocale,\n                entityName,\n                entity.trim[j].leftWords,\n                entity.trim[j].rightWords,\n                entity.trim[j].opts\n              );\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  addData(data, locale, domain) {\n    for (let i = 0; i < data.length; i += 1) {\n      const current = data[i];\n      const { intent, utterances, answers, slotFilling, actions } = current;\n      for (let j = 0; j < utterances.length; j += 1) {\n        if (domain) {\n          this.assignDomain(locale, intent, domain.name);\n        }\n        this.addDocument(locale, utterances[j], intent);\n      }\n      if (answers) {\n        for (let j = 0; j < answers.length; j += 1) {\n          const answer = answers[j];\n          if (typeof answer === 'string') {\n            this.addAnswer(locale, intent, answer);\n          } else {\n            this.addAnswer(locale, intent, answer.answer, answer.opts);\n          }\n        }\n      }\n      if (slotFilling) {\n        const entities = Object.keys(slotFilling);\n        for (let j = 0; j < entities.length; j += 1) {\n          const slot = slotFilling[entities[j]];\n          let mandatory;\n          const slotQuestions = {};\n          if (typeof slot === 'string') {\n            slotQuestions[locale] = slot;\n            mandatory = true;\n          } else {\n            slotQuestions[locale] = slot.question;\n            mandatory = slot.mandatory || false;\n          }\n          this.slotManager.updateSlot(\n            intent,\n            entities[j],\n            mandatory,\n            slotQuestions\n          );\n        }\n      }\n      if (actions) {\n        actions.forEach((action) => {\n          if (!action) return;\n          if (typeof action === 'object') {\n            if (!action.name) return;\n            this.addAction(intent, action.name, action.parameters || []);\n          } else {\n            this.addAction(intent, action, []);\n          }\n        });\n      }\n    }\n  }\n\n  async addCorpus(fileName) {\n    if (fileName.importer) {\n      await this.addImported(fileName);\n    } else {\n      let corpus = fileName;\n      const fs = this.container.get('fs');\n      if (typeof fileName === 'string') {\n        const fileData = await fs.readFile(fileName);\n        if (!fileData) {\n          throw new Error(`Corpus not found \"${fileName}\"`);\n        }\n        corpus = typeof fileData === 'string' ? JSON.parse(fileData) : fileData;\n      }\n      if (corpus.contextData) {\n        let { contextData } = corpus;\n        if (typeof corpus.contextData === 'string') {\n          contextData = JSON.parse(await fs.readFile(corpus.contextData));\n        }\n        const contextManager = this.container.get('context-manager');\n        const keys = Object.keys(contextData);\n        for (let i = 0; i < keys.length; i += 1) {\n          contextManager.defaultData[keys[i]] = contextData[keys[i]];\n        }\n      }\n      if (corpus.domains) {\n        if (corpus.entities) {\n          this.addEntities(corpus.entities);\n        }\n        for (let i = 0; i < corpus.domains.length; i += 1) {\n          const domain = corpus.domains[i];\n          const { data, entities } = domain;\n          const locale = domain.locale.slice(0, 2);\n          this.addLanguage(locale);\n          if (entities) {\n            this.addEntities(entities, locale);\n          }\n          this.addData(data, locale, domain);\n        }\n      } else {\n        const locale = corpus.locale.slice(0, 2);\n        this.addLanguage(locale);\n        const { data, entities } = corpus;\n        if (entities) {\n          this.addEntities(entities, locale);\n        }\n        this.addData(data, locale);\n      }\n    }\n  }\n\n  getSentiment(locale, utterance) {\n    if (typeof locale === 'object') {\n      return this.sentiment.process(locale);\n    }\n    if (!utterance) {\n      utterance = locale;\n      locale = this.guessLanguage(utterance);\n    }\n    return this.sentiment.process({ utterance, locale });\n  }\n\n  describeLanguage(locale, name) {\n    this.nluManager.describeLanguage(locale, name);\n  }\n\n  async train() {\n    this.nluManager.addLanguage(this.settings.languages);\n    const result = await this.nluManager.train();\n    if (this.settings.autoSave) {\n      await this.save(this.settings.modelFileName, true);\n    }\n    return result;\n  }\n\n  async classify(locale, utterance, settings) {\n    return this.nluManager.process(\n      locale,\n      utterance,\n      settings || this.settings.nlu\n    );\n  }\n\n  async extractEntities(locale, utterance, context, settings) {\n    if (typeof locale === 'object') {\n      return this.ner.process(locale);\n    }\n    if (!utterance) {\n      utterance = locale;\n      locale = undefined;\n    }\n    if (!locale) {\n      locale = this.guessLanguage(utterance);\n    }\n    const output = await this.ner.process({\n      locale,\n      utterance,\n      context,\n      settings: this.applySettings(settings, this.settings.ner),\n    });\n    return output;\n  }\n\n  organizeEntities(entities) {\n    const dict = {};\n    for (let i = 0; i < entities.length; i += 1) {\n      const entity = entities[i];\n      if (!dict[entity.entity]) {\n        dict[entity.entity] = [];\n      }\n      dict[entity.entity].push(entity);\n    }\n    const result = [];\n    Object.keys(dict).forEach((key) => {\n      const arr = dict[key];\n      if (arr.length === 1) {\n        result.push(arr[0]);\n      } else {\n        for (let i = 0; i < arr.length; i += 1) {\n          arr[i].alias = `${key}_${i}`;\n        }\n        result.push({\n          entity: key,\n          isList: true,\n          items: arr,\n        });\n      }\n    });\n    return result;\n  }\n\n  structureEntities(output) {\n    const organizedEntities = this.organizeEntities(output.entities);\n    if (!output.context.entities) {\n      output.context.entities = {};\n    }\n    for (let i = 0; i < organizedEntities.length; i += 1) {\n      const entity = organizedEntities[i];\n      output.context.entities[entity.entity] = entity;\n      if (entity.alias) {\n        output.context[entity.alias] = entity.sourceText;\n      }\n      if (entity.isList) {\n        for (let j = 0; j < entity.items.length; j += 1) {\n          output.context[entity.items[j].alias] = entity.items[j].sourceText;\n        }\n      } else {\n        // assume that there could be more than one entity with the same name\n        output.context[`${entity.entity}_0`] = entity.sourceText;\n      }\n      output.context[entity.entity] = entity.isList\n        ? entity.items[0].sourceText\n        : entity.sourceText;\n    }\n    return output;\n  }\n\n  async process(locale, utterance, srcContext, settings) {\n    let sourceInput;\n    let context = srcContext;\n    if (typeof locale === 'object') {\n      if (typeof utterance === 'object' && utterance.value) {\n        locale = undefined;\n        utterance = utterance.value;\n      } else {\n        sourceInput = locale;\n      }\n    }\n    if (!sourceInput) {\n      if (!utterance) {\n        utterance = locale;\n        locale = undefined;\n      }\n      if (!locale) {\n        locale = this.guessLanguage(utterance);\n      }\n      sourceInput = {\n        locale,\n        utterance,\n        settings,\n      };\n      if (settings) {\n        if (settings.activity && !sourceInput.activity) {\n          sourceInput.activity = settings.activity;\n        }\n        if (settings.conversationId && !sourceInput.activity) {\n          sourceInput.activity = {\n            conversation: {\n              id: settings.conversationId,\n            },\n          };\n        }\n      }\n    } else {\n      locale = sourceInput.locale;\n      utterance =\n        sourceInput.utterance || sourceInput.message || sourceInput.text;\n    }\n    if (!context) {\n      context = await this.contextManager.getContext(sourceInput);\n    }\n    context.channel = sourceInput.channel;\n    context.app = sourceInput.app;\n    context.from = sourceInput.from || null;\n    const input = {\n      locale,\n      utterance,\n      context,\n      settings: this.applySettings(settings, this.settings.nlu),\n    };\n    const forceNER =\n      input.settings && 'forceNER' in input.settings\n        ? input.settings.forceNER\n        : this.forceNER;\n    let output = await this.nluManager.process(input);\n    if (forceNER || !this.slotManager.isEmpty) {\n      const optionalUtterance = await this.ner.generateEntityUtterance(\n        output.locale || locale,\n        utterance\n      );\n      if (optionalUtterance && optionalUtterance !== utterance) {\n        const optionalInput = {\n          locale: output.locale || locale,\n          utterance: optionalUtterance,\n          context,\n          settings: this.applySettings(settings, this.settings.nlu),\n        };\n        const optionalOutput = await this.nluManager.process(optionalInput);\n        if (\n          optionalOutput &&\n          (optionalOutput.score > output.score || output.intent === 'None')\n        ) {\n          output = optionalOutput;\n          output.utterance = utterance;\n          output.optionalUtterance = optionalUtterance;\n        }\n      }\n    }\n    if (output.score < this.settings.threshold) {\n      output.score = 1;\n      output.intent = 'None';\n    }\n    output.context = context;\n    if (forceNER || !this.slotManager.isEmpty) {\n      const intentEntities = this.slotManager.getIntentEntityNames(\n        output.intent\n      );\n      output = await this.ner.process({ ...output }, intentEntities);\n    } else {\n      output.entities = [];\n      output.sourceEntities = [];\n    }\n    const stemmer = this.container.get(`stemmer-${output.locale}`);\n    if (stemmer && stemmer.lastFill) {\n      stemmer.lastFill(output);\n    }\n    output = this.structureEntities(output);\n    if (forceNER || !this.slotManager.isEmpty) {\n      if (this.slotManager.process(output, context)) {\n        // structure entities again because slots may have added\n        output = this.structureEntities(output);\n      }\n      context.slotFill = output.slotFill;\n    }\n    if (this.settings.executeActionsBeforeAnswers) {\n      output = await this.actionManager.run({ ...output });\n    }\n    if (this.settings.executeActionsBeforeAnswers && output.answer) {\n      // Render answer from actions and use as final answer\n      output.answer = this.nlgManager.renderText(output.answer, context);\n    } else {\n      const answers = await this.nlgManager.run({ ...output });\n      output.answers = answers.answers;\n      output.answer = answers.answer;\n    }\n    if (output.srcAnswer) {\n      // Re-Render Answer to also replace newly added entities in srcAnswer\n      output.answer = this.nlgManager.renderText(output.srcAnswer, context);\n    }\n    if (!this.settings.executeActionsBeforeAnswers) {\n      output = await this.actionManager.run({ ...output });\n    }\n    if (this.settings.calculateSentiment) {\n      const sentiment = await this.getSentiment(locale, utterance);\n      output.sentiment = sentiment ? sentiment.sentiment : undefined;\n    }\n    await this.contextManager.setContext(sourceInput, context);\n    delete output.context;\n    delete output.settings;\n    const result = sourceInput\n      ? this.applySettings(sourceInput, output)\n      : output;\n    if (result.intent === 'None' && !result.answer) {\n      const openQuestion = this.container.get('open-question');\n      if (openQuestion) {\n        const qnaAnswer = await openQuestion.getAnswer(\n          result.locale,\n          result.utterance\n        );\n        if (qnaAnswer && qnaAnswer.answer && qnaAnswer.answer.length > 0) {\n          result.answer = qnaAnswer.answer;\n          result.isOpenQuestionAnswer = true;\n          result.openQuestionFirstCharacter = qnaAnswer.position;\n          result.openQuestionScore = qnaAnswer.score;\n        }\n      }\n    }\n    if (this.onIntent) {\n      await this.onIntent(this, result);\n    } else {\n      const eventName = `onIntent(${result.intent})`;\n      const pipeline = this.container.getPipeline(eventName);\n      if (pipeline) {\n        await this.container.runPipeline(pipeline, result, this);\n      }\n    }\n    return result;\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      nluManager: this.nluManager.toJSON(),\n      ner: this.ner.toJSON(),\n      nlgManager: this.nlgManager.toJSON(),\n      actionManager: this.actionManager.toJSON(),\n      slotManager: this.slotManager.save(),\n    };\n    delete result.settings.container;\n\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.nluManager.fromJSON(json.nluManager);\n    this.ner.fromJSON(json.ner);\n    this.nlgManager.fromJSON(json.nlgManager);\n    this.actionManager.fromJSON(json.actionManager);\n    this.slotManager.load(json.slotManager);\n  }\n\n  export(minified = false) {\n    const clone = this.toJSON();\n    return minified ? JSON.stringify(clone) : JSON.stringify(clone, null, 2);\n  }\n\n  import(data) {\n    const clone = typeof data === 'string' ? JSON.parse(data) : data;\n    this.fromJSON(clone);\n  }\n\n  async save(srcFileName, minified = false) {\n    const fs = this.container.get('fs');\n    const fileName = srcFileName || 'model.nlp';\n    await fs.writeFile(fileName, this.export(minified));\n  }\n\n  async load(srcFileName) {\n    const fs = this.container.get('fs');\n    const fileName = srcFileName || 'model.nlp';\n    const data = await fs.readFile(fileName);\n    if (data) {\n      this.import(data);\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = Nlp;\n", "/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Nlp = require('./nlp');\nconst ContextManager = require('./context-manager');\n\nmodule.exports = {\n  Nlp,\n  ContextManager,\n};\n"],
  "mappings": "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",
  "names": ["require_src", "keys", "require_src", "require_src", "require_src", "regex", "require_src", "require_src", "require_src", "require_src", "require_src"]
}
